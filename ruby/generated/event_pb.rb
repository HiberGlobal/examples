# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: event.proto

require 'google/protobuf'

require 'base_pb'
require 'modem_pb'
require 'modem_transfer_pb'
require 'modem_claim_pb'
require 'tag_pb'
require 'token_pb'
require 'user_pb'
require 'webhook_pb'
Google::Protobuf::DescriptorPool.generated_pool.build do
  add_message "hiber.event.Event" do
    optional :is_error, :bool, 1
    oneof :event do
      optional :modem_location_updated, :message, 2, "hiber.event.Event.ModemEvent.ModemLocationUpdatedEvent"
      optional :modem_stale, :message, 3, "hiber.event.Event.ModemEvent.ModemStaleEvent"
      optional :modem_message_received, :message, 4, "hiber.event.Event.ModemEvent.MessageEvent.ModemMessageReceivedEvent"
      optional :modem_message_dropped, :message, 5, "hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDroppedEvent"
      optional :modem_message_delayed, :message, 6, "hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDelayedEvent"
      optional :modem_message_cannot_be_parsed, :message, 7, "hiber.event.Event.ModemEvent.MessageEvent.ModemMessageCannotBeParsedEvent"
      optional :user_added, :message, 8, "hiber.event.Event.UserEvent.UserAddedEvent"
      optional :user_removed, :message, 9, "hiber.event.Event.UserEvent.UserRemovedEvent"
      optional :user_access_request, :message, 10, "hiber.event.Event.UserEvent.UserAccessRequestEvent"
      optional :webhook_created, :message, 11, "hiber.event.Event.WebhookEvent.CreatedEvent"
      optional :webhook_updated, :message, 12, "hiber.event.Event.WebhookEvent.UpdatedEvent"
      optional :webhook_deleted, :message, 13, "hiber.event.Event.WebhookEvent.DeletedEvent"
      optional :webhook_failed, :message, 14, "hiber.event.Event.WebhookEvent.FailedEvent"
      optional :modem_transfer_started, :message, 15, "hiber.event.Event.ModemTransferEvent.ModemTransferStartedEvent"
      optional :modem_transfer_cancelled, :message, 16, "hiber.event.Event.ModemTransferEvent.ModemTransferCancelledEvent"
      optional :modem_transfer_received, :message, 17, "hiber.event.Event.ModemTransferEvent.ModemTransferReceivedEvent"
      optional :modem_transfer_not_received, :message, 18, "hiber.event.Event.ModemTransferEvent.ModemTransferNotReceivedEvent"
      optional :modem_transfer_return_transfer_started, :message, 19, "hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent"
      optional :modem_claimed_event, :message, 20, "hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimedEvent"
      optional :modem_claim_accepted_event, :message, 21, "hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimAcceptedEvent"
      optional :modem_claim_rejected_event, :message, 22, "hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimRejectedEvent"
      optional :token_expiry_warning, :message, 23, "hiber.event.Event.TokenEvent.TokenExpiryWarningEvent"
      optional :token_expired, :message, 24, "hiber.event.Event.TokenEvent.TokenExpiredEvent"
    end
  end
  add_message "hiber.event.Event.ModemEvent" do
  end
  add_message "hiber.event.Event.ModemEvent.ModemLocationUpdatedEvent" do
    optional :organization, :string, 1
    optional :modem_number, :string, 2
    optional :location, :message, 3, "hiber.Location"
    optional :time, :message, 4, "hiber.Timestamp"
    repeated :tags, :message, 5, "hiber.tag.Tag"
    optional :title, :string, 6
    optional :description, :string, 7
  end
  add_message "hiber.event.Event.ModemEvent.ModemStaleEvent" do
    optional :organization, :string, 1
    optional :modem_number, :string, 2
    optional :maximum_inactivity_period, :int32, 3
    optional :time, :message, 4, "hiber.Timestamp"
    optional :last_message, :message, 5, "hiber.Timestamp"
    repeated :tags, :message, 6, "hiber.tag.Tag"
    optional :title, :string, 7
    optional :description, :string, 8
  end
  add_message "hiber.event.Event.ModemEvent.MessageEvent" do
  end
  add_message "hiber.event.Event.ModemEvent.MessageEvent.ModemMessageReceivedEvent" do
    optional :organization, :string, 1
    optional :modem_number, :string, 2
    optional :message, :message, 3, "hiber.modem.ModemMessage"
    repeated :tags, :message, 4, "hiber.tag.Tag"
    optional :title, :string, 5
    optional :description, :string, 6
    optional :time, :message, 7, "hiber.Timestamp"
  end
  add_message "hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDroppedEvent" do
    optional :organization, :string, 1
    optional :modem_number, :string, 2
    optional :dropped_messages, :int32, 3
    optional :message, :message, 4, "hiber.modem.ModemMessage"
    repeated :tags, :message, 5, "hiber.tag.Tag"
    optional :modem_health, :enum, 6, "hiber.Health"
    optional :title, :string, 7
    optional :description, :string, 8
    optional :time, :message, 9, "hiber.Timestamp"
  end
  add_message "hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDelayedEvent" do
    optional :organization, :string, 1
    optional :modem_number, :string, 2
    optional :message, :message, 3, "hiber.modem.ModemMessage"
    optional :delay_seconds, :int64, 4
    repeated :tags, :message, 5, "hiber.tag.Tag"
    optional :modem_health, :enum, 6, "hiber.Health"
    optional :title, :string, 7
    optional :description, :string, 8
    optional :time, :message, 9, "hiber.Timestamp"
  end
  add_message "hiber.event.Event.ModemEvent.MessageEvent.ModemMessageCannotBeParsedEvent" do
    optional :organization, :string, 1
    optional :modem_number, :string, 2
    optional :modem_message_id, :int64, 3
    optional :time, :message, 4, "hiber.Timestamp"
    optional :reason, :string, 5
    repeated :tags, :message, 6, "hiber.tag.Tag"
    optional :title, :string, 7
    optional :description, :string, 8
  end
  add_message "hiber.event.Event.ModemEvent.ClaimEvent" do
  end
  add_message "hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimedEvent" do
    optional :organization, :string, 1
    optional :modem_number, :string, 2
    optional :claim, :message, 3, "hiber.modem.ModemClaim"
    optional :time, :message, 4, "hiber.Timestamp"
    optional :title, :string, 5
    optional :description, :string, 6
    repeated :tags, :message, 7, "hiber.tag.Tag"
  end
  add_message "hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimAcceptedEvent" do
    optional :organization, :string, 1
    optional :modem_number, :string, 2
    optional :claim, :message, 3, "hiber.modem.ModemClaim"
    optional :time, :message, 4, "hiber.Timestamp"
    optional :title, :string, 5
    optional :description, :string, 6
    repeated :tags, :message, 7, "hiber.tag.Tag"
  end
  add_message "hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimRejectedEvent" do
    optional :organization, :string, 1
    optional :modem_number, :string, 2
    optional :claim, :message, 3, "hiber.modem.ModemClaim"
    optional :time, :message, 4, "hiber.Timestamp"
    optional :reason, :enum, 5, "hiber.modem.ModemClaim.RejectReason"
    optional :comment, :string, 6
    optional :title, :string, 7
    optional :description, :string, 8
    repeated :tags, :message, 9, "hiber.tag.Tag"
  end
  add_message "hiber.event.Event.ModemTransferEvent" do
  end
  add_message "hiber.event.Event.ModemTransferEvent.ModemTransferStartedEvent" do
    optional :transfer, :message, 1, "hiber.modem.ModemTransfer"
    optional :organization, :string, 2
    optional :time, :message, 3, "hiber.Timestamp"
    repeated :tags, :message, 4, "hiber.tag.Tag"
    optional :title, :string, 5
    optional :description, :string, 6
  end
  add_message "hiber.event.Event.ModemTransferEvent.ModemTransferCancelledEvent" do
    optional :transfer, :message, 1, "hiber.modem.ModemTransfer"
    optional :organization, :string, 2
    optional :time, :message, 3, "hiber.Timestamp"
    repeated :tags, :message, 4, "hiber.tag.Tag"
    optional :title, :string, 5
    optional :description, :string, 6
  end
  add_message "hiber.event.Event.ModemTransferEvent.ModemTransferReceivedEvent" do
    optional :transfer, :message, 1, "hiber.modem.ModemTransfer"
    optional :organization, :string, 2
    optional :time, :message, 3, "hiber.Timestamp"
    repeated :tags, :message, 4, "hiber.tag.Tag"
    optional :title, :string, 5
    optional :description, :string, 6
  end
  add_message "hiber.event.Event.ModemTransferEvent.ModemTransferNotReceivedEvent" do
    optional :transfer, :message, 1, "hiber.modem.ModemTransfer"
    optional :organization, :string, 2
    optional :time, :message, 3, "hiber.Timestamp"
    repeated :tags, :message, 4, "hiber.tag.Tag"
    optional :title, :string, 5
    optional :description, :string, 6
  end
  add_message "hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent" do
    optional :return_transfer, :message, 1, "hiber.modem.ModemTransfer"
    optional :original_transfer, :message, 2, "hiber.modem.ModemTransfer"
    repeated :return_lines, :message, 3, "hiber.modem.ModemTransferReturnLine"
    optional :organization, :string, 4
    optional :time, :message, 5, "hiber.Timestamp"
    repeated :tags, :message, 6, "hiber.tag.Tag"
    optional :title, :string, 7
    optional :description, :string, 8
  end
  add_message "hiber.event.Event.UserEvent" do
  end
  add_message "hiber.event.Event.UserEvent.UserAddedEvent" do
    optional :organization, :string, 1
    optional :user, :string, 2
    optional :title, :string, 3
    optional :description, :string, 4
    optional :time, :message, 5, "hiber.Timestamp"
  end
  add_message "hiber.event.Event.UserEvent.UserRemovedEvent" do
    optional :organization, :string, 1
    optional :user, :string, 2
    optional :title, :string, 3
    optional :description, :string, 4
    optional :time, :message, 5, "hiber.Timestamp"
  end
  add_message "hiber.event.Event.UserEvent.UserAccessRequestEvent" do
    optional :organization, :string, 1
    optional :user, :string, 2
    optional :time, :message, 3, "hiber.Timestamp"
    optional :title, :string, 4
    optional :description, :string, 5
  end
  add_message "hiber.event.Event.WebhookEvent" do
  end
  add_message "hiber.event.Event.WebhookEvent.CreatedEvent" do
    optional :organization, :string, 1
    optional :created, :message, 2, "hiber.webhook.Webhook"
    repeated :tags, :message, 3, "hiber.tag.Tag"
    optional :title, :string, 4
    optional :description, :string, 5
    optional :time, :message, 6, "hiber.Timestamp"
  end
  add_message "hiber.event.Event.WebhookEvent.UpdatedEvent" do
    optional :organization, :string, 1
    repeated :tags, :message, 3, "hiber.tag.Tag"
    optional :title, :string, 4
    optional :description, :string, 5
    optional :time, :message, 6, "hiber.Timestamp"
    optional :update, :message, 7, "hiber.webhook.UpdateWebhookRequest.UpdateWebhook"
  end
  add_message "hiber.event.Event.WebhookEvent.DeletedEvent" do
    optional :organization, :string, 1
    optional :deleted, :message, 2, "hiber.webhook.Webhook"
    repeated :tags, :message, 3, "hiber.tag.Tag"
    optional :title, :string, 4
    optional :description, :string, 5
    optional :time, :message, 6, "hiber.Timestamp"
  end
  add_message "hiber.event.Event.WebhookEvent.FailedEvent" do
    optional :organization, :string, 1
    optional :reason, :string, 2
    optional :failed, :message, 3, "hiber.webhook.Webhook"
    repeated :tags, :message, 4, "hiber.tag.Tag"
    optional :title, :string, 5
    optional :description, :string, 6
    optional :time, :message, 7, "hiber.Timestamp"
  end
  add_message "hiber.event.Event.TokenEvent" do
  end
  add_message "hiber.event.Event.TokenEvent.TokenExpiryWarningEvent" do
    optional :organization, :string, 1
    optional :token, :message, 2, "hiber.token.Token"
    optional :title, :string, 3
    optional :description, :string, 4
    optional :time, :message, 5, "hiber.Timestamp"
  end
  add_message "hiber.event.Event.TokenEvent.TokenExpiredEvent" do
    optional :organization, :string, 1
    optional :token, :message, 2, "hiber.token.Token"
    optional :title, :string, 3
    optional :description, :string, 4
    optional :time, :message, 5, "hiber.Timestamp"
  end
  add_message "hiber.event.BundledEvent" do
    optional :type, :enum, 1, "hiber.EventType"
    optional :amount, :int32, 2
    optional :title, :string, 3
    optional :description, :string, 4
    optional :last_event, :message, 5, "hiber.Timestamp"
  end
  add_message "hiber.event.EventSelection" do
    optional :events, :message, 1, "hiber.Filter.Events"
    optional :modems, :message, 2, "hiber.Filter.Modems"
    optional :webhooks, :message, 3, "hiber.Filter.Webhooks"
    optional :tags, :message, 4, "hiber.Filter.Tags"
    optional :time_range, :message, 6, "hiber.TimeRange"
    optional :errors_only, :bool, 7
    optional :unbundled_events, :bool, 8
    optional :include_resolved_events, :bool, 9
  end
  add_message "hiber.event.ListEventsRequest" do
    optional :organization, :string, 1
    optional :selection, :message, 2, "hiber.event.EventSelection"
    optional :pagination, :message, 3, "hiber.Pagination"
    optional :sort, :enum, 4, "hiber.event.ListEventsRequest.Sort"
  end
  add_message "hiber.event.ListEventsRequest.Response" do
    optional :request, :message, 2, "hiber.event.ListEventsRequest"
    repeated :events, :message, 4, "hiber.event.BundledEvent"
    repeated :unbundled_events, :message, 5, "hiber.event.ListEventsRequest.Response.EventTypeResponse"
  end
  add_message "hiber.event.ListEventsRequest.Response.EventTypeResponse" do
    optional :type, :enum, 1, "hiber.EventType"
    repeated :unbundled_events, :message, 2, "hiber.event.Event"
    optional :pagination, :message, 3, "hiber.Pagination.Result"
  end
  add_enum "hiber.event.ListEventsRequest.Sort" do
    value :TIME, 0
    value :TIME_INVERTED, 1
    value :MODEM_NUMBER_ASC, 2
    value :MODEM_NUMBER_DESC, 3
    value :MODEM_NUMBER_SPECIFIED, 4
  end
  add_message "hiber.event.EventStreamRequest" do
    optional :organization, :string, 1
    optional :selection, :message, 2, "hiber.event.EventSelection"
  end
end

module Hiber
  module Event
    Event = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.event.Event").msgclass
    Event::ModemEvent = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.event.Event.ModemEvent").msgclass
    Event::ModemEvent::ModemLocationUpdatedEvent = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.event.Event.ModemEvent.ModemLocationUpdatedEvent").msgclass
    Event::ModemEvent::ModemStaleEvent = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.event.Event.ModemEvent.ModemStaleEvent").msgclass
    Event::ModemEvent::MessageEvent = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.event.Event.ModemEvent.MessageEvent").msgclass
    Event::ModemEvent::MessageEvent::ModemMessageReceivedEvent = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.event.Event.ModemEvent.MessageEvent.ModemMessageReceivedEvent").msgclass
    Event::ModemEvent::MessageEvent::ModemMessageDroppedEvent = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDroppedEvent").msgclass
    Event::ModemEvent::MessageEvent::ModemMessageDelayedEvent = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDelayedEvent").msgclass
    Event::ModemEvent::MessageEvent::ModemMessageCannotBeParsedEvent = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.event.Event.ModemEvent.MessageEvent.ModemMessageCannotBeParsedEvent").msgclass
    Event::ModemEvent::ClaimEvent = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.event.Event.ModemEvent.ClaimEvent").msgclass
    Event::ModemEvent::ClaimEvent::ModemClaimedEvent = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimedEvent").msgclass
    Event::ModemEvent::ClaimEvent::ModemClaimAcceptedEvent = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimAcceptedEvent").msgclass
    Event::ModemEvent::ClaimEvent::ModemClaimRejectedEvent = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimRejectedEvent").msgclass
    Event::ModemTransferEvent = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.event.Event.ModemTransferEvent").msgclass
    Event::ModemTransferEvent::ModemTransferStartedEvent = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.event.Event.ModemTransferEvent.ModemTransferStartedEvent").msgclass
    Event::ModemTransferEvent::ModemTransferCancelledEvent = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.event.Event.ModemTransferEvent.ModemTransferCancelledEvent").msgclass
    Event::ModemTransferEvent::ModemTransferReceivedEvent = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.event.Event.ModemTransferEvent.ModemTransferReceivedEvent").msgclass
    Event::ModemTransferEvent::ModemTransferNotReceivedEvent = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.event.Event.ModemTransferEvent.ModemTransferNotReceivedEvent").msgclass
    Event::ModemTransferEvent::ModemTransferReturnTransferStartedEvent = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent").msgclass
    Event::UserEvent = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.event.Event.UserEvent").msgclass
    Event::UserEvent::UserAddedEvent = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.event.Event.UserEvent.UserAddedEvent").msgclass
    Event::UserEvent::UserRemovedEvent = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.event.Event.UserEvent.UserRemovedEvent").msgclass
    Event::UserEvent::UserAccessRequestEvent = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.event.Event.UserEvent.UserAccessRequestEvent").msgclass
    Event::WebhookEvent = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.event.Event.WebhookEvent").msgclass
    Event::WebhookEvent::CreatedEvent = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.event.Event.WebhookEvent.CreatedEvent").msgclass
    Event::WebhookEvent::UpdatedEvent = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.event.Event.WebhookEvent.UpdatedEvent").msgclass
    Event::WebhookEvent::DeletedEvent = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.event.Event.WebhookEvent.DeletedEvent").msgclass
    Event::WebhookEvent::FailedEvent = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.event.Event.WebhookEvent.FailedEvent").msgclass
    Event::TokenEvent = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.event.Event.TokenEvent").msgclass
    Event::TokenEvent::TokenExpiryWarningEvent = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.event.Event.TokenEvent.TokenExpiryWarningEvent").msgclass
    Event::TokenEvent::TokenExpiredEvent = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.event.Event.TokenEvent.TokenExpiredEvent").msgclass
    BundledEvent = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.event.BundledEvent").msgclass
    EventSelection = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.event.EventSelection").msgclass
    ListEventsRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.event.ListEventsRequest").msgclass
    ListEventsRequest::Response = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.event.ListEventsRequest.Response").msgclass
    ListEventsRequest::Response::EventTypeResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.event.ListEventsRequest.Response.EventTypeResponse").msgclass
    ListEventsRequest::Sort = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.event.ListEventsRequest.Sort").enummodule
    EventStreamRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.event.EventStreamRequest").msgclass
  end
end
