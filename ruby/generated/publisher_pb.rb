# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: publisher.proto

require 'google/protobuf'

require 'base_pb'
require 'tag_pb'
require 'google/protobuf/timestamp_pb'
Google::Protobuf::DescriptorPool.generated_pool.build do
  add_message "hiber.publisher.Publisher" do
    optional :id, :int64, 1
    optional :description, :string, 2
    optional :data, :message, 3, "hiber.publisher.Publisher.Data"
    optional :filters, :message, 4, "hiber.publisher.Publisher.Filters"
    repeated :tags, :message, 5, "hiber.tag.Tag"
    optional :health, :enum, 6, "hiber.Health"
    optional :type, :enum, 7, "hiber.publisher.Publisher.Type"
  end
  add_message "hiber.publisher.Publisher.Data" do
    optional :url, :string, 1
    optional :content_type, :enum, 2, "hiber.publisher.Publisher.ContentType"
    optional :disabled, :bool, 3
    optional :certificate_id, :int64, 4
    optional :certificate_name, :string, 5
    optional :ca_certificate_id, :int64, 6
    optional :ca_certificate_name, :string, 7
    oneof :config do
      optional :http, :message, 8, "hiber.publisher.Publisher.Data.HTTPConfig"
      optional :mqtt, :message, 9, "hiber.publisher.Publisher.Data.MQTTConfig"
    end
  end
  add_message "hiber.publisher.Publisher.Data.MQTTConfig" do
    optional :topic, :string, 1
    optional :qos, :enum, 2, "hiber.publisher.Publisher.Data.MQTTConfig.QoS"
    optional :username, :string, 3
    optional :password, :string, 4
    optional :identifier, :string, 5
  end
  add_enum "hiber.publisher.Publisher.Data.MQTTConfig.QoS" do
    value :DEFAULT, 0
    value :AT_MOST_ONCE, 1
    value :AT_LEAST_ONCE, 2
    value :EXACTLY_ONCE, 3
  end
  add_message "hiber.publisher.Publisher.Data.HTTPConfig" do
    optional :secret, :string, 1
  end
  add_message "hiber.publisher.Publisher.Filters" do
    optional :event_types, :message, 1, "hiber.Filter.Events"
    optional :modem_numbers, :message, 2, "hiber.Filter.Modems"
    optional :tags, :message, 3, "hiber.Filter.Tags"
  end
  add_enum "hiber.publisher.Publisher.ContentType" do
    value :DEFAULT, 0
    value :JSON, 1
    value :PROTO, 2
  end
  add_enum "hiber.publisher.Publisher.Type" do
    value :HTTP, 0
    value :MQTT, 1
  end
  add_message "hiber.publisher.PublisherSelection" do
    optional :publishers, :message, 1, "hiber.Filter.Publishers"
    optional :description, :string, 2
    optional :search_url, :string, 3
    repeated :content_types, :enum, 4, "hiber.publisher.Publisher.ContentType"
    repeated :certificate_ids, :int64, 5
    optional :search_mqtt_topic, :string, 6
    optional :tags, :message, 7, "hiber.tag.TagSelection"
    repeated :health, :enum, 8, "hiber.Health"
    repeated :types, :enum, 9, "hiber.publisher.Publisher.Type"
  end
  add_message "hiber.publisher.PublisherCall" do
    optional :time, :message, 1, "hiber.Timestamp"
    optional :publisher_data, :message, 2, "hiber.publisher.Publisher.Data"
    optional :body, :bytes, 3
    optional :successful, :bool, 4
    optional :error, :string, 5
  end
  add_message "hiber.publisher.PublisherHistorySelection" do
    optional :only_failures, :bool, 2
    optional :time_range, :message, 3, "hiber.TimeRange"
  end
  add_message "hiber.publisher.ListPublishersRequest" do
    optional :organization, :string, 1
    optional :selection, :message, 2, "hiber.publisher.PublisherSelection"
    optional :pagination, :message, 3, "hiber.Pagination"
  end
  add_message "hiber.publisher.ListPublishersRequest.Response" do
    repeated :publishers, :message, 1, "hiber.publisher.Publisher"
    optional :request, :message, 2, "hiber.publisher.ListPublishersRequest"
    optional :pagination, :message, 3, "hiber.Pagination.Result"
  end
  add_message "hiber.publisher.PublisherHistoryRequest" do
    optional :organization, :string, 1
    optional :publisher_id, :int64, 2
    optional :selection, :message, 3, "hiber.publisher.PublisherHistorySelection"
    optional :pagination, :message, 4, "hiber.Pagination"
  end
  add_message "hiber.publisher.PublisherHistoryRequest.Response" do
    repeated :calls, :message, 1, "hiber.publisher.PublisherCall"
    optional :request, :message, 2, "hiber.publisher.PublisherHistoryRequest"
    optional :pagination, :message, 3, "hiber.Pagination.Result"
  end
  add_message "hiber.publisher.CreatePublisherRequest" do
    optional :organization, :string, 1
    optional :description, :string, 2
    optional :url, :string, 3
    optional :content_type, :enum, 4, "hiber.publisher.Publisher.ContentType"
    optional :certificate_id, :int64, 5
    optional :filters, :message, 6, "hiber.publisher.Publisher.Filters"
    repeated :tags, :int64, 7
    optional :type, :enum, 8, "hiber.publisher.Publisher.Type"
    oneof :config do
      optional :http, :message, 9, "hiber.publisher.Publisher.Data.HTTPConfig"
      optional :mqtt, :message, 10, "hiber.publisher.Publisher.Data.MQTTConfig"
    end
  end
  add_message "hiber.publisher.CreatePublisherRequest.Response" do
    optional :created, :message, 1, "hiber.publisher.Publisher"
    optional :request, :message, 2, "hiber.publisher.CreatePublisherRequest"
  end
  add_message "hiber.publisher.EnablePublisherRequest" do
    optional :organization, :string, 1
    optional :selection, :message, 2, "hiber.publisher.PublisherSelection"
  end
  add_message "hiber.publisher.EnablePublisherRequest.Response" do
    repeated :publishers, :message, 1, "hiber.publisher.Publisher"
    optional :request, :message, 2, "hiber.publisher.EnablePublisherRequest"
    optional :pagination, :message, 3, "hiber.Pagination.Result"
  end
  add_message "hiber.publisher.DisablePublisherRequest" do
    optional :organization, :string, 1
    optional :selection, :message, 2, "hiber.publisher.PublisherSelection"
  end
  add_message "hiber.publisher.DisablePublisherRequest.Response" do
    repeated :publishers, :message, 1, "hiber.publisher.Publisher"
    optional :request, :message, 2, "hiber.publisher.DisablePublisherRequest"
    optional :pagination, :message, 3, "hiber.Pagination.Result"
  end
  add_message "hiber.publisher.UpdatePublisherRequest" do
    optional :organization, :string, 1
    optional :selection, :message, 2, "hiber.publisher.PublisherSelection"
    optional :description, :message, 3, "hiber.UpdateClearableString"
    optional :url, :string, 4
    optional :content_type, :enum, 5, "hiber.publisher.Publisher.ContentType"
    optional :certificate_id, :message, 6, "hiber.UpdateOptionalId"
    optional :event_filter, :message, 7, "hiber.publisher.UpdatePublisherRequest.UpdateEvents"
    optional :modem_filter, :message, 8, "hiber.publisher.UpdatePublisherRequest.UpdateModems"
    optional :tag_filter, :message, 9, "hiber.publisher.UpdatePublisherRequest.UpdateTags"
    optional :active, :message, 10, "hiber.UpdateBoolean"
    oneof :config do
      optional :http, :message, 11, "hiber.publisher.Publisher.Data.HTTPConfig"
      optional :mqtt, :message, 12, "hiber.publisher.Publisher.Data.MQTTConfig"
    end
  end
  add_message "hiber.publisher.UpdatePublisherRequest.Response" do
    repeated :updated, :message, 1, "hiber.publisher.Publisher"
    optional :request, :message, 2, "hiber.publisher.UpdatePublisherRequest"
    optional :pagination, :message, 3, "hiber.Pagination.Result"
  end
  add_message "hiber.publisher.UpdatePublisherRequest.UpdateEvents" do
    optional :updated, :bool, 1
    optional :value, :message, 2, "hiber.Filter.Events"
  end
  add_message "hiber.publisher.UpdatePublisherRequest.UpdateModems" do
    optional :updated, :bool, 1
    optional :value, :message, 2, "hiber.Filter.Modems"
  end
  add_message "hiber.publisher.UpdatePublisherRequest.UpdateTags" do
    optional :updated, :bool, 1
    optional :value, :message, 2, "hiber.Filter.Tags"
  end
  add_message "hiber.publisher.UpdatePublisherTagsRequest" do
    optional :organization, :string, 1
    optional :selection, :message, 2, "hiber.publisher.PublisherSelection"
    optional :update, :message, 3, "hiber.tag.UpdateTagsForItem"
  end
  add_message "hiber.publisher.UpdatePublisherTagsRequest.Response" do
    repeated :publishers, :message, 1, "hiber.publisher.Publisher"
    optional :request, :message, 2, "hiber.publisher.UpdatePublisherTagsRequest"
    optional :pagination, :message, 3, "hiber.Pagination.Result"
  end
  add_message "hiber.publisher.DeletePublisherRequest" do
    optional :organization, :string, 1
    optional :id, :int64, 2
  end
  add_message "hiber.publisher.DeletePublisherRequest.Response" do
  end
end

module Hiber
  module Publisher
    Publisher = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.publisher.Publisher").msgclass
    Publisher::Data = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.publisher.Publisher.Data").msgclass
    Publisher::Data::MQTTConfig = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.publisher.Publisher.Data.MQTTConfig").msgclass
    Publisher::Data::MQTTConfig::QoS = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.publisher.Publisher.Data.MQTTConfig.QoS").enummodule
    Publisher::Data::HTTPConfig = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.publisher.Publisher.Data.HTTPConfig").msgclass
    Publisher::Filters = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.publisher.Publisher.Filters").msgclass
    Publisher::ContentType = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.publisher.Publisher.ContentType").enummodule
    Publisher::Type = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.publisher.Publisher.Type").enummodule
    PublisherSelection = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.publisher.PublisherSelection").msgclass
    PublisherCall = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.publisher.PublisherCall").msgclass
    PublisherHistorySelection = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.publisher.PublisherHistorySelection").msgclass
    ListPublishersRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.publisher.ListPublishersRequest").msgclass
    ListPublishersRequest::Response = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.publisher.ListPublishersRequest.Response").msgclass
    PublisherHistoryRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.publisher.PublisherHistoryRequest").msgclass
    PublisherHistoryRequest::Response = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.publisher.PublisherHistoryRequest.Response").msgclass
    CreatePublisherRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.publisher.CreatePublisherRequest").msgclass
    CreatePublisherRequest::Response = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.publisher.CreatePublisherRequest.Response").msgclass
    EnablePublisherRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.publisher.EnablePublisherRequest").msgclass
    EnablePublisherRequest::Response = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.publisher.EnablePublisherRequest.Response").msgclass
    DisablePublisherRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.publisher.DisablePublisherRequest").msgclass
    DisablePublisherRequest::Response = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.publisher.DisablePublisherRequest.Response").msgclass
    UpdatePublisherRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.publisher.UpdatePublisherRequest").msgclass
    UpdatePublisherRequest::Response = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.publisher.UpdatePublisherRequest.Response").msgclass
    UpdatePublisherRequest::UpdateEvents = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.publisher.UpdatePublisherRequest.UpdateEvents").msgclass
    UpdatePublisherRequest::UpdateModems = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.publisher.UpdatePublisherRequest.UpdateModems").msgclass
    UpdatePublisherRequest::UpdateTags = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.publisher.UpdatePublisherRequest.UpdateTags").msgclass
    UpdatePublisherTagsRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.publisher.UpdatePublisherTagsRequest").msgclass
    UpdatePublisherTagsRequest::Response = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.publisher.UpdatePublisherTagsRequest.Response").msgclass
    DeletePublisherRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.publisher.DeletePublisherRequest").msgclass
    DeletePublisherRequest::Response = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.publisher.DeletePublisherRequest.Response").msgclass
  end
end
