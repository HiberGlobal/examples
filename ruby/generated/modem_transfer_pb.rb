# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: modem_transfer.proto

require 'google/protobuf'

require 'base_pb'
require 'organization_pb'
require 'modem_pb'
require 'tag_pb'
Google::Protobuf::DescriptorPool.generated_pool.build do
  add_message "hiber.modem.ModemTransfer" do
    optional :identifier, :string, 1
    repeated :modem_numbers, :string, 2
    optional :type, :enum, 3, "hiber.modem.ModemTransfer.Type"
    optional :status, :enum, 4, "hiber.modem.ModemTransfer.Status"
    optional :sender_organization, :string, 5
    optional :recipient_organization, :string, 6
    repeated :return_transfers, :string, 7
    repeated :return_for, :string, 8
    optional :tracking_information, :string, 9
    optional :created_at, :message, 10, "hiber.Timestamp"
    optional :received_at, :message, 11, "hiber.Timestamp"
    optional :cancelled_at, :message, 12, "hiber.Timestamp"
    optional :not_received_at, :message, 13, "hiber.Timestamp"
    optional :return_deadline, :message, 14, "hiber.Timestamp"
    repeated :tags, :message, 15, "hiber.tag.Tag"
  end
  add_enum "hiber.modem.ModemTransfer.Type" do
    value :TRANSFER, 0
    value :RETURN, 1
  end
  add_enum "hiber.modem.ModemTransfer.Status" do
    value :IN_TRANSIT, 0
    value :RECEIVED, 1
    value :CANCELLED, 3
    value :NOT_RECEIVED, 4
  end
  add_message "hiber.modem.ModemTransferReturnLine" do
    optional :original_transfer, :string, 1
    optional :return_transfer, :string, 2
    repeated :modem_numbers, :string, 3
    optional :reason, :enum, 4, "hiber.modem.ModemTransferReturnLine.Reason"
    optional :comment, :string, 5
    optional :created_at, :message, 6, "hiber.Timestamp"
    optional :returned_at, :message, 7, "hiber.Timestamp"
  end
  add_enum "hiber.modem.ModemTransferReturnLine.Reason" do
    value :OTHER, 0
    value :INVALID_RECIPIENT, 1
    value :INVALID_CONFIGURATION, 2
    value :DAMAGED, 3
    value :DEAD, 4
    value :MISSING, 5
  end
  add_message "hiber.modem.ModemTransferSelection" do
    repeated :identifiers, :string, 1
    optional :modems, :message, 2, "hiber.modem.ModemSelection"
    repeated :senders, :string, 3
    repeated :recipients, :string, 4
    repeated :statuses, :enum, 5, "hiber.modem.ModemTransfer.Status"
    optional :created_in, :message, 6, "hiber.TimeRange"
    optional :received_in, :message, 7, "hiber.TimeRange"
    optional :not_received_in, :message, 8, "hiber.TimeRange"
    optional :cancelled_in, :message, 9, "hiber.TimeRange"
    repeated :types, :enum, 10, "hiber.modem.ModemTransfer.Type"
  end
  add_message "hiber.modem.TransferModemsRequest" do
    optional :organization, :string, 1
    optional :selection, :message, 2, "hiber.modem.ModemSelection"
    optional :recipient_organization, :string, 3
    optional :create_recipient, :message, 4, "hiber.organization.CreateOrganizationRequest"
    optional :tracking_information, :string, 5
  end
  add_message "hiber.modem.TransferModemsRequest.Response" do
    optional :request, :message, 1, "hiber.modem.TransferModemsRequest"
    optional :transfer, :message, 2, "hiber.modem.ModemTransfer"
  end
  add_message "hiber.modem.ListModemTransfersRequest" do
    optional :organization, :string, 1
    optional :selection, :message, 2, "hiber.modem.ModemTransferSelection"
    optional :pagination, :message, 3, "hiber.Pagination"
  end
  add_message "hiber.modem.ListModemTransfersRequest.Response" do
    optional :request, :message, 1, "hiber.modem.ListModemTransfersRequest"
    repeated :transfers, :message, 2, "hiber.modem.ModemTransfer"
    optional :pagination, :message, 3, "hiber.Pagination.Result"
  end
  add_message "hiber.modem.CancelModemTransferRequest" do
    optional :organization, :string, 1
    optional :selection, :message, 2, "hiber.modem.ModemTransferSelection"
  end
  add_message "hiber.modem.CancelModemTransferRequest.Response" do
    optional :request, :message, 1, "hiber.modem.CancelModemTransferRequest"
    repeated :cancelled, :message, 2, "hiber.modem.ModemTransfer"
  end
  add_message "hiber.modem.ReceivedModemTransferRequest" do
    optional :organization, :string, 1
    optional :selection, :message, 2, "hiber.modem.ModemTransferSelection"
  end
  add_message "hiber.modem.ReceivedModemTransferRequest.Response" do
    optional :request, :message, 1, "hiber.modem.ReceivedModemTransferRequest"
    repeated :received, :message, 2, "hiber.modem.ModemTransfer"
  end
  add_message "hiber.modem.NotReceivedModemTransferRequest" do
    optional :organization, :string, 1
    optional :selection, :message, 2, "hiber.modem.ModemTransferSelection"
  end
  add_message "hiber.modem.NotReceivedModemTransferRequest.Response" do
    optional :request, :message, 1, "hiber.modem.NotReceivedModemTransferRequest"
    repeated :not_received, :message, 2, "hiber.modem.ModemTransfer"
  end
  add_message "hiber.modem.PrepareModemForReturnRequest" do
    optional :organization, :string, 1
    optional :transfer_id, :string, 2
    optional :selection, :message, 3, "hiber.modem.ModemSelection"
    optional :reason, :enum, 4, "hiber.modem.ModemTransferReturnLine.Reason"
    optional :comment, :string, 5
    optional :replace_previous_comment, :bool, 6
  end
  add_message "hiber.modem.PrepareModemForReturnRequest.Response" do
    optional :request, :message, 1, "hiber.modem.PrepareModemForReturnRequest"
    optional :modem_return, :message, 2, "hiber.modem.ModemTransferReturnLine"
  end
  add_message "hiber.modem.DeleteModemTransferReturnLinesRequest" do
    optional :organization, :string, 1
    optional :transfer_id, :string, 2
    repeated :modem_numbers, :string, 3
  end
  add_message "hiber.modem.DeleteModemTransferReturnLinesRequest.Response" do
  end
  add_message "hiber.modem.ListModemTransferReturnLinesRequest" do
    optional :organization, :string, 1
    optional :selection, :message, 2, "hiber.modem.ModemTransferSelection"
    optional :pagination, :message, 3, "hiber.Pagination"
  end
  add_message "hiber.modem.ListModemTransferReturnLinesRequest.Response" do
    optional :request, :message, 1, "hiber.modem.ListModemTransferReturnLinesRequest"
    repeated :lines, :message, 2, "hiber.modem.ModemTransferReturnLine"
    optional :pagination, :message, 3, "hiber.Pagination.Result"
  end
  add_message "hiber.modem.SendReturnRequest" do
    optional :organization, :string, 1
    optional :selection, :message, 2, "hiber.modem.ModemTransferSelection"
    optional :tracking_information, :string, 3
  end
  add_message "hiber.modem.SendReturnRequest.Response" do
    optional :request, :message, 1, "hiber.modem.SendReturnRequest"
    optional :return_transfer, :message, 2, "hiber.modem.ModemTransfer"
  end
end

module Hiber
  module Modem
    ModemTransfer = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.modem.ModemTransfer").msgclass
    ModemTransfer::Type = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.modem.ModemTransfer.Type").enummodule
    ModemTransfer::Status = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.modem.ModemTransfer.Status").enummodule
    ModemTransferReturnLine = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.modem.ModemTransferReturnLine").msgclass
    ModemTransferReturnLine::Reason = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.modem.ModemTransferReturnLine.Reason").enummodule
    ModemTransferSelection = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.modem.ModemTransferSelection").msgclass
    TransferModemsRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.modem.TransferModemsRequest").msgclass
    TransferModemsRequest::Response = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.modem.TransferModemsRequest.Response").msgclass
    ListModemTransfersRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.modem.ListModemTransfersRequest").msgclass
    ListModemTransfersRequest::Response = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.modem.ListModemTransfersRequest.Response").msgclass
    CancelModemTransferRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.modem.CancelModemTransferRequest").msgclass
    CancelModemTransferRequest::Response = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.modem.CancelModemTransferRequest.Response").msgclass
    ReceivedModemTransferRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.modem.ReceivedModemTransferRequest").msgclass
    ReceivedModemTransferRequest::Response = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.modem.ReceivedModemTransferRequest.Response").msgclass
    NotReceivedModemTransferRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.modem.NotReceivedModemTransferRequest").msgclass
    NotReceivedModemTransferRequest::Response = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.modem.NotReceivedModemTransferRequest.Response").msgclass
    PrepareModemForReturnRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.modem.PrepareModemForReturnRequest").msgclass
    PrepareModemForReturnRequest::Response = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.modem.PrepareModemForReturnRequest.Response").msgclass
    DeleteModemTransferReturnLinesRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.modem.DeleteModemTransferReturnLinesRequest").msgclass
    DeleteModemTransferReturnLinesRequest::Response = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.modem.DeleteModemTransferReturnLinesRequest.Response").msgclass
    ListModemTransferReturnLinesRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.modem.ListModemTransferReturnLinesRequest").msgclass
    ListModemTransferReturnLinesRequest::Response = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.modem.ListModemTransferReturnLinesRequest.Response").msgclass
    SendReturnRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.modem.SendReturnRequest").msgclass
    SendReturnRequest::Response = Google::Protobuf::DescriptorPool.generated_pool.lookup("hiber.modem.SendReturnRequest.Response").msgclass
  end
end
