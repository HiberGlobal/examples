/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var base_pb = require('./base_pb.js');
var tag_pb = require('./tag_pb.js');
var subscription_pb = require('./subscription_pb.js');
goog.exportSymbol('proto.hiber.modem.GetModemRequest', null, global);
goog.exportSymbol('proto.hiber.modem.LicenseKeysRequest', null, global);
goog.exportSymbol('proto.hiber.modem.LicenseKeysRequest.Response', null, global);
goog.exportSymbol('proto.hiber.modem.LicenseKeysRequest.Response.ModemLicenseKey', null, global);
goog.exportSymbol('proto.hiber.modem.ListModemMessagesRequest', null, global);
goog.exportSymbol('proto.hiber.modem.ListModemMessagesRequest.Response', null, global);
goog.exportSymbol('proto.hiber.modem.ListModemsRequest', null, global);
goog.exportSymbol('proto.hiber.modem.ListModemsRequest.Response', null, global);
goog.exportSymbol('proto.hiber.modem.ListModemsRequest.Sort', null, global);
goog.exportSymbol('proto.hiber.modem.MessageCountRequest', null, global);
goog.exportSymbol('proto.hiber.modem.MessageCountRequest.Response', null, global);
goog.exportSymbol('proto.hiber.modem.MessageCountRequest.Response.MessageCount', null, global);
goog.exportSymbol('proto.hiber.modem.Modem', null, global);
goog.exportSymbol('proto.hiber.modem.Modem.ActiveSubscription', null, global);
goog.exportSymbol('proto.hiber.modem.Modem.Peripherals', null, global);
goog.exportSymbol('proto.hiber.modem.Modem.Peripherals.HiberAntenna', null, global);
goog.exportSymbol('proto.hiber.modem.Modem.Status', null, global);
goog.exportSymbol('proto.hiber.modem.Modem.TechnicalData', null, global);
goog.exportSymbol('proto.hiber.modem.Modem.Transfer', null, global);
goog.exportSymbol('proto.hiber.modem.Modem.Transfer.Status', null, global);
goog.exportSymbol('proto.hiber.modem.ModemMessage', null, global);
goog.exportSymbol('proto.hiber.modem.ModemMessageSelection', null, global);
goog.exportSymbol('proto.hiber.modem.ModemSelection', null, global);
goog.exportSymbol('proto.hiber.modem.ModemSelection.Transfers', null, global);
goog.exportSymbol('proto.hiber.modem.RenameModemRequest', null, global);
goog.exportSymbol('proto.hiber.modem.UpdateModemTagsRequest', null, global);
goog.exportSymbol('proto.hiber.modem.UpdateModemTagsRequest.Response', null, global);
goog.exportSymbol('proto.hiber.modem.UpdatePeripheralsRequest', null, global);
goog.exportSymbol('proto.hiber.modem.UpdatePeripheralsRequest.Response', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.Modem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.modem.Modem.repeatedFields_, null);
};
goog.inherits(proto.hiber.modem.Modem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.Modem.displayName = 'proto.hiber.modem.Modem';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.modem.Modem.repeatedFields_ = [10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.Modem.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.Modem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.Modem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.Modem.toObject = function(includeInstance, msg) {
  var f, obj = {
    number: jspb.Message.getFieldWithDefault(msg, 1, ""),
    organization: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    location: (f = msg.getLocation()) && base_pb.Location.toObject(includeInstance, f),
    lastMessageReceivedAt: (f = msg.getLastMessageReceivedAt()) && base_pb.Timestamp.toObject(includeInstance, f),
    activeSubscription: (f = msg.getActiveSubscription()) && proto.hiber.modem.Modem.ActiveSubscription.toObject(includeInstance, f),
    technical: (f = msg.getTechnical()) && proto.hiber.modem.Modem.TechnicalData.toObject(includeInstance, f),
    maximumInactivityPeriod: jspb.Message.getFieldWithDefault(msg, 8, 0),
    health: jspb.Message.getFieldWithDefault(msg, 9, 0),
    tagsList: jspb.Message.toObjectList(msg.getTagsList(),
    tag_pb.Tag.toObject, includeInstance),
    peripherals: (f = msg.getPeripherals()) && proto.hiber.modem.Modem.Peripherals.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 12, 0),
    inTransfer: (f = msg.getInTransfer()) && proto.hiber.modem.Modem.Transfer.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.Modem}
 */
proto.hiber.modem.Modem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.Modem;
  return proto.hiber.modem.Modem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.Modem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.Modem}
 */
proto.hiber.modem.Modem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNumber(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = new base_pb.Location;
      reader.readMessage(value,base_pb.Location.deserializeBinaryFromReader);
      msg.setLocation(value);
      break;
    case 5:
      var value = new base_pb.Timestamp;
      reader.readMessage(value,base_pb.Timestamp.deserializeBinaryFromReader);
      msg.setLastMessageReceivedAt(value);
      break;
    case 6:
      var value = new proto.hiber.modem.Modem.ActiveSubscription;
      reader.readMessage(value,proto.hiber.modem.Modem.ActiveSubscription.deserializeBinaryFromReader);
      msg.setActiveSubscription(value);
      break;
    case 7:
      var value = new proto.hiber.modem.Modem.TechnicalData;
      reader.readMessage(value,proto.hiber.modem.Modem.TechnicalData.deserializeBinaryFromReader);
      msg.setTechnical(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaximumInactivityPeriod(value);
      break;
    case 9:
      var value = /** @type {!proto.hiber.Health} */ (reader.readEnum());
      msg.setHealth(value);
      break;
    case 10:
      var value = new tag_pb.Tag;
      reader.readMessage(value,tag_pb.Tag.deserializeBinaryFromReader);
      msg.addTags(value);
      break;
    case 11:
      var value = new proto.hiber.modem.Modem.Peripherals;
      reader.readMessage(value,proto.hiber.modem.Modem.Peripherals.deserializeBinaryFromReader);
      msg.setPeripherals(value);
      break;
    case 12:
      var value = /** @type {!proto.hiber.modem.Modem.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 13:
      var value = new proto.hiber.modem.Modem.Transfer;
      reader.readMessage(value,proto.hiber.modem.Modem.Transfer.deserializeBinaryFromReader);
      msg.setInTransfer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.Modem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.Modem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.Modem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.Modem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNumber();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLocation();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      base_pb.Location.serializeBinaryToWriter
    );
  }
  f = message.getLastMessageReceivedAt();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      base_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getActiveSubscription();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.hiber.modem.Modem.ActiveSubscription.serializeBinaryToWriter
    );
  }
  f = message.getTechnical();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.hiber.modem.Modem.TechnicalData.serializeBinaryToWriter
    );
  }
  f = message.getMaximumInactivityPeriod();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getHealth();
  if (f !== 0.0) {
    writer.writeEnum(
      9,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      tag_pb.Tag.serializeBinaryToWriter
    );
  }
  f = message.getPeripherals();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.hiber.modem.Modem.Peripherals.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      12,
      f
    );
  }
  f = message.getInTransfer();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.hiber.modem.Modem.Transfer.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.hiber.modem.Modem.Status = {
  DEFAULT: 0,
  ACTIVE: 1,
  DAMAGED: 2,
  LOST: 3,
  DEAD: 4,
  DISABLED: 5
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.Modem.TechnicalData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.modem.Modem.TechnicalData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.Modem.TechnicalData.displayName = 'proto.hiber.modem.Modem.TechnicalData';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.Modem.TechnicalData.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.Modem.TechnicalData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.Modem.TechnicalData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.Modem.TechnicalData.toObject = function(includeInstance, msg) {
  var f, obj = {
    hardwareName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    firmwareVersionName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    hardwareProductionBatch: jspb.Message.getFieldWithDefault(msg, 6, ""),
    manufacturer: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.Modem.TechnicalData}
 */
proto.hiber.modem.Modem.TechnicalData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.Modem.TechnicalData;
  return proto.hiber.modem.Modem.TechnicalData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.Modem.TechnicalData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.Modem.TechnicalData}
 */
proto.hiber.modem.Modem.TechnicalData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHardwareName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFirmwareVersionName(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setHardwareProductionBatch(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setManufacturer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.Modem.TechnicalData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.Modem.TechnicalData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.Modem.TechnicalData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.Modem.TechnicalData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHardwareName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFirmwareVersionName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getHardwareProductionBatch();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getManufacturer();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string hardware_name = 2;
 * @return {string}
 */
proto.hiber.modem.Modem.TechnicalData.prototype.getHardwareName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hiber.modem.Modem.TechnicalData.prototype.setHardwareName = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string firmware_version_name = 3;
 * @return {string}
 */
proto.hiber.modem.Modem.TechnicalData.prototype.getFirmwareVersionName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.hiber.modem.Modem.TechnicalData.prototype.setFirmwareVersionName = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string hardware_production_batch = 6;
 * @return {string}
 */
proto.hiber.modem.Modem.TechnicalData.prototype.getHardwareProductionBatch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.hiber.modem.Modem.TechnicalData.prototype.setHardwareProductionBatch = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional string manufacturer = 7;
 * @return {string}
 */
proto.hiber.modem.Modem.TechnicalData.prototype.getManufacturer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.hiber.modem.Modem.TechnicalData.prototype.setManufacturer = function(value) {
  jspb.Message.setField(this, 7, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.Modem.ActiveSubscription = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.modem.Modem.ActiveSubscription, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.Modem.ActiveSubscription.displayName = 'proto.hiber.modem.Modem.ActiveSubscription';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.Modem.ActiveSubscription.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.Modem.ActiveSubscription.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.Modem.ActiveSubscription} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.Modem.ActiveSubscription.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 3, 0),
    startDate: (f = msg.getStartDate()) && base_pb.Timestamp.toObject(includeInstance, f),
    endDate: (f = msg.getEndDate()) && base_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.Modem.ActiveSubscription}
 */
proto.hiber.modem.Modem.ActiveSubscription.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.Modem.ActiveSubscription;
  return proto.hiber.modem.Modem.ActiveSubscription.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.Modem.ActiveSubscription} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.Modem.ActiveSubscription}
 */
proto.hiber.modem.Modem.ActiveSubscription.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = /** @type {!proto.hiber.organization.subscription.ServiceType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 4:
      var value = new base_pb.Timestamp;
      reader.readMessage(value,base_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStartDate(value);
      break;
    case 5:
      var value = new base_pb.Timestamp;
      reader.readMessage(value,base_pb.Timestamp.deserializeBinaryFromReader);
      msg.setEndDate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.Modem.ActiveSubscription.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.Modem.ActiveSubscription.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.Modem.ActiveSubscription} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.Modem.ActiveSubscription.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getStartDate();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      base_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getEndDate();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      base_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional hiber.organization.subscription.ServiceType type = 3;
 * @return {!proto.hiber.organization.subscription.ServiceType}
 */
proto.hiber.modem.Modem.ActiveSubscription.prototype.getType = function() {
  return /** @type {!proto.hiber.organization.subscription.ServiceType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.hiber.organization.subscription.ServiceType} value */
proto.hiber.modem.Modem.ActiveSubscription.prototype.setType = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional hiber.Timestamp start_date = 4;
 * @return {?proto.hiber.Timestamp}
 */
proto.hiber.modem.Modem.ActiveSubscription.prototype.getStartDate = function() {
  return /** @type{?proto.hiber.Timestamp} */ (
    jspb.Message.getWrapperField(this, base_pb.Timestamp, 4));
};


/** @param {?proto.hiber.Timestamp|undefined} value */
proto.hiber.modem.Modem.ActiveSubscription.prototype.setStartDate = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.hiber.modem.Modem.ActiveSubscription.prototype.clearStartDate = function() {
  this.setStartDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.Modem.ActiveSubscription.prototype.hasStartDate = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional hiber.Timestamp end_date = 5;
 * @return {?proto.hiber.Timestamp}
 */
proto.hiber.modem.Modem.ActiveSubscription.prototype.getEndDate = function() {
  return /** @type{?proto.hiber.Timestamp} */ (
    jspb.Message.getWrapperField(this, base_pb.Timestamp, 5));
};


/** @param {?proto.hiber.Timestamp|undefined} value */
proto.hiber.modem.Modem.ActiveSubscription.prototype.setEndDate = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.hiber.modem.Modem.ActiveSubscription.prototype.clearEndDate = function() {
  this.setEndDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.Modem.ActiveSubscription.prototype.hasEndDate = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.Modem.Transfer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.modem.Modem.Transfer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.Modem.Transfer.displayName = 'proto.hiber.modem.Modem.Transfer';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.Modem.Transfer.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.Modem.Transfer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.Modem.Transfer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.Modem.Transfer.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    identifier: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.Modem.Transfer}
 */
proto.hiber.modem.Modem.Transfer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.Modem.Transfer;
  return proto.hiber.modem.Modem.Transfer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.Modem.Transfer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.Modem.Transfer}
 */
proto.hiber.modem.Modem.Transfer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.hiber.modem.Modem.Transfer.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentifier(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.Modem.Transfer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.Modem.Transfer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.Modem.Transfer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.Modem.Transfer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getIdentifier();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.hiber.modem.Modem.Transfer.Status = {
  NONE: 0,
  INBOUND: 1,
  OUTBOUND: 2,
  RETURNING: 3
};

/**
 * optional Status status = 1;
 * @return {!proto.hiber.modem.Modem.Transfer.Status}
 */
proto.hiber.modem.Modem.Transfer.prototype.getStatus = function() {
  return /** @type {!proto.hiber.modem.Modem.Transfer.Status} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.hiber.modem.Modem.Transfer.Status} value */
proto.hiber.modem.Modem.Transfer.prototype.setStatus = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string identifier = 2;
 * @return {string}
 */
proto.hiber.modem.Modem.Transfer.prototype.getIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hiber.modem.Modem.Transfer.prototype.setIdentifier = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.Modem.Peripherals = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.modem.Modem.Peripherals, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.Modem.Peripherals.displayName = 'proto.hiber.modem.Modem.Peripherals';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.Modem.Peripherals.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.Modem.Peripherals.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.Modem.Peripherals} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.Modem.Peripherals.toObject = function(includeInstance, msg) {
  var f, obj = {
    hiberAntenna: jspb.Message.getFieldWithDefault(msg, 1, 0),
    gps: jspb.Message.getFieldWithDefault(msg, 2, false),
    peripheralsMap: (f = msg.getPeripheralsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.Modem.Peripherals}
 */
proto.hiber.modem.Modem.Peripherals.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.Modem.Peripherals;
  return proto.hiber.modem.Modem.Peripherals.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.Modem.Peripherals} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.Modem.Peripherals}
 */
proto.hiber.modem.Modem.Peripherals.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.hiber.modem.Modem.Peripherals.HiberAntenna} */ (reader.readEnum());
      msg.setHiberAntenna(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setGps(value);
      break;
    case 3:
      var value = msg.getPeripheralsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.Modem.Peripherals.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.Modem.Peripherals.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.Modem.Peripherals} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.Modem.Peripherals.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHiberAntenna();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getGps();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getPeripheralsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * @enum {number}
 */
proto.hiber.modem.Modem.Peripherals.HiberAntenna = {
  DEFAULT: 0,
  HIBER_PANDA: 1,
  HIBER_GRIZZLY: 2,
  HIBER_BLACK: 3
};

/**
 * optional HiberAntenna hiber_antenna = 1;
 * @return {!proto.hiber.modem.Modem.Peripherals.HiberAntenna}
 */
proto.hiber.modem.Modem.Peripherals.prototype.getHiberAntenna = function() {
  return /** @type {!proto.hiber.modem.Modem.Peripherals.HiberAntenna} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.hiber.modem.Modem.Peripherals.HiberAntenna} value */
proto.hiber.modem.Modem.Peripherals.prototype.setHiberAntenna = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional bool gps = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.hiber.modem.Modem.Peripherals.prototype.getGps = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.hiber.modem.Modem.Peripherals.prototype.setGps = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * map<string, string> peripherals = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.hiber.modem.Modem.Peripherals.prototype.getPeripheralsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


proto.hiber.modem.Modem.Peripherals.prototype.clearPeripheralsMap = function() {
  this.getPeripheralsMap().clear();
};


/**
 * optional string number = 1;
 * @return {string}
 */
proto.hiber.modem.Modem.prototype.getNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.modem.Modem.prototype.setNumber = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string organization = 2;
 * @return {string}
 */
proto.hiber.modem.Modem.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hiber.modem.Modem.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.hiber.modem.Modem.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.hiber.modem.Modem.prototype.setName = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional hiber.Location location = 4;
 * @return {?proto.hiber.Location}
 */
proto.hiber.modem.Modem.prototype.getLocation = function() {
  return /** @type{?proto.hiber.Location} */ (
    jspb.Message.getWrapperField(this, base_pb.Location, 4));
};


/** @param {?proto.hiber.Location|undefined} value */
proto.hiber.modem.Modem.prototype.setLocation = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.hiber.modem.Modem.prototype.clearLocation = function() {
  this.setLocation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.Modem.prototype.hasLocation = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional hiber.Timestamp last_message_received_at = 5;
 * @return {?proto.hiber.Timestamp}
 */
proto.hiber.modem.Modem.prototype.getLastMessageReceivedAt = function() {
  return /** @type{?proto.hiber.Timestamp} */ (
    jspb.Message.getWrapperField(this, base_pb.Timestamp, 5));
};


/** @param {?proto.hiber.Timestamp|undefined} value */
proto.hiber.modem.Modem.prototype.setLastMessageReceivedAt = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.hiber.modem.Modem.prototype.clearLastMessageReceivedAt = function() {
  this.setLastMessageReceivedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.Modem.prototype.hasLastMessageReceivedAt = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ActiveSubscription active_subscription = 6;
 * @return {?proto.hiber.modem.Modem.ActiveSubscription}
 */
proto.hiber.modem.Modem.prototype.getActiveSubscription = function() {
  return /** @type{?proto.hiber.modem.Modem.ActiveSubscription} */ (
    jspb.Message.getWrapperField(this, proto.hiber.modem.Modem.ActiveSubscription, 6));
};


/** @param {?proto.hiber.modem.Modem.ActiveSubscription|undefined} value */
proto.hiber.modem.Modem.prototype.setActiveSubscription = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.hiber.modem.Modem.prototype.clearActiveSubscription = function() {
  this.setActiveSubscription(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.Modem.prototype.hasActiveSubscription = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional TechnicalData technical = 7;
 * @return {?proto.hiber.modem.Modem.TechnicalData}
 */
proto.hiber.modem.Modem.prototype.getTechnical = function() {
  return /** @type{?proto.hiber.modem.Modem.TechnicalData} */ (
    jspb.Message.getWrapperField(this, proto.hiber.modem.Modem.TechnicalData, 7));
};


/** @param {?proto.hiber.modem.Modem.TechnicalData|undefined} value */
proto.hiber.modem.Modem.prototype.setTechnical = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.hiber.modem.Modem.prototype.clearTechnical = function() {
  this.setTechnical(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.Modem.prototype.hasTechnical = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional int32 maximum_inactivity_period = 8;
 * @return {number}
 */
proto.hiber.modem.Modem.prototype.getMaximumInactivityPeriod = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.hiber.modem.Modem.prototype.setMaximumInactivityPeriod = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * optional hiber.Health health = 9;
 * @return {!proto.hiber.Health}
 */
proto.hiber.modem.Modem.prototype.getHealth = function() {
  return /** @type {!proto.hiber.Health} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {!proto.hiber.Health} value */
proto.hiber.modem.Modem.prototype.setHealth = function(value) {
  jspb.Message.setField(this, 9, value);
};


/**
 * repeated hiber.tag.Tag tags = 10;
 * @return {!Array.<!proto.hiber.tag.Tag>}
 */
proto.hiber.modem.Modem.prototype.getTagsList = function() {
  return /** @type{!Array.<!proto.hiber.tag.Tag>} */ (
    jspb.Message.getRepeatedWrapperField(this, tag_pb.Tag, 10));
};


/** @param {!Array.<!proto.hiber.tag.Tag>} value */
proto.hiber.modem.Modem.prototype.setTagsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.hiber.tag.Tag=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hiber.tag.Tag}
 */
proto.hiber.modem.Modem.prototype.addTags = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.hiber.tag.Tag, opt_index);
};


proto.hiber.modem.Modem.prototype.clearTagsList = function() {
  this.setTagsList([]);
};


/**
 * optional Peripherals peripherals = 11;
 * @return {?proto.hiber.modem.Modem.Peripherals}
 */
proto.hiber.modem.Modem.prototype.getPeripherals = function() {
  return /** @type{?proto.hiber.modem.Modem.Peripherals} */ (
    jspb.Message.getWrapperField(this, proto.hiber.modem.Modem.Peripherals, 11));
};


/** @param {?proto.hiber.modem.Modem.Peripherals|undefined} value */
proto.hiber.modem.Modem.prototype.setPeripherals = function(value) {
  jspb.Message.setWrapperField(this, 11, value);
};


proto.hiber.modem.Modem.prototype.clearPeripherals = function() {
  this.setPeripherals(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.Modem.prototype.hasPeripherals = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional Status status = 12;
 * @return {!proto.hiber.modem.Modem.Status}
 */
proto.hiber.modem.Modem.prototype.getStatus = function() {
  return /** @type {!proto.hiber.modem.Modem.Status} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {!proto.hiber.modem.Modem.Status} value */
proto.hiber.modem.Modem.prototype.setStatus = function(value) {
  jspb.Message.setField(this, 12, value);
};


/**
 * optional Transfer in_transfer = 13;
 * @return {?proto.hiber.modem.Modem.Transfer}
 */
proto.hiber.modem.Modem.prototype.getInTransfer = function() {
  return /** @type{?proto.hiber.modem.Modem.Transfer} */ (
    jspb.Message.getWrapperField(this, proto.hiber.modem.Modem.Transfer, 13));
};


/** @param {?proto.hiber.modem.Modem.Transfer|undefined} value */
proto.hiber.modem.Modem.prototype.setInTransfer = function(value) {
  jspb.Message.setWrapperField(this, 13, value);
};


proto.hiber.modem.Modem.prototype.clearInTransfer = function() {
  this.setInTransfer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.Modem.prototype.hasInTransfer = function() {
  return jspb.Message.getField(this, 13) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.ModemSelection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.modem.ModemSelection.repeatedFields_, null);
};
goog.inherits(proto.hiber.modem.ModemSelection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.ModemSelection.displayName = 'proto.hiber.modem.ModemSelection';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.modem.ModemSelection.repeatedFields_ = [6,9,10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.ModemSelection.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.ModemSelection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.ModemSelection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.ModemSelection.toObject = function(includeInstance, msg) {
  var f, obj = {
    modems: (f = msg.getModems()) && base_pb.Filter.Modems.toObject(includeInstance, f),
    filterByTags: (f = msg.getFilterByTags()) && tag_pb.TagSelection.toObject(includeInstance, f),
    childOrganizations: (f = msg.getChildOrganizations()) && base_pb.Filter.ChildOrganizations.toObject(includeInstance, f),
    onlyActive: jspb.Message.getFieldWithDefault(msg, 4, false),
    activatedIn: (f = msg.getActivatedIn()) && base_pb.TimeRange.toObject(includeInstance, f),
    withServiceTypeList: jspb.Message.getRepeatedField(msg, 6),
    withLastMessageIn: (f = msg.getWithLastMessageIn()) && base_pb.TimeRange.toObject(includeInstance, f),
    freeTextSearch: jspb.Message.getFieldWithDefault(msg, 8, ""),
    healthList: jspb.Message.getRepeatedField(msg, 9),
    statusList: jspb.Message.getRepeatedField(msg, 10),
    transfers: (f = msg.getTransfers()) && proto.hiber.modem.ModemSelection.Transfers.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.ModemSelection}
 */
proto.hiber.modem.ModemSelection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.ModemSelection;
  return proto.hiber.modem.ModemSelection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.ModemSelection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.ModemSelection}
 */
proto.hiber.modem.ModemSelection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new base_pb.Filter.Modems;
      reader.readMessage(value,base_pb.Filter.Modems.deserializeBinaryFromReader);
      msg.setModems(value);
      break;
    case 2:
      var value = new tag_pb.TagSelection;
      reader.readMessage(value,tag_pb.TagSelection.deserializeBinaryFromReader);
      msg.setFilterByTags(value);
      break;
    case 3:
      var value = new base_pb.Filter.ChildOrganizations;
      reader.readMessage(value,base_pb.Filter.ChildOrganizations.deserializeBinaryFromReader);
      msg.setChildOrganizations(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOnlyActive(value);
      break;
    case 5:
      var value = new base_pb.TimeRange;
      reader.readMessage(value,base_pb.TimeRange.deserializeBinaryFromReader);
      msg.setActivatedIn(value);
      break;
    case 6:
      var value = /** @type {!Array.<!proto.hiber.organization.subscription.ServiceType>} */ (reader.readPackedEnum());
      msg.setWithServiceTypeList(value);
      break;
    case 7:
      var value = new base_pb.TimeRange;
      reader.readMessage(value,base_pb.TimeRange.deserializeBinaryFromReader);
      msg.setWithLastMessageIn(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setFreeTextSearch(value);
      break;
    case 9:
      var value = /** @type {!Array.<!proto.hiber.Health>} */ (reader.readPackedEnum());
      msg.setHealthList(value);
      break;
    case 10:
      var value = /** @type {!Array.<!proto.hiber.modem.Modem.Status>} */ (reader.readPackedEnum());
      msg.setStatusList(value);
      break;
    case 11:
      var value = new proto.hiber.modem.ModemSelection.Transfers;
      reader.readMessage(value,proto.hiber.modem.ModemSelection.Transfers.deserializeBinaryFromReader);
      msg.setTransfers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.ModemSelection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.ModemSelection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.ModemSelection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.ModemSelection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModems();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      base_pb.Filter.Modems.serializeBinaryToWriter
    );
  }
  f = message.getFilterByTags();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      tag_pb.TagSelection.serializeBinaryToWriter
    );
  }
  f = message.getChildOrganizations();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      base_pb.Filter.ChildOrganizations.serializeBinaryToWriter
    );
  }
  f = message.getOnlyActive();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getActivatedIn();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      base_pb.TimeRange.serializeBinaryToWriter
    );
  }
  f = message.getWithServiceTypeList();
  if (f.length > 0) {
    writer.writePackedEnum(
      6,
      f
    );
  }
  f = message.getWithLastMessageIn();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      base_pb.TimeRange.serializeBinaryToWriter
    );
  }
  f = message.getFreeTextSearch();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getHealthList();
  if (f.length > 0) {
    writer.writePackedEnum(
      9,
      f
    );
  }
  f = message.getStatusList();
  if (f.length > 0) {
    writer.writePackedEnum(
      10,
      f
    );
  }
  f = message.getTransfers();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.hiber.modem.ModemSelection.Transfers.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.ModemSelection.Transfers = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.modem.ModemSelection.Transfers.repeatedFields_, null);
};
goog.inherits(proto.hiber.modem.ModemSelection.Transfers, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.ModemSelection.Transfers.displayName = 'proto.hiber.modem.ModemSelection.Transfers';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.modem.ModemSelection.Transfers.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.ModemSelection.Transfers.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.ModemSelection.Transfers.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.ModemSelection.Transfers} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.ModemSelection.Transfers.toObject = function(includeInstance, msg) {
  var f, obj = {
    transfersIdentifiersList: jspb.Message.getRepeatedField(msg, 1),
    includeInboundModems: jspb.Message.getFieldWithDefault(msg, 2, false),
    includeOutboundModems: jspb.Message.getFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.ModemSelection.Transfers}
 */
proto.hiber.modem.ModemSelection.Transfers.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.ModemSelection.Transfers;
  return proto.hiber.modem.ModemSelection.Transfers.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.ModemSelection.Transfers} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.ModemSelection.Transfers}
 */
proto.hiber.modem.ModemSelection.Transfers.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addTransfersIdentifiers(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludeInboundModems(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludeOutboundModems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.ModemSelection.Transfers.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.ModemSelection.Transfers.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.ModemSelection.Transfers} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.ModemSelection.Transfers.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransfersIdentifiersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getIncludeInboundModems();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getIncludeOutboundModems();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * repeated string transfers_identifiers = 1;
 * @return {!Array.<string>}
 */
proto.hiber.modem.ModemSelection.Transfers.prototype.getTransfersIdentifiersList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array.<string>} value */
proto.hiber.modem.ModemSelection.Transfers.prototype.setTransfersIdentifiersList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.hiber.modem.ModemSelection.Transfers.prototype.addTransfersIdentifiers = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.hiber.modem.ModemSelection.Transfers.prototype.clearTransfersIdentifiersList = function() {
  this.setTransfersIdentifiersList([]);
};


/**
 * optional bool include_inbound_modems = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.hiber.modem.ModemSelection.Transfers.prototype.getIncludeInboundModems = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.hiber.modem.ModemSelection.Transfers.prototype.setIncludeInboundModems = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional bool include_outbound_modems = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.hiber.modem.ModemSelection.Transfers.prototype.getIncludeOutboundModems = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.hiber.modem.ModemSelection.Transfers.prototype.setIncludeOutboundModems = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional hiber.Filter.Modems modems = 1;
 * @return {?proto.hiber.Filter.Modems}
 */
proto.hiber.modem.ModemSelection.prototype.getModems = function() {
  return /** @type{?proto.hiber.Filter.Modems} */ (
    jspb.Message.getWrapperField(this, base_pb.Filter.Modems, 1));
};


/** @param {?proto.hiber.Filter.Modems|undefined} value */
proto.hiber.modem.ModemSelection.prototype.setModems = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.hiber.modem.ModemSelection.prototype.clearModems = function() {
  this.setModems(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ModemSelection.prototype.hasModems = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional hiber.tag.TagSelection filter_by_tags = 2;
 * @return {?proto.hiber.tag.TagSelection}
 */
proto.hiber.modem.ModemSelection.prototype.getFilterByTags = function() {
  return /** @type{?proto.hiber.tag.TagSelection} */ (
    jspb.Message.getWrapperField(this, tag_pb.TagSelection, 2));
};


/** @param {?proto.hiber.tag.TagSelection|undefined} value */
proto.hiber.modem.ModemSelection.prototype.setFilterByTags = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.modem.ModemSelection.prototype.clearFilterByTags = function() {
  this.setFilterByTags(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ModemSelection.prototype.hasFilterByTags = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional hiber.Filter.ChildOrganizations child_organizations = 3;
 * @return {?proto.hiber.Filter.ChildOrganizations}
 */
proto.hiber.modem.ModemSelection.prototype.getChildOrganizations = function() {
  return /** @type{?proto.hiber.Filter.ChildOrganizations} */ (
    jspb.Message.getWrapperField(this, base_pb.Filter.ChildOrganizations, 3));
};


/** @param {?proto.hiber.Filter.ChildOrganizations|undefined} value */
proto.hiber.modem.ModemSelection.prototype.setChildOrganizations = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.modem.ModemSelection.prototype.clearChildOrganizations = function() {
  this.setChildOrganizations(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ModemSelection.prototype.hasChildOrganizations = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool only_active = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.hiber.modem.ModemSelection.prototype.getOnlyActive = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.hiber.modem.ModemSelection.prototype.setOnlyActive = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional hiber.TimeRange activated_in = 5;
 * @return {?proto.hiber.TimeRange}
 */
proto.hiber.modem.ModemSelection.prototype.getActivatedIn = function() {
  return /** @type{?proto.hiber.TimeRange} */ (
    jspb.Message.getWrapperField(this, base_pb.TimeRange, 5));
};


/** @param {?proto.hiber.TimeRange|undefined} value */
proto.hiber.modem.ModemSelection.prototype.setActivatedIn = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.hiber.modem.ModemSelection.prototype.clearActivatedIn = function() {
  this.setActivatedIn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ModemSelection.prototype.hasActivatedIn = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated hiber.organization.subscription.ServiceType with_service_type = 6;
 * @return {!Array.<!proto.hiber.organization.subscription.ServiceType>}
 */
proto.hiber.modem.ModemSelection.prototype.getWithServiceTypeList = function() {
  return /** @type {!Array.<!proto.hiber.organization.subscription.ServiceType>} */ (jspb.Message.getRepeatedField(this, 6));
};


/** @param {!Array.<!proto.hiber.organization.subscription.ServiceType>} value */
proto.hiber.modem.ModemSelection.prototype.setWithServiceTypeList = function(value) {
  jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {!proto.hiber.organization.subscription.ServiceType} value
 * @param {number=} opt_index
 */
proto.hiber.modem.ModemSelection.prototype.addWithServiceType = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


proto.hiber.modem.ModemSelection.prototype.clearWithServiceTypeList = function() {
  this.setWithServiceTypeList([]);
};


/**
 * optional hiber.TimeRange with_last_message_in = 7;
 * @return {?proto.hiber.TimeRange}
 */
proto.hiber.modem.ModemSelection.prototype.getWithLastMessageIn = function() {
  return /** @type{?proto.hiber.TimeRange} */ (
    jspb.Message.getWrapperField(this, base_pb.TimeRange, 7));
};


/** @param {?proto.hiber.TimeRange|undefined} value */
proto.hiber.modem.ModemSelection.prototype.setWithLastMessageIn = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.hiber.modem.ModemSelection.prototype.clearWithLastMessageIn = function() {
  this.setWithLastMessageIn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ModemSelection.prototype.hasWithLastMessageIn = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string free_text_search = 8;
 * @return {string}
 */
proto.hiber.modem.ModemSelection.prototype.getFreeTextSearch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.hiber.modem.ModemSelection.prototype.setFreeTextSearch = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * repeated hiber.Health health = 9;
 * @return {!Array.<!proto.hiber.Health>}
 */
proto.hiber.modem.ModemSelection.prototype.getHealthList = function() {
  return /** @type {!Array.<!proto.hiber.Health>} */ (jspb.Message.getRepeatedField(this, 9));
};


/** @param {!Array.<!proto.hiber.Health>} value */
proto.hiber.modem.ModemSelection.prototype.setHealthList = function(value) {
  jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {!proto.hiber.Health} value
 * @param {number=} opt_index
 */
proto.hiber.modem.ModemSelection.prototype.addHealth = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


proto.hiber.modem.ModemSelection.prototype.clearHealthList = function() {
  this.setHealthList([]);
};


/**
 * repeated Modem.Status status = 10;
 * @return {!Array.<!proto.hiber.modem.Modem.Status>}
 */
proto.hiber.modem.ModemSelection.prototype.getStatusList = function() {
  return /** @type {!Array.<!proto.hiber.modem.Modem.Status>} */ (jspb.Message.getRepeatedField(this, 10));
};


/** @param {!Array.<!proto.hiber.modem.Modem.Status>} value */
proto.hiber.modem.ModemSelection.prototype.setStatusList = function(value) {
  jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {!proto.hiber.modem.Modem.Status} value
 * @param {number=} opt_index
 */
proto.hiber.modem.ModemSelection.prototype.addStatus = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


proto.hiber.modem.ModemSelection.prototype.clearStatusList = function() {
  this.setStatusList([]);
};


/**
 * optional Transfers transfers = 11;
 * @return {?proto.hiber.modem.ModemSelection.Transfers}
 */
proto.hiber.modem.ModemSelection.prototype.getTransfers = function() {
  return /** @type{?proto.hiber.modem.ModemSelection.Transfers} */ (
    jspb.Message.getWrapperField(this, proto.hiber.modem.ModemSelection.Transfers, 11));
};


/** @param {?proto.hiber.modem.ModemSelection.Transfers|undefined} value */
proto.hiber.modem.ModemSelection.prototype.setTransfers = function(value) {
  jspb.Message.setWrapperField(this, 11, value);
};


proto.hiber.modem.ModemSelection.prototype.clearTransfers = function() {
  this.setTransfers(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ModemSelection.prototype.hasTransfers = function() {
  return jspb.Message.getField(this, 11) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.ModemMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.modem.ModemMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.ModemMessage.displayName = 'proto.hiber.modem.ModemMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.ModemMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.ModemMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.ModemMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.ModemMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    modemNumber: jspb.Message.getFieldWithDefault(msg, 1, ""),
    version: jspb.Message.getFieldWithDefault(msg, 2, 0),
    sentAt: (f = msg.getSentAt()) && base_pb.Timestamp.toObject(includeInstance, f),
    location: (f = msg.getLocation()) && base_pb.Location.toObject(includeInstance, f),
    body: msg.getBody_asB64(),
    receivedAt: (f = msg.getReceivedAt()) && base_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.ModemMessage}
 */
proto.hiber.modem.ModemMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.ModemMessage;
  return proto.hiber.modem.ModemMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.ModemMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.ModemMessage}
 */
proto.hiber.modem.ModemMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setModemNumber(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setVersion(value);
      break;
    case 3:
      var value = new base_pb.Timestamp;
      reader.readMessage(value,base_pb.Timestamp.deserializeBinaryFromReader);
      msg.setSentAt(value);
      break;
    case 4:
      var value = new base_pb.Location;
      reader.readMessage(value,base_pb.Location.deserializeBinaryFromReader);
      msg.setLocation(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBody(value);
      break;
    case 6:
      var value = new base_pb.Timestamp;
      reader.readMessage(value,base_pb.Timestamp.deserializeBinaryFromReader);
      msg.setReceivedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.ModemMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.ModemMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.ModemMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.ModemMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModemNumber();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVersion();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getSentAt();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      base_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getLocation();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      base_pb.Location.serializeBinaryToWriter
    );
  }
  f = message.getBody_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      5,
      f
    );
  }
  f = message.getReceivedAt();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      base_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string modem_number = 1;
 * @return {string}
 */
proto.hiber.modem.ModemMessage.prototype.getModemNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.modem.ModemMessage.prototype.setModemNumber = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional uint32 version = 2;
 * @return {number}
 */
proto.hiber.modem.ModemMessage.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.hiber.modem.ModemMessage.prototype.setVersion = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional hiber.Timestamp sent_at = 3;
 * @return {?proto.hiber.Timestamp}
 */
proto.hiber.modem.ModemMessage.prototype.getSentAt = function() {
  return /** @type{?proto.hiber.Timestamp} */ (
    jspb.Message.getWrapperField(this, base_pb.Timestamp, 3));
};


/** @param {?proto.hiber.Timestamp|undefined} value */
proto.hiber.modem.ModemMessage.prototype.setSentAt = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.modem.ModemMessage.prototype.clearSentAt = function() {
  this.setSentAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ModemMessage.prototype.hasSentAt = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional hiber.Location location = 4;
 * @return {?proto.hiber.Location}
 */
proto.hiber.modem.ModemMessage.prototype.getLocation = function() {
  return /** @type{?proto.hiber.Location} */ (
    jspb.Message.getWrapperField(this, base_pb.Location, 4));
};


/** @param {?proto.hiber.Location|undefined} value */
proto.hiber.modem.ModemMessage.prototype.setLocation = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.hiber.modem.ModemMessage.prototype.clearLocation = function() {
  this.setLocation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ModemMessage.prototype.hasLocation = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bytes body = 5;
 * @return {!(string|Uint8Array)}
 */
proto.hiber.modem.ModemMessage.prototype.getBody = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes body = 5;
 * This is a type-conversion wrapper around `getBody()`
 * @return {string}
 */
proto.hiber.modem.ModemMessage.prototype.getBody_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBody()));
};


/**
 * optional bytes body = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBody()`
 * @return {!Uint8Array}
 */
proto.hiber.modem.ModemMessage.prototype.getBody_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBody()));
};


/** @param {!(string|Uint8Array)} value */
proto.hiber.modem.ModemMessage.prototype.setBody = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional hiber.Timestamp received_at = 6;
 * @return {?proto.hiber.Timestamp}
 */
proto.hiber.modem.ModemMessage.prototype.getReceivedAt = function() {
  return /** @type{?proto.hiber.Timestamp} */ (
    jspb.Message.getWrapperField(this, base_pb.Timestamp, 6));
};


/** @param {?proto.hiber.Timestamp|undefined} value */
proto.hiber.modem.ModemMessage.prototype.setReceivedAt = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.hiber.modem.ModemMessage.prototype.clearReceivedAt = function() {
  this.setReceivedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ModemMessage.prototype.hasReceivedAt = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.ModemMessageSelection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.modem.ModemMessageSelection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.ModemMessageSelection.displayName = 'proto.hiber.modem.ModemMessageSelection';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.ModemMessageSelection.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.ModemMessageSelection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.ModemMessageSelection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.ModemMessageSelection.toObject = function(includeInstance, msg) {
  var f, obj = {
    modems: (f = msg.getModems()) && base_pb.Filter.Modems.toObject(includeInstance, f),
    childOrganizations: (f = msg.getChildOrganizations()) && base_pb.Filter.ChildOrganizations.toObject(includeInstance, f),
    timeRange: (f = msg.getTimeRange()) && base_pb.TimeRange.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.ModemMessageSelection}
 */
proto.hiber.modem.ModemMessageSelection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.ModemMessageSelection;
  return proto.hiber.modem.ModemMessageSelection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.ModemMessageSelection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.ModemMessageSelection}
 */
proto.hiber.modem.ModemMessageSelection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new base_pb.Filter.Modems;
      reader.readMessage(value,base_pb.Filter.Modems.deserializeBinaryFromReader);
      msg.setModems(value);
      break;
    case 2:
      var value = new base_pb.Filter.ChildOrganizations;
      reader.readMessage(value,base_pb.Filter.ChildOrganizations.deserializeBinaryFromReader);
      msg.setChildOrganizations(value);
      break;
    case 3:
      var value = new base_pb.TimeRange;
      reader.readMessage(value,base_pb.TimeRange.deserializeBinaryFromReader);
      msg.setTimeRange(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.ModemMessageSelection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.ModemMessageSelection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.ModemMessageSelection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.ModemMessageSelection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModems();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      base_pb.Filter.Modems.serializeBinaryToWriter
    );
  }
  f = message.getChildOrganizations();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      base_pb.Filter.ChildOrganizations.serializeBinaryToWriter
    );
  }
  f = message.getTimeRange();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      base_pb.TimeRange.serializeBinaryToWriter
    );
  }
};


/**
 * optional hiber.Filter.Modems modems = 1;
 * @return {?proto.hiber.Filter.Modems}
 */
proto.hiber.modem.ModemMessageSelection.prototype.getModems = function() {
  return /** @type{?proto.hiber.Filter.Modems} */ (
    jspb.Message.getWrapperField(this, base_pb.Filter.Modems, 1));
};


/** @param {?proto.hiber.Filter.Modems|undefined} value */
proto.hiber.modem.ModemMessageSelection.prototype.setModems = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.hiber.modem.ModemMessageSelection.prototype.clearModems = function() {
  this.setModems(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ModemMessageSelection.prototype.hasModems = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional hiber.Filter.ChildOrganizations child_organizations = 2;
 * @return {?proto.hiber.Filter.ChildOrganizations}
 */
proto.hiber.modem.ModemMessageSelection.prototype.getChildOrganizations = function() {
  return /** @type{?proto.hiber.Filter.ChildOrganizations} */ (
    jspb.Message.getWrapperField(this, base_pb.Filter.ChildOrganizations, 2));
};


/** @param {?proto.hiber.Filter.ChildOrganizations|undefined} value */
proto.hiber.modem.ModemMessageSelection.prototype.setChildOrganizations = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.modem.ModemMessageSelection.prototype.clearChildOrganizations = function() {
  this.setChildOrganizations(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ModemMessageSelection.prototype.hasChildOrganizations = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional hiber.TimeRange time_range = 3;
 * @return {?proto.hiber.TimeRange}
 */
proto.hiber.modem.ModemMessageSelection.prototype.getTimeRange = function() {
  return /** @type{?proto.hiber.TimeRange} */ (
    jspb.Message.getWrapperField(this, base_pb.TimeRange, 3));
};


/** @param {?proto.hiber.TimeRange|undefined} value */
proto.hiber.modem.ModemMessageSelection.prototype.setTimeRange = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.modem.ModemMessageSelection.prototype.clearTimeRange = function() {
  this.setTimeRange(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ModemMessageSelection.prototype.hasTimeRange = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.GetModemRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.modem.GetModemRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.GetModemRequest.displayName = 'proto.hiber.modem.GetModemRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.GetModemRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.GetModemRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.GetModemRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.GetModemRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: jspb.Message.getFieldWithDefault(msg, 1, ""),
    modemNumber: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.GetModemRequest}
 */
proto.hiber.modem.GetModemRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.GetModemRequest;
  return proto.hiber.modem.GetModemRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.GetModemRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.GetModemRequest}
 */
proto.hiber.modem.GetModemRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setModemNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.GetModemRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.GetModemRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.GetModemRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.GetModemRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getModemNumber();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string organization = 1;
 * @return {string}
 */
proto.hiber.modem.GetModemRequest.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.modem.GetModemRequest.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string modem_number = 2;
 * @return {string}
 */
proto.hiber.modem.GetModemRequest.prototype.getModemNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hiber.modem.GetModemRequest.prototype.setModemNumber = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.ListModemsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.modem.ListModemsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.ListModemsRequest.displayName = 'proto.hiber.modem.ListModemsRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.ListModemsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.ListModemsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.ListModemsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.ListModemsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: jspb.Message.getFieldWithDefault(msg, 1, ""),
    selection: (f = msg.getSelection()) && proto.hiber.modem.ModemSelection.toObject(includeInstance, f),
    pagination: (f = msg.getPagination()) && base_pb.Pagination.toObject(includeInstance, f),
    sortBy: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.ListModemsRequest}
 */
proto.hiber.modem.ListModemsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.ListModemsRequest;
  return proto.hiber.modem.ListModemsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.ListModemsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.ListModemsRequest}
 */
proto.hiber.modem.ListModemsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 2:
      var value = new proto.hiber.modem.ModemSelection;
      reader.readMessage(value,proto.hiber.modem.ModemSelection.deserializeBinaryFromReader);
      msg.setSelection(value);
      break;
    case 3:
      var value = new base_pb.Pagination;
      reader.readMessage(value,base_pb.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    case 4:
      var value = /** @type {!proto.hiber.modem.ListModemsRequest.Sort} */ (reader.readEnum());
      msg.setSortBy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.ListModemsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.ListModemsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.ListModemsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.ListModemsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSelection();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.hiber.modem.ModemSelection.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      base_pb.Pagination.serializeBinaryToWriter
    );
  }
  f = message.getSortBy();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.hiber.modem.ListModemsRequest.Sort = {
  LAST_MESSAGE_RECEIVED: 0,
  LAST_MESSAGE_RECEIVED_INVERTED: 1,
  MODEM_NUMBER_ASC: 2,
  MODEM_NUMBER_DESC: 3,
  STATUS_ASC: 4,
  STATUS_DESC: 5
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.ListModemsRequest.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.modem.ListModemsRequest.Response.repeatedFields_, null);
};
goog.inherits(proto.hiber.modem.ListModemsRequest.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.ListModemsRequest.Response.displayName = 'proto.hiber.modem.ListModemsRequest.Response';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.modem.ListModemsRequest.Response.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.ListModemsRequest.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.ListModemsRequest.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.ListModemsRequest.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.ListModemsRequest.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    modemsList: jspb.Message.toObjectList(msg.getModemsList(),
    proto.hiber.modem.Modem.toObject, includeInstance),
    request: (f = msg.getRequest()) && proto.hiber.modem.ListModemsRequest.toObject(includeInstance, f),
    pagination: (f = msg.getPagination()) && base_pb.Pagination.Result.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.ListModemsRequest.Response}
 */
proto.hiber.modem.ListModemsRequest.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.ListModemsRequest.Response;
  return proto.hiber.modem.ListModemsRequest.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.ListModemsRequest.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.ListModemsRequest.Response}
 */
proto.hiber.modem.ListModemsRequest.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.hiber.modem.Modem;
      reader.readMessage(value,proto.hiber.modem.Modem.deserializeBinaryFromReader);
      msg.addModems(value);
      break;
    case 2:
      var value = new proto.hiber.modem.ListModemsRequest;
      reader.readMessage(value,proto.hiber.modem.ListModemsRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    case 3:
      var value = new base_pb.Pagination.Result;
      reader.readMessage(value,base_pb.Pagination.Result.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.ListModemsRequest.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.ListModemsRequest.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.ListModemsRequest.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.ListModemsRequest.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.hiber.modem.Modem.serializeBinaryToWriter
    );
  }
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.hiber.modem.ListModemsRequest.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      base_pb.Pagination.Result.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Modem modems = 1;
 * @return {!Array.<!proto.hiber.modem.Modem>}
 */
proto.hiber.modem.ListModemsRequest.Response.prototype.getModemsList = function() {
  return /** @type{!Array.<!proto.hiber.modem.Modem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.hiber.modem.Modem, 1));
};


/** @param {!Array.<!proto.hiber.modem.Modem>} value */
proto.hiber.modem.ListModemsRequest.Response.prototype.setModemsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.hiber.modem.Modem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hiber.modem.Modem}
 */
proto.hiber.modem.ListModemsRequest.Response.prototype.addModems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.hiber.modem.Modem, opt_index);
};


proto.hiber.modem.ListModemsRequest.Response.prototype.clearModemsList = function() {
  this.setModemsList([]);
};


/**
 * optional ListModemsRequest request = 2;
 * @return {?proto.hiber.modem.ListModemsRequest}
 */
proto.hiber.modem.ListModemsRequest.Response.prototype.getRequest = function() {
  return /** @type{?proto.hiber.modem.ListModemsRequest} */ (
    jspb.Message.getWrapperField(this, proto.hiber.modem.ListModemsRequest, 2));
};


/** @param {?proto.hiber.modem.ListModemsRequest|undefined} value */
proto.hiber.modem.ListModemsRequest.Response.prototype.setRequest = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.modem.ListModemsRequest.Response.prototype.clearRequest = function() {
  this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ListModemsRequest.Response.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional hiber.Pagination.Result pagination = 3;
 * @return {?proto.hiber.Pagination.Result}
 */
proto.hiber.modem.ListModemsRequest.Response.prototype.getPagination = function() {
  return /** @type{?proto.hiber.Pagination.Result} */ (
    jspb.Message.getWrapperField(this, base_pb.Pagination.Result, 3));
};


/** @param {?proto.hiber.Pagination.Result|undefined} value */
proto.hiber.modem.ListModemsRequest.Response.prototype.setPagination = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.modem.ListModemsRequest.Response.prototype.clearPagination = function() {
  this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ListModemsRequest.Response.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string organization = 1;
 * @return {string}
 */
proto.hiber.modem.ListModemsRequest.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.modem.ListModemsRequest.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional ModemSelection selection = 2;
 * @return {?proto.hiber.modem.ModemSelection}
 */
proto.hiber.modem.ListModemsRequest.prototype.getSelection = function() {
  return /** @type{?proto.hiber.modem.ModemSelection} */ (
    jspb.Message.getWrapperField(this, proto.hiber.modem.ModemSelection, 2));
};


/** @param {?proto.hiber.modem.ModemSelection|undefined} value */
proto.hiber.modem.ListModemsRequest.prototype.setSelection = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.modem.ListModemsRequest.prototype.clearSelection = function() {
  this.setSelection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ListModemsRequest.prototype.hasSelection = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional hiber.Pagination pagination = 3;
 * @return {?proto.hiber.Pagination}
 */
proto.hiber.modem.ListModemsRequest.prototype.getPagination = function() {
  return /** @type{?proto.hiber.Pagination} */ (
    jspb.Message.getWrapperField(this, base_pb.Pagination, 3));
};


/** @param {?proto.hiber.Pagination|undefined} value */
proto.hiber.modem.ListModemsRequest.prototype.setPagination = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.modem.ListModemsRequest.prototype.clearPagination = function() {
  this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ListModemsRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Sort sort_by = 4;
 * @return {!proto.hiber.modem.ListModemsRequest.Sort}
 */
proto.hiber.modem.ListModemsRequest.prototype.getSortBy = function() {
  return /** @type {!proto.hiber.modem.ListModemsRequest.Sort} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {!proto.hiber.modem.ListModemsRequest.Sort} value */
proto.hiber.modem.ListModemsRequest.prototype.setSortBy = function(value) {
  jspb.Message.setField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.ListModemMessagesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.modem.ListModemMessagesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.ListModemMessagesRequest.displayName = 'proto.hiber.modem.ListModemMessagesRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.ListModemMessagesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.ListModemMessagesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.ListModemMessagesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.ListModemMessagesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: jspb.Message.getFieldWithDefault(msg, 1, ""),
    selection: (f = msg.getSelection()) && proto.hiber.modem.ModemMessageSelection.toObject(includeInstance, f),
    pagination: (f = msg.getPagination()) && base_pb.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.ListModemMessagesRequest}
 */
proto.hiber.modem.ListModemMessagesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.ListModemMessagesRequest;
  return proto.hiber.modem.ListModemMessagesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.ListModemMessagesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.ListModemMessagesRequest}
 */
proto.hiber.modem.ListModemMessagesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 2:
      var value = new proto.hiber.modem.ModemMessageSelection;
      reader.readMessage(value,proto.hiber.modem.ModemMessageSelection.deserializeBinaryFromReader);
      msg.setSelection(value);
      break;
    case 3:
      var value = new base_pb.Pagination;
      reader.readMessage(value,base_pb.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.ListModemMessagesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.ListModemMessagesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.ListModemMessagesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.ListModemMessagesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSelection();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.hiber.modem.ModemMessageSelection.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      base_pb.Pagination.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.ListModemMessagesRequest.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.modem.ListModemMessagesRequest.Response.repeatedFields_, null);
};
goog.inherits(proto.hiber.modem.ListModemMessagesRequest.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.ListModemMessagesRequest.Response.displayName = 'proto.hiber.modem.ListModemMessagesRequest.Response';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.modem.ListModemMessagesRequest.Response.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.ListModemMessagesRequest.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.ListModemMessagesRequest.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.ListModemMessagesRequest.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.ListModemMessagesRequest.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    messagesList: jspb.Message.toObjectList(msg.getMessagesList(),
    proto.hiber.modem.ModemMessage.toObject, includeInstance),
    request: (f = msg.getRequest()) && proto.hiber.modem.ListModemMessagesRequest.toObject(includeInstance, f),
    pagination: (f = msg.getPagination()) && base_pb.Pagination.Result.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.ListModemMessagesRequest.Response}
 */
proto.hiber.modem.ListModemMessagesRequest.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.ListModemMessagesRequest.Response;
  return proto.hiber.modem.ListModemMessagesRequest.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.ListModemMessagesRequest.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.ListModemMessagesRequest.Response}
 */
proto.hiber.modem.ListModemMessagesRequest.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.hiber.modem.ModemMessage;
      reader.readMessage(value,proto.hiber.modem.ModemMessage.deserializeBinaryFromReader);
      msg.addMessages(value);
      break;
    case 2:
      var value = new proto.hiber.modem.ListModemMessagesRequest;
      reader.readMessage(value,proto.hiber.modem.ListModemMessagesRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    case 3:
      var value = new base_pb.Pagination.Result;
      reader.readMessage(value,base_pb.Pagination.Result.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.ListModemMessagesRequest.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.ListModemMessagesRequest.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.ListModemMessagesRequest.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.ListModemMessagesRequest.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessagesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.hiber.modem.ModemMessage.serializeBinaryToWriter
    );
  }
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.hiber.modem.ListModemMessagesRequest.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      base_pb.Pagination.Result.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ModemMessage messages = 1;
 * @return {!Array.<!proto.hiber.modem.ModemMessage>}
 */
proto.hiber.modem.ListModemMessagesRequest.Response.prototype.getMessagesList = function() {
  return /** @type{!Array.<!proto.hiber.modem.ModemMessage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.hiber.modem.ModemMessage, 1));
};


/** @param {!Array.<!proto.hiber.modem.ModemMessage>} value */
proto.hiber.modem.ListModemMessagesRequest.Response.prototype.setMessagesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.hiber.modem.ModemMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hiber.modem.ModemMessage}
 */
proto.hiber.modem.ListModemMessagesRequest.Response.prototype.addMessages = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.hiber.modem.ModemMessage, opt_index);
};


proto.hiber.modem.ListModemMessagesRequest.Response.prototype.clearMessagesList = function() {
  this.setMessagesList([]);
};


/**
 * optional ListModemMessagesRequest request = 2;
 * @return {?proto.hiber.modem.ListModemMessagesRequest}
 */
proto.hiber.modem.ListModemMessagesRequest.Response.prototype.getRequest = function() {
  return /** @type{?proto.hiber.modem.ListModemMessagesRequest} */ (
    jspb.Message.getWrapperField(this, proto.hiber.modem.ListModemMessagesRequest, 2));
};


/** @param {?proto.hiber.modem.ListModemMessagesRequest|undefined} value */
proto.hiber.modem.ListModemMessagesRequest.Response.prototype.setRequest = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.modem.ListModemMessagesRequest.Response.prototype.clearRequest = function() {
  this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ListModemMessagesRequest.Response.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional hiber.Pagination.Result pagination = 3;
 * @return {?proto.hiber.Pagination.Result}
 */
proto.hiber.modem.ListModemMessagesRequest.Response.prototype.getPagination = function() {
  return /** @type{?proto.hiber.Pagination.Result} */ (
    jspb.Message.getWrapperField(this, base_pb.Pagination.Result, 3));
};


/** @param {?proto.hiber.Pagination.Result|undefined} value */
proto.hiber.modem.ListModemMessagesRequest.Response.prototype.setPagination = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.modem.ListModemMessagesRequest.Response.prototype.clearPagination = function() {
  this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ListModemMessagesRequest.Response.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string organization = 1;
 * @return {string}
 */
proto.hiber.modem.ListModemMessagesRequest.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.modem.ListModemMessagesRequest.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional ModemMessageSelection selection = 2;
 * @return {?proto.hiber.modem.ModemMessageSelection}
 */
proto.hiber.modem.ListModemMessagesRequest.prototype.getSelection = function() {
  return /** @type{?proto.hiber.modem.ModemMessageSelection} */ (
    jspb.Message.getWrapperField(this, proto.hiber.modem.ModemMessageSelection, 2));
};


/** @param {?proto.hiber.modem.ModemMessageSelection|undefined} value */
proto.hiber.modem.ListModemMessagesRequest.prototype.setSelection = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.modem.ListModemMessagesRequest.prototype.clearSelection = function() {
  this.setSelection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ListModemMessagesRequest.prototype.hasSelection = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional hiber.Pagination pagination = 3;
 * @return {?proto.hiber.Pagination}
 */
proto.hiber.modem.ListModemMessagesRequest.prototype.getPagination = function() {
  return /** @type{?proto.hiber.Pagination} */ (
    jspb.Message.getWrapperField(this, base_pb.Pagination, 3));
};


/** @param {?proto.hiber.Pagination|undefined} value */
proto.hiber.modem.ListModemMessagesRequest.prototype.setPagination = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.modem.ListModemMessagesRequest.prototype.clearPagination = function() {
  this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ListModemMessagesRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.MessageCountRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.modem.MessageCountRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.MessageCountRequest.displayName = 'proto.hiber.modem.MessageCountRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.MessageCountRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.MessageCountRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.MessageCountRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.MessageCountRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: jspb.Message.getFieldWithDefault(msg, 1, ""),
    selection: (f = msg.getSelection()) && proto.hiber.modem.ModemMessageSelection.toObject(includeInstance, f),
    timeZoneOffset: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.MessageCountRequest}
 */
proto.hiber.modem.MessageCountRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.MessageCountRequest;
  return proto.hiber.modem.MessageCountRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.MessageCountRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.MessageCountRequest}
 */
proto.hiber.modem.MessageCountRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 2:
      var value = new proto.hiber.modem.ModemMessageSelection;
      reader.readMessage(value,proto.hiber.modem.ModemMessageSelection.deserializeBinaryFromReader);
      msg.setSelection(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTimeZoneOffset(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.MessageCountRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.MessageCountRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.MessageCountRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.MessageCountRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSelection();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.hiber.modem.ModemMessageSelection.serializeBinaryToWriter
    );
  }
  f = message.getTimeZoneOffset();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.MessageCountRequest.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.modem.MessageCountRequest.Response.repeatedFields_, null);
};
goog.inherits(proto.hiber.modem.MessageCountRequest.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.MessageCountRequest.Response.displayName = 'proto.hiber.modem.MessageCountRequest.Response';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.modem.MessageCountRequest.Response.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.MessageCountRequest.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.MessageCountRequest.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.MessageCountRequest.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.MessageCountRequest.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    messageCountPerDayList: jspb.Message.toObjectList(msg.getMessageCountPerDayList(),
    proto.hiber.modem.MessageCountRequest.Response.MessageCount.toObject, includeInstance),
    request: (f = msg.getRequest()) && proto.hiber.modem.MessageCountRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.MessageCountRequest.Response}
 */
proto.hiber.modem.MessageCountRequest.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.MessageCountRequest.Response;
  return proto.hiber.modem.MessageCountRequest.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.MessageCountRequest.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.MessageCountRequest.Response}
 */
proto.hiber.modem.MessageCountRequest.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.hiber.modem.MessageCountRequest.Response.MessageCount;
      reader.readMessage(value,proto.hiber.modem.MessageCountRequest.Response.MessageCount.deserializeBinaryFromReader);
      msg.addMessageCountPerDay(value);
      break;
    case 2:
      var value = new proto.hiber.modem.MessageCountRequest;
      reader.readMessage(value,proto.hiber.modem.MessageCountRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.MessageCountRequest.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.MessageCountRequest.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.MessageCountRequest.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.MessageCountRequest.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessageCountPerDayList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.hiber.modem.MessageCountRequest.Response.MessageCount.serializeBinaryToWriter
    );
  }
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.hiber.modem.MessageCountRequest.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.MessageCountRequest.Response.MessageCount = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.modem.MessageCountRequest.Response.MessageCount, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.MessageCountRequest.Response.MessageCount.displayName = 'proto.hiber.modem.MessageCountRequest.Response.MessageCount';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.MessageCountRequest.Response.MessageCount.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.MessageCountRequest.Response.MessageCount.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.MessageCountRequest.Response.MessageCount} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.MessageCountRequest.Response.MessageCount.toObject = function(includeInstance, msg) {
  var f, obj = {
    date: (f = msg.getDate()) && base_pb.Date.toObject(includeInstance, f),
    count: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.MessageCountRequest.Response.MessageCount}
 */
proto.hiber.modem.MessageCountRequest.Response.MessageCount.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.MessageCountRequest.Response.MessageCount;
  return proto.hiber.modem.MessageCountRequest.Response.MessageCount.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.MessageCountRequest.Response.MessageCount} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.MessageCountRequest.Response.MessageCount}
 */
proto.hiber.modem.MessageCountRequest.Response.MessageCount.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new base_pb.Date;
      reader.readMessage(value,base_pb.Date.deserializeBinaryFromReader);
      msg.setDate(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.MessageCountRequest.Response.MessageCount.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.MessageCountRequest.Response.MessageCount.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.MessageCountRequest.Response.MessageCount} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.MessageCountRequest.Response.MessageCount.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDate();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      base_pb.Date.serializeBinaryToWriter
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional hiber.Date date = 1;
 * @return {?proto.hiber.Date}
 */
proto.hiber.modem.MessageCountRequest.Response.MessageCount.prototype.getDate = function() {
  return /** @type{?proto.hiber.Date} */ (
    jspb.Message.getWrapperField(this, base_pb.Date, 1));
};


/** @param {?proto.hiber.Date|undefined} value */
proto.hiber.modem.MessageCountRequest.Response.MessageCount.prototype.setDate = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.hiber.modem.MessageCountRequest.Response.MessageCount.prototype.clearDate = function() {
  this.setDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.MessageCountRequest.Response.MessageCount.prototype.hasDate = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 count = 2;
 * @return {number}
 */
proto.hiber.modem.MessageCountRequest.Response.MessageCount.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.hiber.modem.MessageCountRequest.Response.MessageCount.prototype.setCount = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * repeated MessageCount message_count_per_day = 1;
 * @return {!Array.<!proto.hiber.modem.MessageCountRequest.Response.MessageCount>}
 */
proto.hiber.modem.MessageCountRequest.Response.prototype.getMessageCountPerDayList = function() {
  return /** @type{!Array.<!proto.hiber.modem.MessageCountRequest.Response.MessageCount>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.hiber.modem.MessageCountRequest.Response.MessageCount, 1));
};


/** @param {!Array.<!proto.hiber.modem.MessageCountRequest.Response.MessageCount>} value */
proto.hiber.modem.MessageCountRequest.Response.prototype.setMessageCountPerDayList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.hiber.modem.MessageCountRequest.Response.MessageCount=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hiber.modem.MessageCountRequest.Response.MessageCount}
 */
proto.hiber.modem.MessageCountRequest.Response.prototype.addMessageCountPerDay = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.hiber.modem.MessageCountRequest.Response.MessageCount, opt_index);
};


proto.hiber.modem.MessageCountRequest.Response.prototype.clearMessageCountPerDayList = function() {
  this.setMessageCountPerDayList([]);
};


/**
 * optional MessageCountRequest request = 2;
 * @return {?proto.hiber.modem.MessageCountRequest}
 */
proto.hiber.modem.MessageCountRequest.Response.prototype.getRequest = function() {
  return /** @type{?proto.hiber.modem.MessageCountRequest} */ (
    jspb.Message.getWrapperField(this, proto.hiber.modem.MessageCountRequest, 2));
};


/** @param {?proto.hiber.modem.MessageCountRequest|undefined} value */
proto.hiber.modem.MessageCountRequest.Response.prototype.setRequest = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.modem.MessageCountRequest.Response.prototype.clearRequest = function() {
  this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.MessageCountRequest.Response.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string organization = 1;
 * @return {string}
 */
proto.hiber.modem.MessageCountRequest.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.modem.MessageCountRequest.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional ModemMessageSelection selection = 2;
 * @return {?proto.hiber.modem.ModemMessageSelection}
 */
proto.hiber.modem.MessageCountRequest.prototype.getSelection = function() {
  return /** @type{?proto.hiber.modem.ModemMessageSelection} */ (
    jspb.Message.getWrapperField(this, proto.hiber.modem.ModemMessageSelection, 2));
};


/** @param {?proto.hiber.modem.ModemMessageSelection|undefined} value */
proto.hiber.modem.MessageCountRequest.prototype.setSelection = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.modem.MessageCountRequest.prototype.clearSelection = function() {
  this.setSelection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.MessageCountRequest.prototype.hasSelection = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 time_zone_offset = 3;
 * @return {number}
 */
proto.hiber.modem.MessageCountRequest.prototype.getTimeZoneOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.hiber.modem.MessageCountRequest.prototype.setTimeZoneOffset = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.RenameModemRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.modem.RenameModemRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.RenameModemRequest.displayName = 'proto.hiber.modem.RenameModemRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.RenameModemRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.RenameModemRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.RenameModemRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.RenameModemRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: jspb.Message.getFieldWithDefault(msg, 1, ""),
    modemNumber: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.RenameModemRequest}
 */
proto.hiber.modem.RenameModemRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.RenameModemRequest;
  return proto.hiber.modem.RenameModemRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.RenameModemRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.RenameModemRequest}
 */
proto.hiber.modem.RenameModemRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setModemNumber(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.RenameModemRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.RenameModemRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.RenameModemRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.RenameModemRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getModemNumber();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string organization = 1;
 * @return {string}
 */
proto.hiber.modem.RenameModemRequest.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.modem.RenameModemRequest.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string modem_number = 2;
 * @return {string}
 */
proto.hiber.modem.RenameModemRequest.prototype.getModemNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hiber.modem.RenameModemRequest.prototype.setModemNumber = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.hiber.modem.RenameModemRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.hiber.modem.RenameModemRequest.prototype.setName = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.UpdateModemTagsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.modem.UpdateModemTagsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.UpdateModemTagsRequest.displayName = 'proto.hiber.modem.UpdateModemTagsRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.UpdateModemTagsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.UpdateModemTagsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.UpdateModemTagsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.UpdateModemTagsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: jspb.Message.getFieldWithDefault(msg, 1, ""),
    update: (f = msg.getUpdate()) && tag_pb.UpdateTagsForItem.toObject(includeInstance, f),
    selection: (f = msg.getSelection()) && proto.hiber.modem.ModemSelection.toObject(includeInstance, f),
    pagination: (f = msg.getPagination()) && base_pb.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.UpdateModemTagsRequest}
 */
proto.hiber.modem.UpdateModemTagsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.UpdateModemTagsRequest;
  return proto.hiber.modem.UpdateModemTagsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.UpdateModemTagsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.UpdateModemTagsRequest}
 */
proto.hiber.modem.UpdateModemTagsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 3:
      var value = new tag_pb.UpdateTagsForItem;
      reader.readMessage(value,tag_pb.UpdateTagsForItem.deserializeBinaryFromReader);
      msg.setUpdate(value);
      break;
    case 5:
      var value = new proto.hiber.modem.ModemSelection;
      reader.readMessage(value,proto.hiber.modem.ModemSelection.deserializeBinaryFromReader);
      msg.setSelection(value);
      break;
    case 6:
      var value = new base_pb.Pagination;
      reader.readMessage(value,base_pb.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.UpdateModemTagsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.UpdateModemTagsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.UpdateModemTagsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.UpdateModemTagsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUpdate();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      tag_pb.UpdateTagsForItem.serializeBinaryToWriter
    );
  }
  f = message.getSelection();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.hiber.modem.ModemSelection.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      base_pb.Pagination.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.UpdateModemTagsRequest.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.modem.UpdateModemTagsRequest.Response.repeatedFields_, null);
};
goog.inherits(proto.hiber.modem.UpdateModemTagsRequest.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.UpdateModemTagsRequest.Response.displayName = 'proto.hiber.modem.UpdateModemTagsRequest.Response';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.modem.UpdateModemTagsRequest.Response.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.UpdateModemTagsRequest.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.UpdateModemTagsRequest.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.UpdateModemTagsRequest.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.UpdateModemTagsRequest.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    modemsList: jspb.Message.toObjectList(msg.getModemsList(),
    proto.hiber.modem.Modem.toObject, includeInstance),
    request: (f = msg.getRequest()) && proto.hiber.modem.UpdateModemTagsRequest.toObject(includeInstance, f),
    pagination: (f = msg.getPagination()) && base_pb.Pagination.Result.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.UpdateModemTagsRequest.Response}
 */
proto.hiber.modem.UpdateModemTagsRequest.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.UpdateModemTagsRequest.Response;
  return proto.hiber.modem.UpdateModemTagsRequest.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.UpdateModemTagsRequest.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.UpdateModemTagsRequest.Response}
 */
proto.hiber.modem.UpdateModemTagsRequest.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.hiber.modem.Modem;
      reader.readMessage(value,proto.hiber.modem.Modem.deserializeBinaryFromReader);
      msg.addModems(value);
      break;
    case 2:
      var value = new proto.hiber.modem.UpdateModemTagsRequest;
      reader.readMessage(value,proto.hiber.modem.UpdateModemTagsRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    case 3:
      var value = new base_pb.Pagination.Result;
      reader.readMessage(value,base_pb.Pagination.Result.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.UpdateModemTagsRequest.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.UpdateModemTagsRequest.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.UpdateModemTagsRequest.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.UpdateModemTagsRequest.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.hiber.modem.Modem.serializeBinaryToWriter
    );
  }
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.hiber.modem.UpdateModemTagsRequest.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      base_pb.Pagination.Result.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Modem modems = 1;
 * @return {!Array.<!proto.hiber.modem.Modem>}
 */
proto.hiber.modem.UpdateModemTagsRequest.Response.prototype.getModemsList = function() {
  return /** @type{!Array.<!proto.hiber.modem.Modem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.hiber.modem.Modem, 1));
};


/** @param {!Array.<!proto.hiber.modem.Modem>} value */
proto.hiber.modem.UpdateModemTagsRequest.Response.prototype.setModemsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.hiber.modem.Modem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hiber.modem.Modem}
 */
proto.hiber.modem.UpdateModemTagsRequest.Response.prototype.addModems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.hiber.modem.Modem, opt_index);
};


proto.hiber.modem.UpdateModemTagsRequest.Response.prototype.clearModemsList = function() {
  this.setModemsList([]);
};


/**
 * optional UpdateModemTagsRequest request = 2;
 * @return {?proto.hiber.modem.UpdateModemTagsRequest}
 */
proto.hiber.modem.UpdateModemTagsRequest.Response.prototype.getRequest = function() {
  return /** @type{?proto.hiber.modem.UpdateModemTagsRequest} */ (
    jspb.Message.getWrapperField(this, proto.hiber.modem.UpdateModemTagsRequest, 2));
};


/** @param {?proto.hiber.modem.UpdateModemTagsRequest|undefined} value */
proto.hiber.modem.UpdateModemTagsRequest.Response.prototype.setRequest = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.modem.UpdateModemTagsRequest.Response.prototype.clearRequest = function() {
  this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.UpdateModemTagsRequest.Response.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional hiber.Pagination.Result pagination = 3;
 * @return {?proto.hiber.Pagination.Result}
 */
proto.hiber.modem.UpdateModemTagsRequest.Response.prototype.getPagination = function() {
  return /** @type{?proto.hiber.Pagination.Result} */ (
    jspb.Message.getWrapperField(this, base_pb.Pagination.Result, 3));
};


/** @param {?proto.hiber.Pagination.Result|undefined} value */
proto.hiber.modem.UpdateModemTagsRequest.Response.prototype.setPagination = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.modem.UpdateModemTagsRequest.Response.prototype.clearPagination = function() {
  this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.UpdateModemTagsRequest.Response.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string organization = 1;
 * @return {string}
 */
proto.hiber.modem.UpdateModemTagsRequest.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.modem.UpdateModemTagsRequest.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional hiber.tag.UpdateTagsForItem update = 3;
 * @return {?proto.hiber.tag.UpdateTagsForItem}
 */
proto.hiber.modem.UpdateModemTagsRequest.prototype.getUpdate = function() {
  return /** @type{?proto.hiber.tag.UpdateTagsForItem} */ (
    jspb.Message.getWrapperField(this, tag_pb.UpdateTagsForItem, 3));
};


/** @param {?proto.hiber.tag.UpdateTagsForItem|undefined} value */
proto.hiber.modem.UpdateModemTagsRequest.prototype.setUpdate = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.modem.UpdateModemTagsRequest.prototype.clearUpdate = function() {
  this.setUpdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.UpdateModemTagsRequest.prototype.hasUpdate = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ModemSelection selection = 5;
 * @return {?proto.hiber.modem.ModemSelection}
 */
proto.hiber.modem.UpdateModemTagsRequest.prototype.getSelection = function() {
  return /** @type{?proto.hiber.modem.ModemSelection} */ (
    jspb.Message.getWrapperField(this, proto.hiber.modem.ModemSelection, 5));
};


/** @param {?proto.hiber.modem.ModemSelection|undefined} value */
proto.hiber.modem.UpdateModemTagsRequest.prototype.setSelection = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.hiber.modem.UpdateModemTagsRequest.prototype.clearSelection = function() {
  this.setSelection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.UpdateModemTagsRequest.prototype.hasSelection = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional hiber.Pagination pagination = 6;
 * @return {?proto.hiber.Pagination}
 */
proto.hiber.modem.UpdateModemTagsRequest.prototype.getPagination = function() {
  return /** @type{?proto.hiber.Pagination} */ (
    jspb.Message.getWrapperField(this, base_pb.Pagination, 6));
};


/** @param {?proto.hiber.Pagination|undefined} value */
proto.hiber.modem.UpdateModemTagsRequest.prototype.setPagination = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.hiber.modem.UpdateModemTagsRequest.prototype.clearPagination = function() {
  this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.UpdateModemTagsRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.UpdatePeripheralsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.modem.UpdatePeripheralsRequest.repeatedFields_, null);
};
goog.inherits(proto.hiber.modem.UpdatePeripheralsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.UpdatePeripheralsRequest.displayName = 'proto.hiber.modem.UpdatePeripheralsRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.modem.UpdatePeripheralsRequest.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.UpdatePeripheralsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.UpdatePeripheralsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.UpdatePeripheralsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.UpdatePeripheralsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: jspb.Message.getFieldWithDefault(msg, 1, ""),
    selection: (f = msg.getSelection()) && proto.hiber.modem.ModemSelection.toObject(includeInstance, f),
    hiberAntenna: jspb.Message.getFieldWithDefault(msg, 3, 0),
    gps: (f = msg.getGps()) && base_pb.UpdateBoolean.toObject(includeInstance, f),
    hardcodedGpsLocation: (f = msg.getHardcodedGpsLocation()) && base_pb.Location.toObject(includeInstance, f),
    addPeripheralsMap: (f = msg.getAddPeripheralsMap()) ? f.toObject(includeInstance, undefined) : [],
    removePeripheralsList: jspb.Message.getRepeatedField(msg, 7),
    pagination: (f = msg.getPagination()) && base_pb.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.UpdatePeripheralsRequest}
 */
proto.hiber.modem.UpdatePeripheralsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.UpdatePeripheralsRequest;
  return proto.hiber.modem.UpdatePeripheralsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.UpdatePeripheralsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.UpdatePeripheralsRequest}
 */
proto.hiber.modem.UpdatePeripheralsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 2:
      var value = new proto.hiber.modem.ModemSelection;
      reader.readMessage(value,proto.hiber.modem.ModemSelection.deserializeBinaryFromReader);
      msg.setSelection(value);
      break;
    case 3:
      var value = /** @type {!proto.hiber.modem.Modem.Peripherals.HiberAntenna} */ (reader.readEnum());
      msg.setHiberAntenna(value);
      break;
    case 4:
      var value = new base_pb.UpdateBoolean;
      reader.readMessage(value,base_pb.UpdateBoolean.deserializeBinaryFromReader);
      msg.setGps(value);
      break;
    case 5:
      var value = new base_pb.Location;
      reader.readMessage(value,base_pb.Location.deserializeBinaryFromReader);
      msg.setHardcodedGpsLocation(value);
      break;
    case 6:
      var value = msg.getAddPeripheralsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString);
         });
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.addRemovePeripherals(value);
      break;
    case 9:
      var value = new base_pb.Pagination;
      reader.readMessage(value,base_pb.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.UpdatePeripheralsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.UpdatePeripheralsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.UpdatePeripheralsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.UpdatePeripheralsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSelection();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.hiber.modem.ModemSelection.serializeBinaryToWriter
    );
  }
  f = message.getHiberAntenna();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getGps();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      base_pb.UpdateBoolean.serializeBinaryToWriter
    );
  }
  f = message.getHardcodedGpsLocation();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      base_pb.Location.serializeBinaryToWriter
    );
  }
  f = message.getAddPeripheralsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(6, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getRemovePeripheralsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      7,
      f
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      base_pb.Pagination.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.UpdatePeripheralsRequest.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.modem.UpdatePeripheralsRequest.Response.repeatedFields_, null);
};
goog.inherits(proto.hiber.modem.UpdatePeripheralsRequest.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.UpdatePeripheralsRequest.Response.displayName = 'proto.hiber.modem.UpdatePeripheralsRequest.Response';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.modem.UpdatePeripheralsRequest.Response.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.UpdatePeripheralsRequest.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.UpdatePeripheralsRequest.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.UpdatePeripheralsRequest.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.UpdatePeripheralsRequest.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    request: (f = msg.getRequest()) && proto.hiber.modem.UpdatePeripheralsRequest.toObject(includeInstance, f),
    modemsList: jspb.Message.toObjectList(msg.getModemsList(),
    proto.hiber.modem.Modem.toObject, includeInstance),
    pagination: (f = msg.getPagination()) && base_pb.Pagination.Result.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.UpdatePeripheralsRequest.Response}
 */
proto.hiber.modem.UpdatePeripheralsRequest.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.UpdatePeripheralsRequest.Response;
  return proto.hiber.modem.UpdatePeripheralsRequest.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.UpdatePeripheralsRequest.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.UpdatePeripheralsRequest.Response}
 */
proto.hiber.modem.UpdatePeripheralsRequest.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.hiber.modem.UpdatePeripheralsRequest;
      reader.readMessage(value,proto.hiber.modem.UpdatePeripheralsRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    case 2:
      var value = new proto.hiber.modem.Modem;
      reader.readMessage(value,proto.hiber.modem.Modem.deserializeBinaryFromReader);
      msg.addModems(value);
      break;
    case 3:
      var value = new base_pb.Pagination.Result;
      reader.readMessage(value,base_pb.Pagination.Result.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.UpdatePeripheralsRequest.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.UpdatePeripheralsRequest.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.UpdatePeripheralsRequest.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.UpdatePeripheralsRequest.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.hiber.modem.UpdatePeripheralsRequest.serializeBinaryToWriter
    );
  }
  f = message.getModemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.hiber.modem.Modem.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      base_pb.Pagination.Result.serializeBinaryToWriter
    );
  }
};


/**
 * optional UpdatePeripheralsRequest request = 1;
 * @return {?proto.hiber.modem.UpdatePeripheralsRequest}
 */
proto.hiber.modem.UpdatePeripheralsRequest.Response.prototype.getRequest = function() {
  return /** @type{?proto.hiber.modem.UpdatePeripheralsRequest} */ (
    jspb.Message.getWrapperField(this, proto.hiber.modem.UpdatePeripheralsRequest, 1));
};


/** @param {?proto.hiber.modem.UpdatePeripheralsRequest|undefined} value */
proto.hiber.modem.UpdatePeripheralsRequest.Response.prototype.setRequest = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.hiber.modem.UpdatePeripheralsRequest.Response.prototype.clearRequest = function() {
  this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.UpdatePeripheralsRequest.Response.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Modem modems = 2;
 * @return {!Array.<!proto.hiber.modem.Modem>}
 */
proto.hiber.modem.UpdatePeripheralsRequest.Response.prototype.getModemsList = function() {
  return /** @type{!Array.<!proto.hiber.modem.Modem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.hiber.modem.Modem, 2));
};


/** @param {!Array.<!proto.hiber.modem.Modem>} value */
proto.hiber.modem.UpdatePeripheralsRequest.Response.prototype.setModemsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.hiber.modem.Modem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hiber.modem.Modem}
 */
proto.hiber.modem.UpdatePeripheralsRequest.Response.prototype.addModems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.hiber.modem.Modem, opt_index);
};


proto.hiber.modem.UpdatePeripheralsRequest.Response.prototype.clearModemsList = function() {
  this.setModemsList([]);
};


/**
 * optional hiber.Pagination.Result pagination = 3;
 * @return {?proto.hiber.Pagination.Result}
 */
proto.hiber.modem.UpdatePeripheralsRequest.Response.prototype.getPagination = function() {
  return /** @type{?proto.hiber.Pagination.Result} */ (
    jspb.Message.getWrapperField(this, base_pb.Pagination.Result, 3));
};


/** @param {?proto.hiber.Pagination.Result|undefined} value */
proto.hiber.modem.UpdatePeripheralsRequest.Response.prototype.setPagination = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.modem.UpdatePeripheralsRequest.Response.prototype.clearPagination = function() {
  this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.UpdatePeripheralsRequest.Response.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string organization = 1;
 * @return {string}
 */
proto.hiber.modem.UpdatePeripheralsRequest.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.modem.UpdatePeripheralsRequest.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional ModemSelection selection = 2;
 * @return {?proto.hiber.modem.ModemSelection}
 */
proto.hiber.modem.UpdatePeripheralsRequest.prototype.getSelection = function() {
  return /** @type{?proto.hiber.modem.ModemSelection} */ (
    jspb.Message.getWrapperField(this, proto.hiber.modem.ModemSelection, 2));
};


/** @param {?proto.hiber.modem.ModemSelection|undefined} value */
proto.hiber.modem.UpdatePeripheralsRequest.prototype.setSelection = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.modem.UpdatePeripheralsRequest.prototype.clearSelection = function() {
  this.setSelection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.UpdatePeripheralsRequest.prototype.hasSelection = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Modem.Peripherals.HiberAntenna hiber_antenna = 3;
 * @return {!proto.hiber.modem.Modem.Peripherals.HiberAntenna}
 */
proto.hiber.modem.UpdatePeripheralsRequest.prototype.getHiberAntenna = function() {
  return /** @type {!proto.hiber.modem.Modem.Peripherals.HiberAntenna} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.hiber.modem.Modem.Peripherals.HiberAntenna} value */
proto.hiber.modem.UpdatePeripheralsRequest.prototype.setHiberAntenna = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional hiber.UpdateBoolean gps = 4;
 * @return {?proto.hiber.UpdateBoolean}
 */
proto.hiber.modem.UpdatePeripheralsRequest.prototype.getGps = function() {
  return /** @type{?proto.hiber.UpdateBoolean} */ (
    jspb.Message.getWrapperField(this, base_pb.UpdateBoolean, 4));
};


/** @param {?proto.hiber.UpdateBoolean|undefined} value */
proto.hiber.modem.UpdatePeripheralsRequest.prototype.setGps = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.hiber.modem.UpdatePeripheralsRequest.prototype.clearGps = function() {
  this.setGps(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.UpdatePeripheralsRequest.prototype.hasGps = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional hiber.Location hardcoded_gps_location = 5;
 * @return {?proto.hiber.Location}
 */
proto.hiber.modem.UpdatePeripheralsRequest.prototype.getHardcodedGpsLocation = function() {
  return /** @type{?proto.hiber.Location} */ (
    jspb.Message.getWrapperField(this, base_pb.Location, 5));
};


/** @param {?proto.hiber.Location|undefined} value */
proto.hiber.modem.UpdatePeripheralsRequest.prototype.setHardcodedGpsLocation = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.hiber.modem.UpdatePeripheralsRequest.prototype.clearHardcodedGpsLocation = function() {
  this.setHardcodedGpsLocation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.UpdatePeripheralsRequest.prototype.hasHardcodedGpsLocation = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * map<string, string> add_peripherals = 6;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.hiber.modem.UpdatePeripheralsRequest.prototype.getAddPeripheralsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 6, opt_noLazyCreate,
      null));
};


proto.hiber.modem.UpdatePeripheralsRequest.prototype.clearAddPeripheralsMap = function() {
  this.getAddPeripheralsMap().clear();
};


/**
 * repeated string remove_peripherals = 7;
 * @return {!Array.<string>}
 */
proto.hiber.modem.UpdatePeripheralsRequest.prototype.getRemovePeripheralsList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 7));
};


/** @param {!Array.<string>} value */
proto.hiber.modem.UpdatePeripheralsRequest.prototype.setRemovePeripheralsList = function(value) {
  jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.hiber.modem.UpdatePeripheralsRequest.prototype.addRemovePeripherals = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


proto.hiber.modem.UpdatePeripheralsRequest.prototype.clearRemovePeripheralsList = function() {
  this.setRemovePeripheralsList([]);
};


/**
 * optional hiber.Pagination pagination = 9;
 * @return {?proto.hiber.Pagination}
 */
proto.hiber.modem.UpdatePeripheralsRequest.prototype.getPagination = function() {
  return /** @type{?proto.hiber.Pagination} */ (
    jspb.Message.getWrapperField(this, base_pb.Pagination, 9));
};


/** @param {?proto.hiber.Pagination|undefined} value */
proto.hiber.modem.UpdatePeripheralsRequest.prototype.setPagination = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


proto.hiber.modem.UpdatePeripheralsRequest.prototype.clearPagination = function() {
  this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.UpdatePeripheralsRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 9) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.LicenseKeysRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.modem.LicenseKeysRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.LicenseKeysRequest.displayName = 'proto.hiber.modem.LicenseKeysRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.LicenseKeysRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.LicenseKeysRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.LicenseKeysRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.LicenseKeysRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: jspb.Message.getFieldWithDefault(msg, 1, ""),
    selection: (f = msg.getSelection()) && proto.hiber.modem.ModemSelection.toObject(includeInstance, f),
    pagination: (f = msg.getPagination()) && base_pb.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.LicenseKeysRequest}
 */
proto.hiber.modem.LicenseKeysRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.LicenseKeysRequest;
  return proto.hiber.modem.LicenseKeysRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.LicenseKeysRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.LicenseKeysRequest}
 */
proto.hiber.modem.LicenseKeysRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 2:
      var value = new proto.hiber.modem.ModemSelection;
      reader.readMessage(value,proto.hiber.modem.ModemSelection.deserializeBinaryFromReader);
      msg.setSelection(value);
      break;
    case 3:
      var value = new base_pb.Pagination;
      reader.readMessage(value,base_pb.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.LicenseKeysRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.LicenseKeysRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.LicenseKeysRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.LicenseKeysRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSelection();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.hiber.modem.ModemSelection.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      base_pb.Pagination.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.LicenseKeysRequest.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.modem.LicenseKeysRequest.Response.repeatedFields_, null);
};
goog.inherits(proto.hiber.modem.LicenseKeysRequest.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.LicenseKeysRequest.Response.displayName = 'proto.hiber.modem.LicenseKeysRequest.Response';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.modem.LicenseKeysRequest.Response.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.LicenseKeysRequest.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.LicenseKeysRequest.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.LicenseKeysRequest.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.LicenseKeysRequest.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    request: (f = msg.getRequest()) && proto.hiber.modem.LicenseKeysRequest.toObject(includeInstance, f),
    licenseKeysList: jspb.Message.toObjectList(msg.getLicenseKeysList(),
    proto.hiber.modem.LicenseKeysRequest.Response.ModemLicenseKey.toObject, includeInstance),
    pagination: (f = msg.getPagination()) && base_pb.Pagination.Result.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.LicenseKeysRequest.Response}
 */
proto.hiber.modem.LicenseKeysRequest.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.LicenseKeysRequest.Response;
  return proto.hiber.modem.LicenseKeysRequest.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.LicenseKeysRequest.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.LicenseKeysRequest.Response}
 */
proto.hiber.modem.LicenseKeysRequest.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.hiber.modem.LicenseKeysRequest;
      reader.readMessage(value,proto.hiber.modem.LicenseKeysRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    case 2:
      var value = new proto.hiber.modem.LicenseKeysRequest.Response.ModemLicenseKey;
      reader.readMessage(value,proto.hiber.modem.LicenseKeysRequest.Response.ModemLicenseKey.deserializeBinaryFromReader);
      msg.addLicenseKeys(value);
      break;
    case 3:
      var value = new base_pb.Pagination.Result;
      reader.readMessage(value,base_pb.Pagination.Result.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.LicenseKeysRequest.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.LicenseKeysRequest.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.LicenseKeysRequest.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.LicenseKeysRequest.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.hiber.modem.LicenseKeysRequest.serializeBinaryToWriter
    );
  }
  f = message.getLicenseKeysList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.hiber.modem.LicenseKeysRequest.Response.ModemLicenseKey.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      base_pb.Pagination.Result.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.LicenseKeysRequest.Response.ModemLicenseKey = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.modem.LicenseKeysRequest.Response.ModemLicenseKey, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.LicenseKeysRequest.Response.ModemLicenseKey.displayName = 'proto.hiber.modem.LicenseKeysRequest.Response.ModemLicenseKey';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.LicenseKeysRequest.Response.ModemLicenseKey.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.LicenseKeysRequest.Response.ModemLicenseKey.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.LicenseKeysRequest.Response.ModemLicenseKey} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.LicenseKeysRequest.Response.ModemLicenseKey.toObject = function(includeInstance, msg) {
  var f, obj = {
    modemNumber: jspb.Message.getFieldWithDefault(msg, 1, ""),
    licenseKey: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.LicenseKeysRequest.Response.ModemLicenseKey}
 */
proto.hiber.modem.LicenseKeysRequest.Response.ModemLicenseKey.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.LicenseKeysRequest.Response.ModemLicenseKey;
  return proto.hiber.modem.LicenseKeysRequest.Response.ModemLicenseKey.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.LicenseKeysRequest.Response.ModemLicenseKey} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.LicenseKeysRequest.Response.ModemLicenseKey}
 */
proto.hiber.modem.LicenseKeysRequest.Response.ModemLicenseKey.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setModemNumber(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLicenseKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.LicenseKeysRequest.Response.ModemLicenseKey.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.LicenseKeysRequest.Response.ModemLicenseKey.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.LicenseKeysRequest.Response.ModemLicenseKey} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.LicenseKeysRequest.Response.ModemLicenseKey.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModemNumber();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLicenseKey();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string modem_number = 1;
 * @return {string}
 */
proto.hiber.modem.LicenseKeysRequest.Response.ModemLicenseKey.prototype.getModemNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.modem.LicenseKeysRequest.Response.ModemLicenseKey.prototype.setModemNumber = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string license_key = 2;
 * @return {string}
 */
proto.hiber.modem.LicenseKeysRequest.Response.ModemLicenseKey.prototype.getLicenseKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hiber.modem.LicenseKeysRequest.Response.ModemLicenseKey.prototype.setLicenseKey = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional LicenseKeysRequest request = 1;
 * @return {?proto.hiber.modem.LicenseKeysRequest}
 */
proto.hiber.modem.LicenseKeysRequest.Response.prototype.getRequest = function() {
  return /** @type{?proto.hiber.modem.LicenseKeysRequest} */ (
    jspb.Message.getWrapperField(this, proto.hiber.modem.LicenseKeysRequest, 1));
};


/** @param {?proto.hiber.modem.LicenseKeysRequest|undefined} value */
proto.hiber.modem.LicenseKeysRequest.Response.prototype.setRequest = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.hiber.modem.LicenseKeysRequest.Response.prototype.clearRequest = function() {
  this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.LicenseKeysRequest.Response.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated ModemLicenseKey license_keys = 2;
 * @return {!Array.<!proto.hiber.modem.LicenseKeysRequest.Response.ModemLicenseKey>}
 */
proto.hiber.modem.LicenseKeysRequest.Response.prototype.getLicenseKeysList = function() {
  return /** @type{!Array.<!proto.hiber.modem.LicenseKeysRequest.Response.ModemLicenseKey>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.hiber.modem.LicenseKeysRequest.Response.ModemLicenseKey, 2));
};


/** @param {!Array.<!proto.hiber.modem.LicenseKeysRequest.Response.ModemLicenseKey>} value */
proto.hiber.modem.LicenseKeysRequest.Response.prototype.setLicenseKeysList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.hiber.modem.LicenseKeysRequest.Response.ModemLicenseKey=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hiber.modem.LicenseKeysRequest.Response.ModemLicenseKey}
 */
proto.hiber.modem.LicenseKeysRequest.Response.prototype.addLicenseKeys = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.hiber.modem.LicenseKeysRequest.Response.ModemLicenseKey, opt_index);
};


proto.hiber.modem.LicenseKeysRequest.Response.prototype.clearLicenseKeysList = function() {
  this.setLicenseKeysList([]);
};


/**
 * optional hiber.Pagination.Result pagination = 3;
 * @return {?proto.hiber.Pagination.Result}
 */
proto.hiber.modem.LicenseKeysRequest.Response.prototype.getPagination = function() {
  return /** @type{?proto.hiber.Pagination.Result} */ (
    jspb.Message.getWrapperField(this, base_pb.Pagination.Result, 3));
};


/** @param {?proto.hiber.Pagination.Result|undefined} value */
proto.hiber.modem.LicenseKeysRequest.Response.prototype.setPagination = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.modem.LicenseKeysRequest.Response.prototype.clearPagination = function() {
  this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.LicenseKeysRequest.Response.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string organization = 1;
 * @return {string}
 */
proto.hiber.modem.LicenseKeysRequest.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.modem.LicenseKeysRequest.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional ModemSelection selection = 2;
 * @return {?proto.hiber.modem.ModemSelection}
 */
proto.hiber.modem.LicenseKeysRequest.prototype.getSelection = function() {
  return /** @type{?proto.hiber.modem.ModemSelection} */ (
    jspb.Message.getWrapperField(this, proto.hiber.modem.ModemSelection, 2));
};


/** @param {?proto.hiber.modem.ModemSelection|undefined} value */
proto.hiber.modem.LicenseKeysRequest.prototype.setSelection = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.modem.LicenseKeysRequest.prototype.clearSelection = function() {
  this.setSelection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.LicenseKeysRequest.prototype.hasSelection = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional hiber.Pagination pagination = 3;
 * @return {?proto.hiber.Pagination}
 */
proto.hiber.modem.LicenseKeysRequest.prototype.getPagination = function() {
  return /** @type{?proto.hiber.Pagination} */ (
    jspb.Message.getWrapperField(this, base_pb.Pagination, 3));
};


/** @param {?proto.hiber.Pagination|undefined} value */
proto.hiber.modem.LicenseKeysRequest.prototype.setPagination = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.modem.LicenseKeysRequest.prototype.clearPagination = function() {
  this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.LicenseKeysRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 3) != null;
};


goog.object.extend(exports, proto.hiber.modem);
