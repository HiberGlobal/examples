/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var base_pb = require('./base_pb.js');
var tag_pb = require('./tag_pb.js');
var subscription_pb = require('./subscription_pb.js');
goog.exportSymbol('proto.hiber.modem.GetModemRequest', null, global);
goog.exportSymbol('proto.hiber.modem.ListModemMessagesRequest', null, global);
goog.exportSymbol('proto.hiber.modem.ListModemMessagesRequest.Response', null, global);
goog.exportSymbol('proto.hiber.modem.ListModemsRequest', null, global);
goog.exportSymbol('proto.hiber.modem.ListModemsRequest.Response', null, global);
goog.exportSymbol('proto.hiber.modem.ListModemsRequest.Sort', null, global);
goog.exportSymbol('proto.hiber.modem.MessageCountRequest', null, global);
goog.exportSymbol('proto.hiber.modem.MessageCountRequest.Response', null, global);
goog.exportSymbol('proto.hiber.modem.Modem', null, global);
goog.exportSymbol('proto.hiber.modem.Modem.ActiveSubscription', null, global);
goog.exportSymbol('proto.hiber.modem.Modem.TechnicalData', null, global);
goog.exportSymbol('proto.hiber.modem.ModemMessage', null, global);
goog.exportSymbol('proto.hiber.modem.ModemMessageSelection', null, global);
goog.exportSymbol('proto.hiber.modem.ModemSelection', null, global);
goog.exportSymbol('proto.hiber.modem.RenameModemRequest', null, global);
goog.exportSymbol('proto.hiber.modem.UpdateModemPayloadTemplateRequest', null, global);
goog.exportSymbol('proto.hiber.modem.UpdateModemTagsRequest', null, global);
goog.exportSymbol('proto.hiber.modem.UpdateModemTagsRequest.Response', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.Modem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.modem.Modem.repeatedFields_, null);
};
goog.inherits(proto.hiber.modem.Modem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.Modem.displayName = 'proto.hiber.modem.Modem';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.modem.Modem.repeatedFields_ = [10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.Modem.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.Modem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.Modem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.Modem.toObject = function(includeInstance, msg) {
  var f, obj = {
    number: jspb.Message.getFieldWithDefault(msg, 1, ""),
    account: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    location: (f = msg.getLocation()) && base_pb.Location.toObject(includeInstance, f),
    lastMessageReceivedAt: (f = msg.getLastMessageReceivedAt()) && base_pb.Timestamp.toObject(includeInstance, f),
    activeSubscription: (f = msg.getActiveSubscription()) && proto.hiber.modem.Modem.ActiveSubscription.toObject(includeInstance, f),
    technical: (f = msg.getTechnical()) && proto.hiber.modem.Modem.TechnicalData.toObject(includeInstance, f),
    guardPeriod: jspb.Message.getFieldWithDefault(msg, 8, 0),
    health: jspb.Message.getFieldWithDefault(msg, 9, 0),
    tagsList: jspb.Message.toObjectList(msg.getTagsList(),
    tag_pb.Tag.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.Modem}
 */
proto.hiber.modem.Modem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.Modem;
  return proto.hiber.modem.Modem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.Modem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.Modem}
 */
proto.hiber.modem.Modem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNumber(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccount(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = new base_pb.Location;
      reader.readMessage(value,base_pb.Location.deserializeBinaryFromReader);
      msg.setLocation(value);
      break;
    case 5:
      var value = new base_pb.Timestamp;
      reader.readMessage(value,base_pb.Timestamp.deserializeBinaryFromReader);
      msg.setLastMessageReceivedAt(value);
      break;
    case 6:
      var value = new proto.hiber.modem.Modem.ActiveSubscription;
      reader.readMessage(value,proto.hiber.modem.Modem.ActiveSubscription.deserializeBinaryFromReader);
      msg.setActiveSubscription(value);
      break;
    case 7:
      var value = new proto.hiber.modem.Modem.TechnicalData;
      reader.readMessage(value,proto.hiber.modem.Modem.TechnicalData.deserializeBinaryFromReader);
      msg.setTechnical(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGuardPeriod(value);
      break;
    case 9:
      var value = /** @type {!proto.hiber.Health} */ (reader.readEnum());
      msg.setHealth(value);
      break;
    case 10:
      var value = new tag_pb.Tag;
      reader.readMessage(value,tag_pb.Tag.deserializeBinaryFromReader);
      msg.addTags(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.Modem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.Modem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.Modem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.Modem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNumber();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAccount();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLocation();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      base_pb.Location.serializeBinaryToWriter
    );
  }
  f = message.getLastMessageReceivedAt();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      base_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getActiveSubscription();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.hiber.modem.Modem.ActiveSubscription.serializeBinaryToWriter
    );
  }
  f = message.getTechnical();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.hiber.modem.Modem.TechnicalData.serializeBinaryToWriter
    );
  }
  f = message.getGuardPeriod();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getHealth();
  if (f !== 0.0) {
    writer.writeEnum(
      9,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      tag_pb.Tag.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.Modem.TechnicalData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.modem.Modem.TechnicalData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.Modem.TechnicalData.displayName = 'proto.hiber.modem.Modem.TechnicalData';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.Modem.TechnicalData.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.Modem.TechnicalData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.Modem.TechnicalData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.Modem.TechnicalData.toObject = function(includeInstance, msg) {
  var f, obj = {
    chipId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    hardwareName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    firmwareVersionName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    messageFormatVersion: jspb.Message.getFieldWithDefault(msg, 4, 0),
    payloadTemplate: jspb.Message.getFieldWithDefault(msg, 5, ""),
    hardwareProductionBatch: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.Modem.TechnicalData}
 */
proto.hiber.modem.Modem.TechnicalData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.Modem.TechnicalData;
  return proto.hiber.modem.Modem.TechnicalData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.Modem.TechnicalData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.Modem.TechnicalData}
 */
proto.hiber.modem.Modem.TechnicalData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setChipId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHardwareName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFirmwareVersionName(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMessageFormatVersion(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPayloadTemplate(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setHardwareProductionBatch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.Modem.TechnicalData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.Modem.TechnicalData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.Modem.TechnicalData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.Modem.TechnicalData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChipId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getHardwareName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFirmwareVersionName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMessageFormatVersion();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getPayloadTemplate();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getHardwareProductionBatch();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional int64 chip_id = 1;
 * @return {number}
 */
proto.hiber.modem.Modem.TechnicalData.prototype.getChipId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.hiber.modem.Modem.TechnicalData.prototype.setChipId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string hardware_name = 2;
 * @return {string}
 */
proto.hiber.modem.Modem.TechnicalData.prototype.getHardwareName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hiber.modem.Modem.TechnicalData.prototype.setHardwareName = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string firmware_version_name = 3;
 * @return {string}
 */
proto.hiber.modem.Modem.TechnicalData.prototype.getFirmwareVersionName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.hiber.modem.Modem.TechnicalData.prototype.setFirmwareVersionName = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional int32 message_format_version = 4;
 * @return {number}
 */
proto.hiber.modem.Modem.TechnicalData.prototype.getMessageFormatVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.hiber.modem.Modem.TechnicalData.prototype.setMessageFormatVersion = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string payload_template = 5;
 * @return {string}
 */
proto.hiber.modem.Modem.TechnicalData.prototype.getPayloadTemplate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.hiber.modem.Modem.TechnicalData.prototype.setPayloadTemplate = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional string hardware_production_batch = 6;
 * @return {string}
 */
proto.hiber.modem.Modem.TechnicalData.prototype.getHardwareProductionBatch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.hiber.modem.Modem.TechnicalData.prototype.setHardwareProductionBatch = function(value) {
  jspb.Message.setField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.Modem.ActiveSubscription = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.modem.Modem.ActiveSubscription, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.Modem.ActiveSubscription.displayName = 'proto.hiber.modem.Modem.ActiveSubscription';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.Modem.ActiveSubscription.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.Modem.ActiveSubscription.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.Modem.ActiveSubscription} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.Modem.ActiveSubscription.toObject = function(includeInstance, msg) {
  var f, obj = {
    licenseKey: jspb.Message.getFieldWithDefault(msg, 2, ""),
    type: jspb.Message.getFieldWithDefault(msg, 3, 0),
    startDate: (f = msg.getStartDate()) && base_pb.Timestamp.toObject(includeInstance, f),
    endDate: (f = msg.getEndDate()) && base_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.Modem.ActiveSubscription}
 */
proto.hiber.modem.Modem.ActiveSubscription.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.Modem.ActiveSubscription;
  return proto.hiber.modem.Modem.ActiveSubscription.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.Modem.ActiveSubscription} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.Modem.ActiveSubscription}
 */
proto.hiber.modem.Modem.ActiveSubscription.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLicenseKey(value);
      break;
    case 3:
      var value = /** @type {!proto.hiber.account.subscription.ServiceType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 4:
      var value = new base_pb.Timestamp;
      reader.readMessage(value,base_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStartDate(value);
      break;
    case 5:
      var value = new base_pb.Timestamp;
      reader.readMessage(value,base_pb.Timestamp.deserializeBinaryFromReader);
      msg.setEndDate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.Modem.ActiveSubscription.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.Modem.ActiveSubscription.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.Modem.ActiveSubscription} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.Modem.ActiveSubscription.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLicenseKey();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getStartDate();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      base_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getEndDate();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      base_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string license_key = 2;
 * @return {string}
 */
proto.hiber.modem.Modem.ActiveSubscription.prototype.getLicenseKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hiber.modem.Modem.ActiveSubscription.prototype.setLicenseKey = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional hiber.account.subscription.ServiceType type = 3;
 * @return {!proto.hiber.account.subscription.ServiceType}
 */
proto.hiber.modem.Modem.ActiveSubscription.prototype.getType = function() {
  return /** @type {!proto.hiber.account.subscription.ServiceType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.hiber.account.subscription.ServiceType} value */
proto.hiber.modem.Modem.ActiveSubscription.prototype.setType = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional hiber.Timestamp start_date = 4;
 * @return {?proto.hiber.Timestamp}
 */
proto.hiber.modem.Modem.ActiveSubscription.prototype.getStartDate = function() {
  return /** @type{?proto.hiber.Timestamp} */ (
    jspb.Message.getWrapperField(this, base_pb.Timestamp, 4));
};


/** @param {?proto.hiber.Timestamp|undefined} value */
proto.hiber.modem.Modem.ActiveSubscription.prototype.setStartDate = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.hiber.modem.Modem.ActiveSubscription.prototype.clearStartDate = function() {
  this.setStartDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.Modem.ActiveSubscription.prototype.hasStartDate = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional hiber.Timestamp end_date = 5;
 * @return {?proto.hiber.Timestamp}
 */
proto.hiber.modem.Modem.ActiveSubscription.prototype.getEndDate = function() {
  return /** @type{?proto.hiber.Timestamp} */ (
    jspb.Message.getWrapperField(this, base_pb.Timestamp, 5));
};


/** @param {?proto.hiber.Timestamp|undefined} value */
proto.hiber.modem.Modem.ActiveSubscription.prototype.setEndDate = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.hiber.modem.Modem.ActiveSubscription.prototype.clearEndDate = function() {
  this.setEndDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.Modem.ActiveSubscription.prototype.hasEndDate = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string number = 1;
 * @return {string}
 */
proto.hiber.modem.Modem.prototype.getNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.modem.Modem.prototype.setNumber = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string account = 2;
 * @return {string}
 */
proto.hiber.modem.Modem.prototype.getAccount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hiber.modem.Modem.prototype.setAccount = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.hiber.modem.Modem.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.hiber.modem.Modem.prototype.setName = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional hiber.Location location = 4;
 * @return {?proto.hiber.Location}
 */
proto.hiber.modem.Modem.prototype.getLocation = function() {
  return /** @type{?proto.hiber.Location} */ (
    jspb.Message.getWrapperField(this, base_pb.Location, 4));
};


/** @param {?proto.hiber.Location|undefined} value */
proto.hiber.modem.Modem.prototype.setLocation = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.hiber.modem.Modem.prototype.clearLocation = function() {
  this.setLocation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.Modem.prototype.hasLocation = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional hiber.Timestamp last_message_received_at = 5;
 * @return {?proto.hiber.Timestamp}
 */
proto.hiber.modem.Modem.prototype.getLastMessageReceivedAt = function() {
  return /** @type{?proto.hiber.Timestamp} */ (
    jspb.Message.getWrapperField(this, base_pb.Timestamp, 5));
};


/** @param {?proto.hiber.Timestamp|undefined} value */
proto.hiber.modem.Modem.prototype.setLastMessageReceivedAt = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.hiber.modem.Modem.prototype.clearLastMessageReceivedAt = function() {
  this.setLastMessageReceivedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.Modem.prototype.hasLastMessageReceivedAt = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ActiveSubscription active_subscription = 6;
 * @return {?proto.hiber.modem.Modem.ActiveSubscription}
 */
proto.hiber.modem.Modem.prototype.getActiveSubscription = function() {
  return /** @type{?proto.hiber.modem.Modem.ActiveSubscription} */ (
    jspb.Message.getWrapperField(this, proto.hiber.modem.Modem.ActiveSubscription, 6));
};


/** @param {?proto.hiber.modem.Modem.ActiveSubscription|undefined} value */
proto.hiber.modem.Modem.prototype.setActiveSubscription = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.hiber.modem.Modem.prototype.clearActiveSubscription = function() {
  this.setActiveSubscription(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.Modem.prototype.hasActiveSubscription = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional TechnicalData technical = 7;
 * @return {?proto.hiber.modem.Modem.TechnicalData}
 */
proto.hiber.modem.Modem.prototype.getTechnical = function() {
  return /** @type{?proto.hiber.modem.Modem.TechnicalData} */ (
    jspb.Message.getWrapperField(this, proto.hiber.modem.Modem.TechnicalData, 7));
};


/** @param {?proto.hiber.modem.Modem.TechnicalData|undefined} value */
proto.hiber.modem.Modem.prototype.setTechnical = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.hiber.modem.Modem.prototype.clearTechnical = function() {
  this.setTechnical(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.Modem.prototype.hasTechnical = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional int32 guard_period = 8;
 * @return {number}
 */
proto.hiber.modem.Modem.prototype.getGuardPeriod = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.hiber.modem.Modem.prototype.setGuardPeriod = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * optional hiber.Health health = 9;
 * @return {!proto.hiber.Health}
 */
proto.hiber.modem.Modem.prototype.getHealth = function() {
  return /** @type {!proto.hiber.Health} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {!proto.hiber.Health} value */
proto.hiber.modem.Modem.prototype.setHealth = function(value) {
  jspb.Message.setField(this, 9, value);
};


/**
 * repeated hiber.tag.Tag tags = 10;
 * @return {!Array.<!proto.hiber.tag.Tag>}
 */
proto.hiber.modem.Modem.prototype.getTagsList = function() {
  return /** @type{!Array.<!proto.hiber.tag.Tag>} */ (
    jspb.Message.getRepeatedWrapperField(this, tag_pb.Tag, 10));
};


/** @param {!Array.<!proto.hiber.tag.Tag>} value */
proto.hiber.modem.Modem.prototype.setTagsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.hiber.tag.Tag=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hiber.tag.Tag}
 */
proto.hiber.modem.Modem.prototype.addTags = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.hiber.tag.Tag, opt_index);
};


proto.hiber.modem.Modem.prototype.clearTagsList = function() {
  this.setTagsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.ModemSelection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.modem.ModemSelection.repeatedFields_, null);
};
goog.inherits(proto.hiber.modem.ModemSelection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.ModemSelection.displayName = 'proto.hiber.modem.ModemSelection';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.modem.ModemSelection.repeatedFields_ = [6,9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.ModemSelection.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.ModemSelection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.ModemSelection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.ModemSelection.toObject = function(includeInstance, msg) {
  var f, obj = {
    modems: (f = msg.getModems()) && base_pb.Filter.Modems.toObject(includeInstance, f),
    tags: (f = msg.getTags()) && tag_pb.TagSelection.toObject(includeInstance, f),
    childAccounts: (f = msg.getChildAccounts()) && base_pb.Filter.ChildAccounts.toObject(includeInstance, f),
    onlyActive: jspb.Message.getFieldWithDefault(msg, 4, false),
    activatedIn: (f = msg.getActivatedIn()) && base_pb.TimeRange.toObject(includeInstance, f),
    withServiceTypeList: jspb.Message.getRepeatedField(msg, 6),
    withLastMessageIn: (f = msg.getWithLastMessageIn()) && base_pb.TimeRange.toObject(includeInstance, f),
    freetextsearch: jspb.Message.getFieldWithDefault(msg, 8, ""),
    healthList: jspb.Message.getRepeatedField(msg, 9)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.ModemSelection}
 */
proto.hiber.modem.ModemSelection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.ModemSelection;
  return proto.hiber.modem.ModemSelection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.ModemSelection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.ModemSelection}
 */
proto.hiber.modem.ModemSelection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new base_pb.Filter.Modems;
      reader.readMessage(value,base_pb.Filter.Modems.deserializeBinaryFromReader);
      msg.setModems(value);
      break;
    case 2:
      var value = new tag_pb.TagSelection;
      reader.readMessage(value,tag_pb.TagSelection.deserializeBinaryFromReader);
      msg.setTags(value);
      break;
    case 3:
      var value = new base_pb.Filter.ChildAccounts;
      reader.readMessage(value,base_pb.Filter.ChildAccounts.deserializeBinaryFromReader);
      msg.setChildAccounts(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOnlyActive(value);
      break;
    case 5:
      var value = new base_pb.TimeRange;
      reader.readMessage(value,base_pb.TimeRange.deserializeBinaryFromReader);
      msg.setActivatedIn(value);
      break;
    case 6:
      var value = /** @type {!Array.<!proto.hiber.account.subscription.ServiceType>} */ (reader.readPackedEnum());
      msg.setWithServiceTypeList(value);
      break;
    case 7:
      var value = new base_pb.TimeRange;
      reader.readMessage(value,base_pb.TimeRange.deserializeBinaryFromReader);
      msg.setWithLastMessageIn(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setFreetextsearch(value);
      break;
    case 9:
      var value = /** @type {!Array.<!proto.hiber.Health>} */ (reader.readPackedEnum());
      msg.setHealthList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.ModemSelection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.ModemSelection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.ModemSelection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.ModemSelection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModems();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      base_pb.Filter.Modems.serializeBinaryToWriter
    );
  }
  f = message.getTags();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      tag_pb.TagSelection.serializeBinaryToWriter
    );
  }
  f = message.getChildAccounts();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      base_pb.Filter.ChildAccounts.serializeBinaryToWriter
    );
  }
  f = message.getOnlyActive();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getActivatedIn();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      base_pb.TimeRange.serializeBinaryToWriter
    );
  }
  f = message.getWithServiceTypeList();
  if (f.length > 0) {
    writer.writePackedEnum(
      6,
      f
    );
  }
  f = message.getWithLastMessageIn();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      base_pb.TimeRange.serializeBinaryToWriter
    );
  }
  f = message.getFreetextsearch();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getHealthList();
  if (f.length > 0) {
    writer.writePackedEnum(
      9,
      f
    );
  }
};


/**
 * optional hiber.Filter.Modems modems = 1;
 * @return {?proto.hiber.Filter.Modems}
 */
proto.hiber.modem.ModemSelection.prototype.getModems = function() {
  return /** @type{?proto.hiber.Filter.Modems} */ (
    jspb.Message.getWrapperField(this, base_pb.Filter.Modems, 1));
};


/** @param {?proto.hiber.Filter.Modems|undefined} value */
proto.hiber.modem.ModemSelection.prototype.setModems = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.hiber.modem.ModemSelection.prototype.clearModems = function() {
  this.setModems(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ModemSelection.prototype.hasModems = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional hiber.tag.TagSelection tags = 2;
 * @return {?proto.hiber.tag.TagSelection}
 */
proto.hiber.modem.ModemSelection.prototype.getTags = function() {
  return /** @type{?proto.hiber.tag.TagSelection} */ (
    jspb.Message.getWrapperField(this, tag_pb.TagSelection, 2));
};


/** @param {?proto.hiber.tag.TagSelection|undefined} value */
proto.hiber.modem.ModemSelection.prototype.setTags = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.modem.ModemSelection.prototype.clearTags = function() {
  this.setTags(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ModemSelection.prototype.hasTags = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional hiber.Filter.ChildAccounts child_accounts = 3;
 * @return {?proto.hiber.Filter.ChildAccounts}
 */
proto.hiber.modem.ModemSelection.prototype.getChildAccounts = function() {
  return /** @type{?proto.hiber.Filter.ChildAccounts} */ (
    jspb.Message.getWrapperField(this, base_pb.Filter.ChildAccounts, 3));
};


/** @param {?proto.hiber.Filter.ChildAccounts|undefined} value */
proto.hiber.modem.ModemSelection.prototype.setChildAccounts = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.modem.ModemSelection.prototype.clearChildAccounts = function() {
  this.setChildAccounts(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ModemSelection.prototype.hasChildAccounts = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool only_active = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.hiber.modem.ModemSelection.prototype.getOnlyActive = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.hiber.modem.ModemSelection.prototype.setOnlyActive = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional hiber.TimeRange activated_in = 5;
 * @return {?proto.hiber.TimeRange}
 */
proto.hiber.modem.ModemSelection.prototype.getActivatedIn = function() {
  return /** @type{?proto.hiber.TimeRange} */ (
    jspb.Message.getWrapperField(this, base_pb.TimeRange, 5));
};


/** @param {?proto.hiber.TimeRange|undefined} value */
proto.hiber.modem.ModemSelection.prototype.setActivatedIn = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.hiber.modem.ModemSelection.prototype.clearActivatedIn = function() {
  this.setActivatedIn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ModemSelection.prototype.hasActivatedIn = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated hiber.account.subscription.ServiceType with_service_type = 6;
 * @return {!Array.<!proto.hiber.account.subscription.ServiceType>}
 */
proto.hiber.modem.ModemSelection.prototype.getWithServiceTypeList = function() {
  return /** @type {!Array.<!proto.hiber.account.subscription.ServiceType>} */ (jspb.Message.getRepeatedField(this, 6));
};


/** @param {!Array.<!proto.hiber.account.subscription.ServiceType>} value */
proto.hiber.modem.ModemSelection.prototype.setWithServiceTypeList = function(value) {
  jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {!proto.hiber.account.subscription.ServiceType} value
 * @param {number=} opt_index
 */
proto.hiber.modem.ModemSelection.prototype.addWithServiceType = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


proto.hiber.modem.ModemSelection.prototype.clearWithServiceTypeList = function() {
  this.setWithServiceTypeList([]);
};


/**
 * optional hiber.TimeRange with_last_message_in = 7;
 * @return {?proto.hiber.TimeRange}
 */
proto.hiber.modem.ModemSelection.prototype.getWithLastMessageIn = function() {
  return /** @type{?proto.hiber.TimeRange} */ (
    jspb.Message.getWrapperField(this, base_pb.TimeRange, 7));
};


/** @param {?proto.hiber.TimeRange|undefined} value */
proto.hiber.modem.ModemSelection.prototype.setWithLastMessageIn = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.hiber.modem.ModemSelection.prototype.clearWithLastMessageIn = function() {
  this.setWithLastMessageIn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ModemSelection.prototype.hasWithLastMessageIn = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string freeTextSearch = 8;
 * @return {string}
 */
proto.hiber.modem.ModemSelection.prototype.getFreetextsearch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.hiber.modem.ModemSelection.prototype.setFreetextsearch = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * repeated hiber.Health health = 9;
 * @return {!Array.<!proto.hiber.Health>}
 */
proto.hiber.modem.ModemSelection.prototype.getHealthList = function() {
  return /** @type {!Array.<!proto.hiber.Health>} */ (jspb.Message.getRepeatedField(this, 9));
};


/** @param {!Array.<!proto.hiber.Health>} value */
proto.hiber.modem.ModemSelection.prototype.setHealthList = function(value) {
  jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {!proto.hiber.Health} value
 * @param {number=} opt_index
 */
proto.hiber.modem.ModemSelection.prototype.addHealth = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


proto.hiber.modem.ModemSelection.prototype.clearHealthList = function() {
  this.setHealthList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.ModemMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.modem.ModemMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.ModemMessage.displayName = 'proto.hiber.modem.ModemMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.ModemMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.ModemMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.ModemMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.ModemMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    modemNumber: jspb.Message.getFieldWithDefault(msg, 1, ""),
    version: jspb.Message.getFieldWithDefault(msg, 2, 0),
    time: (f = msg.getTime()) && base_pb.Timestamp.toObject(includeInstance, f),
    location: (f = msg.getLocation()) && base_pb.Location.toObject(includeInstance, f),
    body: msg.getBody_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.ModemMessage}
 */
proto.hiber.modem.ModemMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.ModemMessage;
  return proto.hiber.modem.ModemMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.ModemMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.ModemMessage}
 */
proto.hiber.modem.ModemMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setModemNumber(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setVersion(value);
      break;
    case 3:
      var value = new base_pb.Timestamp;
      reader.readMessage(value,base_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTime(value);
      break;
    case 4:
      var value = new base_pb.Location;
      reader.readMessage(value,base_pb.Location.deserializeBinaryFromReader);
      msg.setLocation(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBody(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.ModemMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.ModemMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.ModemMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.ModemMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModemNumber();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVersion();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getTime();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      base_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getLocation();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      base_pb.Location.serializeBinaryToWriter
    );
  }
  f = message.getBody_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      5,
      f
    );
  }
};


/**
 * optional string modem_number = 1;
 * @return {string}
 */
proto.hiber.modem.ModemMessage.prototype.getModemNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.modem.ModemMessage.prototype.setModemNumber = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional uint32 version = 2;
 * @return {number}
 */
proto.hiber.modem.ModemMessage.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.hiber.modem.ModemMessage.prototype.setVersion = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional hiber.Timestamp time = 3;
 * @return {?proto.hiber.Timestamp}
 */
proto.hiber.modem.ModemMessage.prototype.getTime = function() {
  return /** @type{?proto.hiber.Timestamp} */ (
    jspb.Message.getWrapperField(this, base_pb.Timestamp, 3));
};


/** @param {?proto.hiber.Timestamp|undefined} value */
proto.hiber.modem.ModemMessage.prototype.setTime = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.modem.ModemMessage.prototype.clearTime = function() {
  this.setTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ModemMessage.prototype.hasTime = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional hiber.Location location = 4;
 * @return {?proto.hiber.Location}
 */
proto.hiber.modem.ModemMessage.prototype.getLocation = function() {
  return /** @type{?proto.hiber.Location} */ (
    jspb.Message.getWrapperField(this, base_pb.Location, 4));
};


/** @param {?proto.hiber.Location|undefined} value */
proto.hiber.modem.ModemMessage.prototype.setLocation = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.hiber.modem.ModemMessage.prototype.clearLocation = function() {
  this.setLocation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ModemMessage.prototype.hasLocation = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bytes body = 5;
 * @return {!(string|Uint8Array)}
 */
proto.hiber.modem.ModemMessage.prototype.getBody = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes body = 5;
 * This is a type-conversion wrapper around `getBody()`
 * @return {string}
 */
proto.hiber.modem.ModemMessage.prototype.getBody_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBody()));
};


/**
 * optional bytes body = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBody()`
 * @return {!Uint8Array}
 */
proto.hiber.modem.ModemMessage.prototype.getBody_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBody()));
};


/** @param {!(string|Uint8Array)} value */
proto.hiber.modem.ModemMessage.prototype.setBody = function(value) {
  jspb.Message.setField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.ModemMessageSelection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.modem.ModemMessageSelection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.ModemMessageSelection.displayName = 'proto.hiber.modem.ModemMessageSelection';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.ModemMessageSelection.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.ModemMessageSelection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.ModemMessageSelection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.ModemMessageSelection.toObject = function(includeInstance, msg) {
  var f, obj = {
    modems: (f = msg.getModems()) && base_pb.Filter.Modems.toObject(includeInstance, f),
    childAccounts: (f = msg.getChildAccounts()) && base_pb.Filter.ChildAccounts.toObject(includeInstance, f),
    timeRange: (f = msg.getTimeRange()) && base_pb.TimeRange.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.ModemMessageSelection}
 */
proto.hiber.modem.ModemMessageSelection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.ModemMessageSelection;
  return proto.hiber.modem.ModemMessageSelection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.ModemMessageSelection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.ModemMessageSelection}
 */
proto.hiber.modem.ModemMessageSelection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new base_pb.Filter.Modems;
      reader.readMessage(value,base_pb.Filter.Modems.deserializeBinaryFromReader);
      msg.setModems(value);
      break;
    case 2:
      var value = new base_pb.Filter.ChildAccounts;
      reader.readMessage(value,base_pb.Filter.ChildAccounts.deserializeBinaryFromReader);
      msg.setChildAccounts(value);
      break;
    case 3:
      var value = new base_pb.TimeRange;
      reader.readMessage(value,base_pb.TimeRange.deserializeBinaryFromReader);
      msg.setTimeRange(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.ModemMessageSelection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.ModemMessageSelection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.ModemMessageSelection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.ModemMessageSelection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModems();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      base_pb.Filter.Modems.serializeBinaryToWriter
    );
  }
  f = message.getChildAccounts();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      base_pb.Filter.ChildAccounts.serializeBinaryToWriter
    );
  }
  f = message.getTimeRange();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      base_pb.TimeRange.serializeBinaryToWriter
    );
  }
};


/**
 * optional hiber.Filter.Modems modems = 1;
 * @return {?proto.hiber.Filter.Modems}
 */
proto.hiber.modem.ModemMessageSelection.prototype.getModems = function() {
  return /** @type{?proto.hiber.Filter.Modems} */ (
    jspb.Message.getWrapperField(this, base_pb.Filter.Modems, 1));
};


/** @param {?proto.hiber.Filter.Modems|undefined} value */
proto.hiber.modem.ModemMessageSelection.prototype.setModems = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.hiber.modem.ModemMessageSelection.prototype.clearModems = function() {
  this.setModems(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ModemMessageSelection.prototype.hasModems = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional hiber.Filter.ChildAccounts child_accounts = 2;
 * @return {?proto.hiber.Filter.ChildAccounts}
 */
proto.hiber.modem.ModemMessageSelection.prototype.getChildAccounts = function() {
  return /** @type{?proto.hiber.Filter.ChildAccounts} */ (
    jspb.Message.getWrapperField(this, base_pb.Filter.ChildAccounts, 2));
};


/** @param {?proto.hiber.Filter.ChildAccounts|undefined} value */
proto.hiber.modem.ModemMessageSelection.prototype.setChildAccounts = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.modem.ModemMessageSelection.prototype.clearChildAccounts = function() {
  this.setChildAccounts(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ModemMessageSelection.prototype.hasChildAccounts = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional hiber.TimeRange time_range = 3;
 * @return {?proto.hiber.TimeRange}
 */
proto.hiber.modem.ModemMessageSelection.prototype.getTimeRange = function() {
  return /** @type{?proto.hiber.TimeRange} */ (
    jspb.Message.getWrapperField(this, base_pb.TimeRange, 3));
};


/** @param {?proto.hiber.TimeRange|undefined} value */
proto.hiber.modem.ModemMessageSelection.prototype.setTimeRange = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.modem.ModemMessageSelection.prototype.clearTimeRange = function() {
  this.setTimeRange(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ModemMessageSelection.prototype.hasTimeRange = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.ListModemsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.modem.ListModemsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.ListModemsRequest.displayName = 'proto.hiber.modem.ListModemsRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.ListModemsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.ListModemsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.ListModemsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.ListModemsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    account: jspb.Message.getFieldWithDefault(msg, 1, ""),
    selection: (f = msg.getSelection()) && proto.hiber.modem.ModemSelection.toObject(includeInstance, f),
    pagination: (f = msg.getPagination()) && base_pb.Pagination.toObject(includeInstance, f),
    sortBy: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.ListModemsRequest}
 */
proto.hiber.modem.ListModemsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.ListModemsRequest;
  return proto.hiber.modem.ListModemsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.ListModemsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.ListModemsRequest}
 */
proto.hiber.modem.ListModemsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccount(value);
      break;
    case 2:
      var value = new proto.hiber.modem.ModemSelection;
      reader.readMessage(value,proto.hiber.modem.ModemSelection.deserializeBinaryFromReader);
      msg.setSelection(value);
      break;
    case 3:
      var value = new base_pb.Pagination;
      reader.readMessage(value,base_pb.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    case 4:
      var value = /** @type {!proto.hiber.modem.ListModemsRequest.Sort} */ (reader.readEnum());
      msg.setSortBy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.ListModemsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.ListModemsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.ListModemsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.ListModemsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccount();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSelection();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.hiber.modem.ModemSelection.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      base_pb.Pagination.serializeBinaryToWriter
    );
  }
  f = message.getSortBy();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.hiber.modem.ListModemsRequest.Sort = {
  LAST_MESSAGE_RECEIVED: 0,
  LAST_MESSAGE_RECEIVED_INVERTED: 1,
  MODEM_NUMBER_ASC: 2,
  MODEM_NUMBER_DESC: 3
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.ListModemsRequest.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.modem.ListModemsRequest.Response.repeatedFields_, null);
};
goog.inherits(proto.hiber.modem.ListModemsRequest.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.ListModemsRequest.Response.displayName = 'proto.hiber.modem.ListModemsRequest.Response';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.modem.ListModemsRequest.Response.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.ListModemsRequest.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.ListModemsRequest.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.ListModemsRequest.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.ListModemsRequest.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    modemsList: jspb.Message.toObjectList(msg.getModemsList(),
    proto.hiber.modem.Modem.toObject, includeInstance),
    request: (f = msg.getRequest()) && proto.hiber.modem.ListModemsRequest.toObject(includeInstance, f),
    pagination: (f = msg.getPagination()) && base_pb.Pagination.Result.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.ListModemsRequest.Response}
 */
proto.hiber.modem.ListModemsRequest.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.ListModemsRequest.Response;
  return proto.hiber.modem.ListModemsRequest.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.ListModemsRequest.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.ListModemsRequest.Response}
 */
proto.hiber.modem.ListModemsRequest.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.hiber.modem.Modem;
      reader.readMessage(value,proto.hiber.modem.Modem.deserializeBinaryFromReader);
      msg.addModems(value);
      break;
    case 2:
      var value = new proto.hiber.modem.ListModemsRequest;
      reader.readMessage(value,proto.hiber.modem.ListModemsRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    case 3:
      var value = new base_pb.Pagination.Result;
      reader.readMessage(value,base_pb.Pagination.Result.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.ListModemsRequest.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.ListModemsRequest.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.ListModemsRequest.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.ListModemsRequest.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.hiber.modem.Modem.serializeBinaryToWriter
    );
  }
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.hiber.modem.ListModemsRequest.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      base_pb.Pagination.Result.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Modem modems = 1;
 * @return {!Array.<!proto.hiber.modem.Modem>}
 */
proto.hiber.modem.ListModemsRequest.Response.prototype.getModemsList = function() {
  return /** @type{!Array.<!proto.hiber.modem.Modem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.hiber.modem.Modem, 1));
};


/** @param {!Array.<!proto.hiber.modem.Modem>} value */
proto.hiber.modem.ListModemsRequest.Response.prototype.setModemsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.hiber.modem.Modem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hiber.modem.Modem}
 */
proto.hiber.modem.ListModemsRequest.Response.prototype.addModems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.hiber.modem.Modem, opt_index);
};


proto.hiber.modem.ListModemsRequest.Response.prototype.clearModemsList = function() {
  this.setModemsList([]);
};


/**
 * optional ListModemsRequest request = 2;
 * @return {?proto.hiber.modem.ListModemsRequest}
 */
proto.hiber.modem.ListModemsRequest.Response.prototype.getRequest = function() {
  return /** @type{?proto.hiber.modem.ListModemsRequest} */ (
    jspb.Message.getWrapperField(this, proto.hiber.modem.ListModemsRequest, 2));
};


/** @param {?proto.hiber.modem.ListModemsRequest|undefined} value */
proto.hiber.modem.ListModemsRequest.Response.prototype.setRequest = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.modem.ListModemsRequest.Response.prototype.clearRequest = function() {
  this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ListModemsRequest.Response.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional hiber.Pagination.Result pagination = 3;
 * @return {?proto.hiber.Pagination.Result}
 */
proto.hiber.modem.ListModemsRequest.Response.prototype.getPagination = function() {
  return /** @type{?proto.hiber.Pagination.Result} */ (
    jspb.Message.getWrapperField(this, base_pb.Pagination.Result, 3));
};


/** @param {?proto.hiber.Pagination.Result|undefined} value */
proto.hiber.modem.ListModemsRequest.Response.prototype.setPagination = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.modem.ListModemsRequest.Response.prototype.clearPagination = function() {
  this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ListModemsRequest.Response.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string account = 1;
 * @return {string}
 */
proto.hiber.modem.ListModemsRequest.prototype.getAccount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.modem.ListModemsRequest.prototype.setAccount = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional ModemSelection selection = 2;
 * @return {?proto.hiber.modem.ModemSelection}
 */
proto.hiber.modem.ListModemsRequest.prototype.getSelection = function() {
  return /** @type{?proto.hiber.modem.ModemSelection} */ (
    jspb.Message.getWrapperField(this, proto.hiber.modem.ModemSelection, 2));
};


/** @param {?proto.hiber.modem.ModemSelection|undefined} value */
proto.hiber.modem.ListModemsRequest.prototype.setSelection = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.modem.ListModemsRequest.prototype.clearSelection = function() {
  this.setSelection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ListModemsRequest.prototype.hasSelection = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional hiber.Pagination pagination = 3;
 * @return {?proto.hiber.Pagination}
 */
proto.hiber.modem.ListModemsRequest.prototype.getPagination = function() {
  return /** @type{?proto.hiber.Pagination} */ (
    jspb.Message.getWrapperField(this, base_pb.Pagination, 3));
};


/** @param {?proto.hiber.Pagination|undefined} value */
proto.hiber.modem.ListModemsRequest.prototype.setPagination = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.modem.ListModemsRequest.prototype.clearPagination = function() {
  this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ListModemsRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Sort sort_by = 4;
 * @return {!proto.hiber.modem.ListModemsRequest.Sort}
 */
proto.hiber.modem.ListModemsRequest.prototype.getSortBy = function() {
  return /** @type {!proto.hiber.modem.ListModemsRequest.Sort} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {!proto.hiber.modem.ListModemsRequest.Sort} value */
proto.hiber.modem.ListModemsRequest.prototype.setSortBy = function(value) {
  jspb.Message.setField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.GetModemRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.modem.GetModemRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.GetModemRequest.displayName = 'proto.hiber.modem.GetModemRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.GetModemRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.GetModemRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.GetModemRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.GetModemRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    account: jspb.Message.getFieldWithDefault(msg, 1, ""),
    modemNumber: jspb.Message.getFieldWithDefault(msg, 2, ""),
    tags: (f = msg.getTags()) && tag_pb.TagSelection.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.GetModemRequest}
 */
proto.hiber.modem.GetModemRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.GetModemRequest;
  return proto.hiber.modem.GetModemRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.GetModemRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.GetModemRequest}
 */
proto.hiber.modem.GetModemRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccount(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setModemNumber(value);
      break;
    case 3:
      var value = new tag_pb.TagSelection;
      reader.readMessage(value,tag_pb.TagSelection.deserializeBinaryFromReader);
      msg.setTags(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.GetModemRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.GetModemRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.GetModemRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.GetModemRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccount();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getModemNumber();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTags();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      tag_pb.TagSelection.serializeBinaryToWriter
    );
  }
};


/**
 * optional string account = 1;
 * @return {string}
 */
proto.hiber.modem.GetModemRequest.prototype.getAccount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.modem.GetModemRequest.prototype.setAccount = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string modem_number = 2;
 * @return {string}
 */
proto.hiber.modem.GetModemRequest.prototype.getModemNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hiber.modem.GetModemRequest.prototype.setModemNumber = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional hiber.tag.TagSelection tags = 3;
 * @return {?proto.hiber.tag.TagSelection}
 */
proto.hiber.modem.GetModemRequest.prototype.getTags = function() {
  return /** @type{?proto.hiber.tag.TagSelection} */ (
    jspb.Message.getWrapperField(this, tag_pb.TagSelection, 3));
};


/** @param {?proto.hiber.tag.TagSelection|undefined} value */
proto.hiber.modem.GetModemRequest.prototype.setTags = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.modem.GetModemRequest.prototype.clearTags = function() {
  this.setTags(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.GetModemRequest.prototype.hasTags = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.ListModemMessagesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.modem.ListModemMessagesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.ListModemMessagesRequest.displayName = 'proto.hiber.modem.ListModemMessagesRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.ListModemMessagesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.ListModemMessagesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.ListModemMessagesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.ListModemMessagesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    account: jspb.Message.getFieldWithDefault(msg, 1, ""),
    selection: (f = msg.getSelection()) && proto.hiber.modem.ModemMessageSelection.toObject(includeInstance, f),
    pagination: (f = msg.getPagination()) && base_pb.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.ListModemMessagesRequest}
 */
proto.hiber.modem.ListModemMessagesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.ListModemMessagesRequest;
  return proto.hiber.modem.ListModemMessagesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.ListModemMessagesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.ListModemMessagesRequest}
 */
proto.hiber.modem.ListModemMessagesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccount(value);
      break;
    case 2:
      var value = new proto.hiber.modem.ModemMessageSelection;
      reader.readMessage(value,proto.hiber.modem.ModemMessageSelection.deserializeBinaryFromReader);
      msg.setSelection(value);
      break;
    case 3:
      var value = new base_pb.Pagination;
      reader.readMessage(value,base_pb.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.ListModemMessagesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.ListModemMessagesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.ListModemMessagesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.ListModemMessagesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccount();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSelection();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.hiber.modem.ModemMessageSelection.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      base_pb.Pagination.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.ListModemMessagesRequest.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.modem.ListModemMessagesRequest.Response.repeatedFields_, null);
};
goog.inherits(proto.hiber.modem.ListModemMessagesRequest.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.ListModemMessagesRequest.Response.displayName = 'proto.hiber.modem.ListModemMessagesRequest.Response';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.modem.ListModemMessagesRequest.Response.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.ListModemMessagesRequest.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.ListModemMessagesRequest.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.ListModemMessagesRequest.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.ListModemMessagesRequest.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    messagesList: jspb.Message.toObjectList(msg.getMessagesList(),
    proto.hiber.modem.ModemMessage.toObject, includeInstance),
    request: (f = msg.getRequest()) && proto.hiber.modem.ListModemMessagesRequest.toObject(includeInstance, f),
    pagination: (f = msg.getPagination()) && base_pb.Pagination.Result.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.ListModemMessagesRequest.Response}
 */
proto.hiber.modem.ListModemMessagesRequest.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.ListModemMessagesRequest.Response;
  return proto.hiber.modem.ListModemMessagesRequest.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.ListModemMessagesRequest.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.ListModemMessagesRequest.Response}
 */
proto.hiber.modem.ListModemMessagesRequest.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.hiber.modem.ModemMessage;
      reader.readMessage(value,proto.hiber.modem.ModemMessage.deserializeBinaryFromReader);
      msg.addMessages(value);
      break;
    case 2:
      var value = new proto.hiber.modem.ListModemMessagesRequest;
      reader.readMessage(value,proto.hiber.modem.ListModemMessagesRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    case 3:
      var value = new base_pb.Pagination.Result;
      reader.readMessage(value,base_pb.Pagination.Result.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.ListModemMessagesRequest.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.ListModemMessagesRequest.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.ListModemMessagesRequest.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.ListModemMessagesRequest.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessagesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.hiber.modem.ModemMessage.serializeBinaryToWriter
    );
  }
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.hiber.modem.ListModemMessagesRequest.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      base_pb.Pagination.Result.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ModemMessage messages = 1;
 * @return {!Array.<!proto.hiber.modem.ModemMessage>}
 */
proto.hiber.modem.ListModemMessagesRequest.Response.prototype.getMessagesList = function() {
  return /** @type{!Array.<!proto.hiber.modem.ModemMessage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.hiber.modem.ModemMessage, 1));
};


/** @param {!Array.<!proto.hiber.modem.ModemMessage>} value */
proto.hiber.modem.ListModemMessagesRequest.Response.prototype.setMessagesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.hiber.modem.ModemMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hiber.modem.ModemMessage}
 */
proto.hiber.modem.ListModemMessagesRequest.Response.prototype.addMessages = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.hiber.modem.ModemMessage, opt_index);
};


proto.hiber.modem.ListModemMessagesRequest.Response.prototype.clearMessagesList = function() {
  this.setMessagesList([]);
};


/**
 * optional ListModemMessagesRequest request = 2;
 * @return {?proto.hiber.modem.ListModemMessagesRequest}
 */
proto.hiber.modem.ListModemMessagesRequest.Response.prototype.getRequest = function() {
  return /** @type{?proto.hiber.modem.ListModemMessagesRequest} */ (
    jspb.Message.getWrapperField(this, proto.hiber.modem.ListModemMessagesRequest, 2));
};


/** @param {?proto.hiber.modem.ListModemMessagesRequest|undefined} value */
proto.hiber.modem.ListModemMessagesRequest.Response.prototype.setRequest = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.modem.ListModemMessagesRequest.Response.prototype.clearRequest = function() {
  this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ListModemMessagesRequest.Response.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional hiber.Pagination.Result pagination = 3;
 * @return {?proto.hiber.Pagination.Result}
 */
proto.hiber.modem.ListModemMessagesRequest.Response.prototype.getPagination = function() {
  return /** @type{?proto.hiber.Pagination.Result} */ (
    jspb.Message.getWrapperField(this, base_pb.Pagination.Result, 3));
};


/** @param {?proto.hiber.Pagination.Result|undefined} value */
proto.hiber.modem.ListModemMessagesRequest.Response.prototype.setPagination = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.modem.ListModemMessagesRequest.Response.prototype.clearPagination = function() {
  this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ListModemMessagesRequest.Response.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string account = 1;
 * @return {string}
 */
proto.hiber.modem.ListModemMessagesRequest.prototype.getAccount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.modem.ListModemMessagesRequest.prototype.setAccount = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional ModemMessageSelection selection = 2;
 * @return {?proto.hiber.modem.ModemMessageSelection}
 */
proto.hiber.modem.ListModemMessagesRequest.prototype.getSelection = function() {
  return /** @type{?proto.hiber.modem.ModemMessageSelection} */ (
    jspb.Message.getWrapperField(this, proto.hiber.modem.ModemMessageSelection, 2));
};


/** @param {?proto.hiber.modem.ModemMessageSelection|undefined} value */
proto.hiber.modem.ListModemMessagesRequest.prototype.setSelection = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.modem.ListModemMessagesRequest.prototype.clearSelection = function() {
  this.setSelection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ListModemMessagesRequest.prototype.hasSelection = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional hiber.Pagination pagination = 3;
 * @return {?proto.hiber.Pagination}
 */
proto.hiber.modem.ListModemMessagesRequest.prototype.getPagination = function() {
  return /** @type{?proto.hiber.Pagination} */ (
    jspb.Message.getWrapperField(this, base_pb.Pagination, 3));
};


/** @param {?proto.hiber.Pagination|undefined} value */
proto.hiber.modem.ListModemMessagesRequest.prototype.setPagination = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.modem.ListModemMessagesRequest.prototype.clearPagination = function() {
  this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ListModemMessagesRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.MessageCountRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.modem.MessageCountRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.MessageCountRequest.displayName = 'proto.hiber.modem.MessageCountRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.MessageCountRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.MessageCountRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.MessageCountRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.MessageCountRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    account: jspb.Message.getFieldWithDefault(msg, 1, ""),
    selection: (f = msg.getSelection()) && proto.hiber.modem.ModemMessageSelection.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.MessageCountRequest}
 */
proto.hiber.modem.MessageCountRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.MessageCountRequest;
  return proto.hiber.modem.MessageCountRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.MessageCountRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.MessageCountRequest}
 */
proto.hiber.modem.MessageCountRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccount(value);
      break;
    case 2:
      var value = new proto.hiber.modem.ModemMessageSelection;
      reader.readMessage(value,proto.hiber.modem.ModemMessageSelection.deserializeBinaryFromReader);
      msg.setSelection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.MessageCountRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.MessageCountRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.MessageCountRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.MessageCountRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccount();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSelection();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.hiber.modem.ModemMessageSelection.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.MessageCountRequest.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.modem.MessageCountRequest.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.MessageCountRequest.Response.displayName = 'proto.hiber.modem.MessageCountRequest.Response';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.MessageCountRequest.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.MessageCountRequest.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.MessageCountRequest.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.MessageCountRequest.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    messageCountPerDayMap: (f = msg.getMessageCountPerDayMap()) ? f.toObject(includeInstance, undefined) : [],
    request: (f = msg.getRequest()) && proto.hiber.modem.MessageCountRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.MessageCountRequest.Response}
 */
proto.hiber.modem.MessageCountRequest.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.MessageCountRequest.Response;
  return proto.hiber.modem.MessageCountRequest.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.MessageCountRequest.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.MessageCountRequest.Response}
 */
proto.hiber.modem.MessageCountRequest.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getMessageCountPerDayMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readInt32);
         });
      break;
    case 2:
      var value = new proto.hiber.modem.MessageCountRequest;
      reader.readMessage(value,proto.hiber.modem.MessageCountRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.MessageCountRequest.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.MessageCountRequest.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.MessageCountRequest.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.MessageCountRequest.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessageCountPerDayMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeInt32);
  }
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.hiber.modem.MessageCountRequest.serializeBinaryToWriter
    );
  }
};


/**
 * map<string, int32> message_count_per_day = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,number>}
 */
proto.hiber.modem.MessageCountRequest.Response.prototype.getMessageCountPerDayMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,number>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


proto.hiber.modem.MessageCountRequest.Response.prototype.clearMessageCountPerDayMap = function() {
  this.getMessageCountPerDayMap().clear();
};


/**
 * optional MessageCountRequest request = 2;
 * @return {?proto.hiber.modem.MessageCountRequest}
 */
proto.hiber.modem.MessageCountRequest.Response.prototype.getRequest = function() {
  return /** @type{?proto.hiber.modem.MessageCountRequest} */ (
    jspb.Message.getWrapperField(this, proto.hiber.modem.MessageCountRequest, 2));
};


/** @param {?proto.hiber.modem.MessageCountRequest|undefined} value */
proto.hiber.modem.MessageCountRequest.Response.prototype.setRequest = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.modem.MessageCountRequest.Response.prototype.clearRequest = function() {
  this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.MessageCountRequest.Response.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string account = 1;
 * @return {string}
 */
proto.hiber.modem.MessageCountRequest.prototype.getAccount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.modem.MessageCountRequest.prototype.setAccount = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional ModemMessageSelection selection = 2;
 * @return {?proto.hiber.modem.ModemMessageSelection}
 */
proto.hiber.modem.MessageCountRequest.prototype.getSelection = function() {
  return /** @type{?proto.hiber.modem.ModemMessageSelection} */ (
    jspb.Message.getWrapperField(this, proto.hiber.modem.ModemMessageSelection, 2));
};


/** @param {?proto.hiber.modem.ModemMessageSelection|undefined} value */
proto.hiber.modem.MessageCountRequest.prototype.setSelection = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.modem.MessageCountRequest.prototype.clearSelection = function() {
  this.setSelection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.MessageCountRequest.prototype.hasSelection = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.RenameModemRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.modem.RenameModemRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.RenameModemRequest.displayName = 'proto.hiber.modem.RenameModemRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.RenameModemRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.RenameModemRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.RenameModemRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.RenameModemRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    account: jspb.Message.getFieldWithDefault(msg, 1, ""),
    modemNumber: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    tags: (f = msg.getTags()) && tag_pb.TagSelection.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.RenameModemRequest}
 */
proto.hiber.modem.RenameModemRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.RenameModemRequest;
  return proto.hiber.modem.RenameModemRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.RenameModemRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.RenameModemRequest}
 */
proto.hiber.modem.RenameModemRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccount(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setModemNumber(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = new tag_pb.TagSelection;
      reader.readMessage(value,tag_pb.TagSelection.deserializeBinaryFromReader);
      msg.setTags(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.RenameModemRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.RenameModemRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.RenameModemRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.RenameModemRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccount();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getModemNumber();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTags();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      tag_pb.TagSelection.serializeBinaryToWriter
    );
  }
};


/**
 * optional string account = 1;
 * @return {string}
 */
proto.hiber.modem.RenameModemRequest.prototype.getAccount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.modem.RenameModemRequest.prototype.setAccount = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string modem_number = 2;
 * @return {string}
 */
proto.hiber.modem.RenameModemRequest.prototype.getModemNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hiber.modem.RenameModemRequest.prototype.setModemNumber = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.hiber.modem.RenameModemRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.hiber.modem.RenameModemRequest.prototype.setName = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional hiber.tag.TagSelection tags = 4;
 * @return {?proto.hiber.tag.TagSelection}
 */
proto.hiber.modem.RenameModemRequest.prototype.getTags = function() {
  return /** @type{?proto.hiber.tag.TagSelection} */ (
    jspb.Message.getWrapperField(this, tag_pb.TagSelection, 4));
};


/** @param {?proto.hiber.tag.TagSelection|undefined} value */
proto.hiber.modem.RenameModemRequest.prototype.setTags = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.hiber.modem.RenameModemRequest.prototype.clearTags = function() {
  this.setTags(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.RenameModemRequest.prototype.hasTags = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.UpdateModemPayloadTemplateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.modem.UpdateModemPayloadTemplateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.UpdateModemPayloadTemplateRequest.displayName = 'proto.hiber.modem.UpdateModemPayloadTemplateRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.UpdateModemPayloadTemplateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.UpdateModemPayloadTemplateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.UpdateModemPayloadTemplateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.UpdateModemPayloadTemplateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    account: jspb.Message.getFieldWithDefault(msg, 1, ""),
    modemNumber: jspb.Message.getFieldWithDefault(msg, 2, ""),
    payloadTemplate: jspb.Message.getFieldWithDefault(msg, 3, ""),
    tags: (f = msg.getTags()) && tag_pb.TagSelection.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.UpdateModemPayloadTemplateRequest}
 */
proto.hiber.modem.UpdateModemPayloadTemplateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.UpdateModemPayloadTemplateRequest;
  return proto.hiber.modem.UpdateModemPayloadTemplateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.UpdateModemPayloadTemplateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.UpdateModemPayloadTemplateRequest}
 */
proto.hiber.modem.UpdateModemPayloadTemplateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccount(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setModemNumber(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPayloadTemplate(value);
      break;
    case 4:
      var value = new tag_pb.TagSelection;
      reader.readMessage(value,tag_pb.TagSelection.deserializeBinaryFromReader);
      msg.setTags(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.UpdateModemPayloadTemplateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.UpdateModemPayloadTemplateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.UpdateModemPayloadTemplateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.UpdateModemPayloadTemplateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccount();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getModemNumber();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPayloadTemplate();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTags();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      tag_pb.TagSelection.serializeBinaryToWriter
    );
  }
};


/**
 * optional string account = 1;
 * @return {string}
 */
proto.hiber.modem.UpdateModemPayloadTemplateRequest.prototype.getAccount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.modem.UpdateModemPayloadTemplateRequest.prototype.setAccount = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string modem_number = 2;
 * @return {string}
 */
proto.hiber.modem.UpdateModemPayloadTemplateRequest.prototype.getModemNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hiber.modem.UpdateModemPayloadTemplateRequest.prototype.setModemNumber = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string payload_template = 3;
 * @return {string}
 */
proto.hiber.modem.UpdateModemPayloadTemplateRequest.prototype.getPayloadTemplate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.hiber.modem.UpdateModemPayloadTemplateRequest.prototype.setPayloadTemplate = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional hiber.tag.TagSelection tags = 4;
 * @return {?proto.hiber.tag.TagSelection}
 */
proto.hiber.modem.UpdateModemPayloadTemplateRequest.prototype.getTags = function() {
  return /** @type{?proto.hiber.tag.TagSelection} */ (
    jspb.Message.getWrapperField(this, tag_pb.TagSelection, 4));
};


/** @param {?proto.hiber.tag.TagSelection|undefined} value */
proto.hiber.modem.UpdateModemPayloadTemplateRequest.prototype.setTags = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.hiber.modem.UpdateModemPayloadTemplateRequest.prototype.clearTags = function() {
  this.setTags(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.UpdateModemPayloadTemplateRequest.prototype.hasTags = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.UpdateModemTagsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.modem.UpdateModemTagsRequest.repeatedFields_, null);
};
goog.inherits(proto.hiber.modem.UpdateModemTagsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.UpdateModemTagsRequest.displayName = 'proto.hiber.modem.UpdateModemTagsRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.modem.UpdateModemTagsRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.UpdateModemTagsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.UpdateModemTagsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.UpdateModemTagsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.UpdateModemTagsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    account: jspb.Message.getFieldWithDefault(msg, 1, ""),
    modemNumbersList: jspb.Message.getRepeatedField(msg, 2),
    update: (f = msg.getUpdate()) && tag_pb.UpdateTagsForItem.toObject(includeInstance, f),
    tags: (f = msg.getTags()) && tag_pb.TagSelection.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.UpdateModemTagsRequest}
 */
proto.hiber.modem.UpdateModemTagsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.UpdateModemTagsRequest;
  return proto.hiber.modem.UpdateModemTagsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.UpdateModemTagsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.UpdateModemTagsRequest}
 */
proto.hiber.modem.UpdateModemTagsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccount(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addModemNumbers(value);
      break;
    case 3:
      var value = new tag_pb.UpdateTagsForItem;
      reader.readMessage(value,tag_pb.UpdateTagsForItem.deserializeBinaryFromReader);
      msg.setUpdate(value);
      break;
    case 4:
      var value = new tag_pb.TagSelection;
      reader.readMessage(value,tag_pb.TagSelection.deserializeBinaryFromReader);
      msg.setTags(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.UpdateModemTagsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.UpdateModemTagsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.UpdateModemTagsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.UpdateModemTagsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccount();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getModemNumbersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getUpdate();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      tag_pb.UpdateTagsForItem.serializeBinaryToWriter
    );
  }
  f = message.getTags();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      tag_pb.TagSelection.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.UpdateModemTagsRequest.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.modem.UpdateModemTagsRequest.Response.repeatedFields_, null);
};
goog.inherits(proto.hiber.modem.UpdateModemTagsRequest.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.UpdateModemTagsRequest.Response.displayName = 'proto.hiber.modem.UpdateModemTagsRequest.Response';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.modem.UpdateModemTagsRequest.Response.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.UpdateModemTagsRequest.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.UpdateModemTagsRequest.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.UpdateModemTagsRequest.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.UpdateModemTagsRequest.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    modemsList: jspb.Message.toObjectList(msg.getModemsList(),
    proto.hiber.modem.Modem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.UpdateModemTagsRequest.Response}
 */
proto.hiber.modem.UpdateModemTagsRequest.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.UpdateModemTagsRequest.Response;
  return proto.hiber.modem.UpdateModemTagsRequest.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.UpdateModemTagsRequest.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.UpdateModemTagsRequest.Response}
 */
proto.hiber.modem.UpdateModemTagsRequest.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.hiber.modem.Modem;
      reader.readMessage(value,proto.hiber.modem.Modem.deserializeBinaryFromReader);
      msg.addModems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.UpdateModemTagsRequest.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.UpdateModemTagsRequest.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.UpdateModemTagsRequest.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.UpdateModemTagsRequest.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.hiber.modem.Modem.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Modem modems = 1;
 * @return {!Array.<!proto.hiber.modem.Modem>}
 */
proto.hiber.modem.UpdateModemTagsRequest.Response.prototype.getModemsList = function() {
  return /** @type{!Array.<!proto.hiber.modem.Modem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.hiber.modem.Modem, 1));
};


/** @param {!Array.<!proto.hiber.modem.Modem>} value */
proto.hiber.modem.UpdateModemTagsRequest.Response.prototype.setModemsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.hiber.modem.Modem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hiber.modem.Modem}
 */
proto.hiber.modem.UpdateModemTagsRequest.Response.prototype.addModems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.hiber.modem.Modem, opt_index);
};


proto.hiber.modem.UpdateModemTagsRequest.Response.prototype.clearModemsList = function() {
  this.setModemsList([]);
};


/**
 * optional string account = 1;
 * @return {string}
 */
proto.hiber.modem.UpdateModemTagsRequest.prototype.getAccount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.modem.UpdateModemTagsRequest.prototype.setAccount = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * repeated string modem_numbers = 2;
 * @return {!Array.<string>}
 */
proto.hiber.modem.UpdateModemTagsRequest.prototype.getModemNumbersList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array.<string>} value */
proto.hiber.modem.UpdateModemTagsRequest.prototype.setModemNumbersList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.hiber.modem.UpdateModemTagsRequest.prototype.addModemNumbers = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.hiber.modem.UpdateModemTagsRequest.prototype.clearModemNumbersList = function() {
  this.setModemNumbersList([]);
};


/**
 * optional hiber.tag.UpdateTagsForItem update = 3;
 * @return {?proto.hiber.tag.UpdateTagsForItem}
 */
proto.hiber.modem.UpdateModemTagsRequest.prototype.getUpdate = function() {
  return /** @type{?proto.hiber.tag.UpdateTagsForItem} */ (
    jspb.Message.getWrapperField(this, tag_pb.UpdateTagsForItem, 3));
};


/** @param {?proto.hiber.tag.UpdateTagsForItem|undefined} value */
proto.hiber.modem.UpdateModemTagsRequest.prototype.setUpdate = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.modem.UpdateModemTagsRequest.prototype.clearUpdate = function() {
  this.setUpdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.UpdateModemTagsRequest.prototype.hasUpdate = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional hiber.tag.TagSelection tags = 4;
 * @return {?proto.hiber.tag.TagSelection}
 */
proto.hiber.modem.UpdateModemTagsRequest.prototype.getTags = function() {
  return /** @type{?proto.hiber.tag.TagSelection} */ (
    jspb.Message.getWrapperField(this, tag_pb.TagSelection, 4));
};


/** @param {?proto.hiber.tag.TagSelection|undefined} value */
proto.hiber.modem.UpdateModemTagsRequest.prototype.setTags = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.hiber.modem.UpdateModemTagsRequest.prototype.clearTags = function() {
  this.setTags(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.UpdateModemTagsRequest.prototype.hasTags = function() {
  return jspb.Message.getField(this, 4) != null;
};


goog.object.extend(exports, proto.hiber.modem);
