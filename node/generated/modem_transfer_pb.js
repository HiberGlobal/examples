/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var base_pb = require('./base_pb.js');
var organization_pb = require('./organization_pb.js');
var modem_pb = require('./modem_pb.js');
var tag_pb = require('./tag_pb.js');
goog.exportSymbol('proto.hiber.modem.CancelModemTransferRequest', null, global);
goog.exportSymbol('proto.hiber.modem.CancelModemTransferRequest.Response', null, global);
goog.exportSymbol('proto.hiber.modem.DeleteModemTransferReturnLinesRequest', null, global);
goog.exportSymbol('proto.hiber.modem.DeleteModemTransferReturnLinesRequest.Response', null, global);
goog.exportSymbol('proto.hiber.modem.ListModemTransferReturnLinesRequest', null, global);
goog.exportSymbol('proto.hiber.modem.ListModemTransferReturnLinesRequest.Response', null, global);
goog.exportSymbol('proto.hiber.modem.ListModemTransfersRequest', null, global);
goog.exportSymbol('proto.hiber.modem.ListModemTransfersRequest.Response', null, global);
goog.exportSymbol('proto.hiber.modem.ModemTransfer', null, global);
goog.exportSymbol('proto.hiber.modem.ModemTransfer.Status', null, global);
goog.exportSymbol('proto.hiber.modem.ModemTransfer.Type', null, global);
goog.exportSymbol('proto.hiber.modem.ModemTransferReturnLine', null, global);
goog.exportSymbol('proto.hiber.modem.ModemTransferReturnLine.Reason', null, global);
goog.exportSymbol('proto.hiber.modem.ModemTransferSelection', null, global);
goog.exportSymbol('proto.hiber.modem.NotReceivedModemTransferRequest', null, global);
goog.exportSymbol('proto.hiber.modem.NotReceivedModemTransferRequest.Response', null, global);
goog.exportSymbol('proto.hiber.modem.PrepareModemForReturnRequest', null, global);
goog.exportSymbol('proto.hiber.modem.PrepareModemForReturnRequest.Response', null, global);
goog.exportSymbol('proto.hiber.modem.ReceivedModemTransferRequest', null, global);
goog.exportSymbol('proto.hiber.modem.ReceivedModemTransferRequest.Response', null, global);
goog.exportSymbol('proto.hiber.modem.SendReturnRequest', null, global);
goog.exportSymbol('proto.hiber.modem.SendReturnRequest.Response', null, global);
goog.exportSymbol('proto.hiber.modem.TransferModemsRequest', null, global);
goog.exportSymbol('proto.hiber.modem.TransferModemsRequest.Response', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.ModemTransfer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.modem.ModemTransfer.repeatedFields_, null);
};
goog.inherits(proto.hiber.modem.ModemTransfer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.ModemTransfer.displayName = 'proto.hiber.modem.ModemTransfer';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.modem.ModemTransfer.repeatedFields_ = [2,7,8,15];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.ModemTransfer.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.ModemTransfer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.ModemTransfer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.ModemTransfer.toObject = function(includeInstance, msg) {
  var f, obj = {
    identifier: jspb.Message.getFieldWithDefault(msg, 1, ""),
    modemNumbersList: jspb.Message.getRepeatedField(msg, 2),
    type: jspb.Message.getFieldWithDefault(msg, 3, 0),
    status: jspb.Message.getFieldWithDefault(msg, 4, 0),
    senderOrganization: jspb.Message.getFieldWithDefault(msg, 5, ""),
    recipientOrganization: jspb.Message.getFieldWithDefault(msg, 6, ""),
    returnTransfersList: jspb.Message.getRepeatedField(msg, 7),
    returnForList: jspb.Message.getRepeatedField(msg, 8),
    trackingInformation: jspb.Message.getFieldWithDefault(msg, 9, ""),
    createdAt: (f = msg.getCreatedAt()) && base_pb.Timestamp.toObject(includeInstance, f),
    receivedAt: (f = msg.getReceivedAt()) && base_pb.Timestamp.toObject(includeInstance, f),
    cancelledAt: (f = msg.getCancelledAt()) && base_pb.Timestamp.toObject(includeInstance, f),
    notReceivedAt: (f = msg.getNotReceivedAt()) && base_pb.Timestamp.toObject(includeInstance, f),
    returnDeadline: (f = msg.getReturnDeadline()) && base_pb.Timestamp.toObject(includeInstance, f),
    tagsList: jspb.Message.toObjectList(msg.getTagsList(),
    tag_pb.Tag.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.ModemTransfer}
 */
proto.hiber.modem.ModemTransfer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.ModemTransfer;
  return proto.hiber.modem.ModemTransfer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.ModemTransfer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.ModemTransfer}
 */
proto.hiber.modem.ModemTransfer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentifier(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addModemNumbers(value);
      break;
    case 3:
      var value = /** @type {!proto.hiber.modem.ModemTransfer.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {!proto.hiber.modem.ModemTransfer.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSenderOrganization(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecipientOrganization(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.addReturnTransfers(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.addReturnFor(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setTrackingInformation(value);
      break;
    case 10:
      var value = new base_pb.Timestamp;
      reader.readMessage(value,base_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 11:
      var value = new base_pb.Timestamp;
      reader.readMessage(value,base_pb.Timestamp.deserializeBinaryFromReader);
      msg.setReceivedAt(value);
      break;
    case 12:
      var value = new base_pb.Timestamp;
      reader.readMessage(value,base_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCancelledAt(value);
      break;
    case 13:
      var value = new base_pb.Timestamp;
      reader.readMessage(value,base_pb.Timestamp.deserializeBinaryFromReader);
      msg.setNotReceivedAt(value);
      break;
    case 14:
      var value = new base_pb.Timestamp;
      reader.readMessage(value,base_pb.Timestamp.deserializeBinaryFromReader);
      msg.setReturnDeadline(value);
      break;
    case 15:
      var value = new tag_pb.Tag;
      reader.readMessage(value,tag_pb.Tag.deserializeBinaryFromReader);
      msg.addTags(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.ModemTransfer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.ModemTransfer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.ModemTransfer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.ModemTransfer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdentifier();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getModemNumbersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getSenderOrganization();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getRecipientOrganization();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getReturnTransfersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      7,
      f
    );
  }
  f = message.getReturnForList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      8,
      f
    );
  }
  f = message.getTrackingInformation();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      base_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getReceivedAt();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      base_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getCancelledAt();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      base_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getNotReceivedAt();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      base_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getReturnDeadline();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      base_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      15,
      f,
      tag_pb.Tag.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.hiber.modem.ModemTransfer.Type = {
  TRANSFER: 0,
  RETURN: 1
};

/**
 * @enum {number}
 */
proto.hiber.modem.ModemTransfer.Status = {
  IN_TRANSIT: 0,
  RECEIVED: 1,
  CANCELLED: 3,
  NOT_RECEIVED: 4
};

/**
 * optional string identifier = 1;
 * @return {string}
 */
proto.hiber.modem.ModemTransfer.prototype.getIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.modem.ModemTransfer.prototype.setIdentifier = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * repeated string modem_numbers = 2;
 * @return {!Array.<string>}
 */
proto.hiber.modem.ModemTransfer.prototype.getModemNumbersList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array.<string>} value */
proto.hiber.modem.ModemTransfer.prototype.setModemNumbersList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.hiber.modem.ModemTransfer.prototype.addModemNumbers = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.hiber.modem.ModemTransfer.prototype.clearModemNumbersList = function() {
  this.setModemNumbersList([]);
};


/**
 * optional Type type = 3;
 * @return {!proto.hiber.modem.ModemTransfer.Type}
 */
proto.hiber.modem.ModemTransfer.prototype.getType = function() {
  return /** @type {!proto.hiber.modem.ModemTransfer.Type} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.hiber.modem.ModemTransfer.Type} value */
proto.hiber.modem.ModemTransfer.prototype.setType = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional Status status = 4;
 * @return {!proto.hiber.modem.ModemTransfer.Status}
 */
proto.hiber.modem.ModemTransfer.prototype.getStatus = function() {
  return /** @type {!proto.hiber.modem.ModemTransfer.Status} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {!proto.hiber.modem.ModemTransfer.Status} value */
proto.hiber.modem.ModemTransfer.prototype.setStatus = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string sender_organization = 5;
 * @return {string}
 */
proto.hiber.modem.ModemTransfer.prototype.getSenderOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.hiber.modem.ModemTransfer.prototype.setSenderOrganization = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional string recipient_organization = 6;
 * @return {string}
 */
proto.hiber.modem.ModemTransfer.prototype.getRecipientOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.hiber.modem.ModemTransfer.prototype.setRecipientOrganization = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * repeated string return_transfers = 7;
 * @return {!Array.<string>}
 */
proto.hiber.modem.ModemTransfer.prototype.getReturnTransfersList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 7));
};


/** @param {!Array.<string>} value */
proto.hiber.modem.ModemTransfer.prototype.setReturnTransfersList = function(value) {
  jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.hiber.modem.ModemTransfer.prototype.addReturnTransfers = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


proto.hiber.modem.ModemTransfer.prototype.clearReturnTransfersList = function() {
  this.setReturnTransfersList([]);
};


/**
 * repeated string return_for = 8;
 * @return {!Array.<string>}
 */
proto.hiber.modem.ModemTransfer.prototype.getReturnForList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 8));
};


/** @param {!Array.<string>} value */
proto.hiber.modem.ModemTransfer.prototype.setReturnForList = function(value) {
  jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.hiber.modem.ModemTransfer.prototype.addReturnFor = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


proto.hiber.modem.ModemTransfer.prototype.clearReturnForList = function() {
  this.setReturnForList([]);
};


/**
 * optional string tracking_information = 9;
 * @return {string}
 */
proto.hiber.modem.ModemTransfer.prototype.getTrackingInformation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.hiber.modem.ModemTransfer.prototype.setTrackingInformation = function(value) {
  jspb.Message.setField(this, 9, value);
};


/**
 * optional hiber.Timestamp created_at = 10;
 * @return {?proto.hiber.Timestamp}
 */
proto.hiber.modem.ModemTransfer.prototype.getCreatedAt = function() {
  return /** @type{?proto.hiber.Timestamp} */ (
    jspb.Message.getWrapperField(this, base_pb.Timestamp, 10));
};


/** @param {?proto.hiber.Timestamp|undefined} value */
proto.hiber.modem.ModemTransfer.prototype.setCreatedAt = function(value) {
  jspb.Message.setWrapperField(this, 10, value);
};


proto.hiber.modem.ModemTransfer.prototype.clearCreatedAt = function() {
  this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ModemTransfer.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional hiber.Timestamp received_at = 11;
 * @return {?proto.hiber.Timestamp}
 */
proto.hiber.modem.ModemTransfer.prototype.getReceivedAt = function() {
  return /** @type{?proto.hiber.Timestamp} */ (
    jspb.Message.getWrapperField(this, base_pb.Timestamp, 11));
};


/** @param {?proto.hiber.Timestamp|undefined} value */
proto.hiber.modem.ModemTransfer.prototype.setReceivedAt = function(value) {
  jspb.Message.setWrapperField(this, 11, value);
};


proto.hiber.modem.ModemTransfer.prototype.clearReceivedAt = function() {
  this.setReceivedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ModemTransfer.prototype.hasReceivedAt = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional hiber.Timestamp cancelled_at = 12;
 * @return {?proto.hiber.Timestamp}
 */
proto.hiber.modem.ModemTransfer.prototype.getCancelledAt = function() {
  return /** @type{?proto.hiber.Timestamp} */ (
    jspb.Message.getWrapperField(this, base_pb.Timestamp, 12));
};


/** @param {?proto.hiber.Timestamp|undefined} value */
proto.hiber.modem.ModemTransfer.prototype.setCancelledAt = function(value) {
  jspb.Message.setWrapperField(this, 12, value);
};


proto.hiber.modem.ModemTransfer.prototype.clearCancelledAt = function() {
  this.setCancelledAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ModemTransfer.prototype.hasCancelledAt = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional hiber.Timestamp not_received_at = 13;
 * @return {?proto.hiber.Timestamp}
 */
proto.hiber.modem.ModemTransfer.prototype.getNotReceivedAt = function() {
  return /** @type{?proto.hiber.Timestamp} */ (
    jspb.Message.getWrapperField(this, base_pb.Timestamp, 13));
};


/** @param {?proto.hiber.Timestamp|undefined} value */
proto.hiber.modem.ModemTransfer.prototype.setNotReceivedAt = function(value) {
  jspb.Message.setWrapperField(this, 13, value);
};


proto.hiber.modem.ModemTransfer.prototype.clearNotReceivedAt = function() {
  this.setNotReceivedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ModemTransfer.prototype.hasNotReceivedAt = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional hiber.Timestamp return_deadline = 14;
 * @return {?proto.hiber.Timestamp}
 */
proto.hiber.modem.ModemTransfer.prototype.getReturnDeadline = function() {
  return /** @type{?proto.hiber.Timestamp} */ (
    jspb.Message.getWrapperField(this, base_pb.Timestamp, 14));
};


/** @param {?proto.hiber.Timestamp|undefined} value */
proto.hiber.modem.ModemTransfer.prototype.setReturnDeadline = function(value) {
  jspb.Message.setWrapperField(this, 14, value);
};


proto.hiber.modem.ModemTransfer.prototype.clearReturnDeadline = function() {
  this.setReturnDeadline(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ModemTransfer.prototype.hasReturnDeadline = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * repeated hiber.tag.Tag tags = 15;
 * @return {!Array.<!proto.hiber.tag.Tag>}
 */
proto.hiber.modem.ModemTransfer.prototype.getTagsList = function() {
  return /** @type{!Array.<!proto.hiber.tag.Tag>} */ (
    jspb.Message.getRepeatedWrapperField(this, tag_pb.Tag, 15));
};


/** @param {!Array.<!proto.hiber.tag.Tag>} value */
proto.hiber.modem.ModemTransfer.prototype.setTagsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 15, value);
};


/**
 * @param {!proto.hiber.tag.Tag=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hiber.tag.Tag}
 */
proto.hiber.modem.ModemTransfer.prototype.addTags = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 15, opt_value, proto.hiber.tag.Tag, opt_index);
};


proto.hiber.modem.ModemTransfer.prototype.clearTagsList = function() {
  this.setTagsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.ModemTransferReturnLine = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.modem.ModemTransferReturnLine.repeatedFields_, null);
};
goog.inherits(proto.hiber.modem.ModemTransferReturnLine, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.ModemTransferReturnLine.displayName = 'proto.hiber.modem.ModemTransferReturnLine';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.modem.ModemTransferReturnLine.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.ModemTransferReturnLine.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.ModemTransferReturnLine.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.ModemTransferReturnLine} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.ModemTransferReturnLine.toObject = function(includeInstance, msg) {
  var f, obj = {
    originalTransfer: jspb.Message.getFieldWithDefault(msg, 1, ""),
    returnTransfer: jspb.Message.getFieldWithDefault(msg, 2, ""),
    modemNumbersList: jspb.Message.getRepeatedField(msg, 3),
    reason: jspb.Message.getFieldWithDefault(msg, 4, 0),
    comment: jspb.Message.getFieldWithDefault(msg, 5, ""),
    createdAt: (f = msg.getCreatedAt()) && base_pb.Timestamp.toObject(includeInstance, f),
    returnedAt: (f = msg.getReturnedAt()) && base_pb.Timestamp.toObject(includeInstance, f),
    returnDeadline: (f = msg.getReturnDeadline()) && base_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.ModemTransferReturnLine}
 */
proto.hiber.modem.ModemTransferReturnLine.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.ModemTransferReturnLine;
  return proto.hiber.modem.ModemTransferReturnLine.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.ModemTransferReturnLine} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.ModemTransferReturnLine}
 */
proto.hiber.modem.ModemTransferReturnLine.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOriginalTransfer(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setReturnTransfer(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addModemNumbers(value);
      break;
    case 4:
      var value = /** @type {!proto.hiber.modem.ModemTransferReturnLine.Reason} */ (reader.readEnum());
      msg.setReason(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setComment(value);
      break;
    case 6:
      var value = new base_pb.Timestamp;
      reader.readMessage(value,base_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 7:
      var value = new base_pb.Timestamp;
      reader.readMessage(value,base_pb.Timestamp.deserializeBinaryFromReader);
      msg.setReturnedAt(value);
      break;
    case 8:
      var value = new base_pb.Timestamp;
      reader.readMessage(value,base_pb.Timestamp.deserializeBinaryFromReader);
      msg.setReturnDeadline(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.ModemTransferReturnLine.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.ModemTransferReturnLine.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.ModemTransferReturnLine} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.ModemTransferReturnLine.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOriginalTransfer();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getReturnTransfer();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getModemNumbersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getReason();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getComment();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      base_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getReturnedAt();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      base_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getReturnDeadline();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      base_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.hiber.modem.ModemTransferReturnLine.Reason = {
  OTHER: 0,
  INVALID_RECIPIENT: 1,
  INVALID_CONFIGURATION: 2,
  DAMAGED: 3,
  DEAD: 4,
  MISSING: 5
};

/**
 * optional string original_transfer = 1;
 * @return {string}
 */
proto.hiber.modem.ModemTransferReturnLine.prototype.getOriginalTransfer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.modem.ModemTransferReturnLine.prototype.setOriginalTransfer = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string return_transfer = 2;
 * @return {string}
 */
proto.hiber.modem.ModemTransferReturnLine.prototype.getReturnTransfer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hiber.modem.ModemTransferReturnLine.prototype.setReturnTransfer = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * repeated string modem_numbers = 3;
 * @return {!Array.<string>}
 */
proto.hiber.modem.ModemTransferReturnLine.prototype.getModemNumbersList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array.<string>} value */
proto.hiber.modem.ModemTransferReturnLine.prototype.setModemNumbersList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.hiber.modem.ModemTransferReturnLine.prototype.addModemNumbers = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.hiber.modem.ModemTransferReturnLine.prototype.clearModemNumbersList = function() {
  this.setModemNumbersList([]);
};


/**
 * optional Reason reason = 4;
 * @return {!proto.hiber.modem.ModemTransferReturnLine.Reason}
 */
proto.hiber.modem.ModemTransferReturnLine.prototype.getReason = function() {
  return /** @type {!proto.hiber.modem.ModemTransferReturnLine.Reason} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {!proto.hiber.modem.ModemTransferReturnLine.Reason} value */
proto.hiber.modem.ModemTransferReturnLine.prototype.setReason = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string comment = 5;
 * @return {string}
 */
proto.hiber.modem.ModemTransferReturnLine.prototype.getComment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.hiber.modem.ModemTransferReturnLine.prototype.setComment = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional hiber.Timestamp created_at = 6;
 * @return {?proto.hiber.Timestamp}
 */
proto.hiber.modem.ModemTransferReturnLine.prototype.getCreatedAt = function() {
  return /** @type{?proto.hiber.Timestamp} */ (
    jspb.Message.getWrapperField(this, base_pb.Timestamp, 6));
};


/** @param {?proto.hiber.Timestamp|undefined} value */
proto.hiber.modem.ModemTransferReturnLine.prototype.setCreatedAt = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.hiber.modem.ModemTransferReturnLine.prototype.clearCreatedAt = function() {
  this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ModemTransferReturnLine.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional hiber.Timestamp returned_at = 7;
 * @return {?proto.hiber.Timestamp}
 */
proto.hiber.modem.ModemTransferReturnLine.prototype.getReturnedAt = function() {
  return /** @type{?proto.hiber.Timestamp} */ (
    jspb.Message.getWrapperField(this, base_pb.Timestamp, 7));
};


/** @param {?proto.hiber.Timestamp|undefined} value */
proto.hiber.modem.ModemTransferReturnLine.prototype.setReturnedAt = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.hiber.modem.ModemTransferReturnLine.prototype.clearReturnedAt = function() {
  this.setReturnedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ModemTransferReturnLine.prototype.hasReturnedAt = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional hiber.Timestamp return_deadline = 8;
 * @return {?proto.hiber.Timestamp}
 */
proto.hiber.modem.ModemTransferReturnLine.prototype.getReturnDeadline = function() {
  return /** @type{?proto.hiber.Timestamp} */ (
    jspb.Message.getWrapperField(this, base_pb.Timestamp, 8));
};


/** @param {?proto.hiber.Timestamp|undefined} value */
proto.hiber.modem.ModemTransferReturnLine.prototype.setReturnDeadline = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.hiber.modem.ModemTransferReturnLine.prototype.clearReturnDeadline = function() {
  this.setReturnDeadline(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ModemTransferReturnLine.prototype.hasReturnDeadline = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.ModemTransferSelection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.modem.ModemTransferSelection.repeatedFields_, null);
};
goog.inherits(proto.hiber.modem.ModemTransferSelection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.ModemTransferSelection.displayName = 'proto.hiber.modem.ModemTransferSelection';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.modem.ModemTransferSelection.repeatedFields_ = [1,3,4,5,10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.ModemTransferSelection.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.ModemTransferSelection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.ModemTransferSelection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.ModemTransferSelection.toObject = function(includeInstance, msg) {
  var f, obj = {
    identifiersList: jspb.Message.getRepeatedField(msg, 1),
    modems: (f = msg.getModems()) && modem_pb.ModemSelection.toObject(includeInstance, f),
    sendersList: jspb.Message.getRepeatedField(msg, 3),
    recipientsList: jspb.Message.getRepeatedField(msg, 4),
    statusesList: jspb.Message.getRepeatedField(msg, 5),
    createdIn: (f = msg.getCreatedIn()) && base_pb.TimeRange.toObject(includeInstance, f),
    receivedIn: (f = msg.getReceivedIn()) && base_pb.TimeRange.toObject(includeInstance, f),
    notReceivedIn: (f = msg.getNotReceivedIn()) && base_pb.TimeRange.toObject(includeInstance, f),
    cancelledIn: (f = msg.getCancelledIn()) && base_pb.TimeRange.toObject(includeInstance, f),
    typesList: jspb.Message.getRepeatedField(msg, 10),
    inboundOnly: jspb.Message.getFieldWithDefault(msg, 11, false),
    outboundOnly: jspb.Message.getFieldWithDefault(msg, 12, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.ModemTransferSelection}
 */
proto.hiber.modem.ModemTransferSelection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.ModemTransferSelection;
  return proto.hiber.modem.ModemTransferSelection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.ModemTransferSelection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.ModemTransferSelection}
 */
proto.hiber.modem.ModemTransferSelection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addIdentifiers(value);
      break;
    case 2:
      var value = new modem_pb.ModemSelection;
      reader.readMessage(value,modem_pb.ModemSelection.deserializeBinaryFromReader);
      msg.setModems(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addSenders(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addRecipients(value);
      break;
    case 5:
      var value = /** @type {!Array.<!proto.hiber.modem.ModemTransfer.Status>} */ (reader.readPackedEnum());
      msg.setStatusesList(value);
      break;
    case 6:
      var value = new base_pb.TimeRange;
      reader.readMessage(value,base_pb.TimeRange.deserializeBinaryFromReader);
      msg.setCreatedIn(value);
      break;
    case 7:
      var value = new base_pb.TimeRange;
      reader.readMessage(value,base_pb.TimeRange.deserializeBinaryFromReader);
      msg.setReceivedIn(value);
      break;
    case 8:
      var value = new base_pb.TimeRange;
      reader.readMessage(value,base_pb.TimeRange.deserializeBinaryFromReader);
      msg.setNotReceivedIn(value);
      break;
    case 9:
      var value = new base_pb.TimeRange;
      reader.readMessage(value,base_pb.TimeRange.deserializeBinaryFromReader);
      msg.setCancelledIn(value);
      break;
    case 10:
      var value = /** @type {!Array.<!proto.hiber.modem.ModemTransfer.Type>} */ (reader.readPackedEnum());
      msg.setTypesList(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInboundOnly(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOutboundOnly(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.ModemTransferSelection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.ModemTransferSelection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.ModemTransferSelection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.ModemTransferSelection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdentifiersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getModems();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      modem_pb.ModemSelection.serializeBinaryToWriter
    );
  }
  f = message.getSendersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getRecipientsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getStatusesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      5,
      f
    );
  }
  f = message.getCreatedIn();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      base_pb.TimeRange.serializeBinaryToWriter
    );
  }
  f = message.getReceivedIn();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      base_pb.TimeRange.serializeBinaryToWriter
    );
  }
  f = message.getNotReceivedIn();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      base_pb.TimeRange.serializeBinaryToWriter
    );
  }
  f = message.getCancelledIn();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      base_pb.TimeRange.serializeBinaryToWriter
    );
  }
  f = message.getTypesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      10,
      f
    );
  }
  f = message.getInboundOnly();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getOutboundOnly();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
};


/**
 * repeated string identifiers = 1;
 * @return {!Array.<string>}
 */
proto.hiber.modem.ModemTransferSelection.prototype.getIdentifiersList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array.<string>} value */
proto.hiber.modem.ModemTransferSelection.prototype.setIdentifiersList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.hiber.modem.ModemTransferSelection.prototype.addIdentifiers = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.hiber.modem.ModemTransferSelection.prototype.clearIdentifiersList = function() {
  this.setIdentifiersList([]);
};


/**
 * optional ModemSelection modems = 2;
 * @return {?proto.hiber.modem.ModemSelection}
 */
proto.hiber.modem.ModemTransferSelection.prototype.getModems = function() {
  return /** @type{?proto.hiber.modem.ModemSelection} */ (
    jspb.Message.getWrapperField(this, modem_pb.ModemSelection, 2));
};


/** @param {?proto.hiber.modem.ModemSelection|undefined} value */
proto.hiber.modem.ModemTransferSelection.prototype.setModems = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.modem.ModemTransferSelection.prototype.clearModems = function() {
  this.setModems(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ModemTransferSelection.prototype.hasModems = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated string senders = 3;
 * @return {!Array.<string>}
 */
proto.hiber.modem.ModemTransferSelection.prototype.getSendersList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array.<string>} value */
proto.hiber.modem.ModemTransferSelection.prototype.setSendersList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.hiber.modem.ModemTransferSelection.prototype.addSenders = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.hiber.modem.ModemTransferSelection.prototype.clearSendersList = function() {
  this.setSendersList([]);
};


/**
 * repeated string recipients = 4;
 * @return {!Array.<string>}
 */
proto.hiber.modem.ModemTransferSelection.prototype.getRecipientsList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/** @param {!Array.<string>} value */
proto.hiber.modem.ModemTransferSelection.prototype.setRecipientsList = function(value) {
  jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.hiber.modem.ModemTransferSelection.prototype.addRecipients = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


proto.hiber.modem.ModemTransferSelection.prototype.clearRecipientsList = function() {
  this.setRecipientsList([]);
};


/**
 * repeated ModemTransfer.Status statuses = 5;
 * @return {!Array.<!proto.hiber.modem.ModemTransfer.Status>}
 */
proto.hiber.modem.ModemTransferSelection.prototype.getStatusesList = function() {
  return /** @type {!Array.<!proto.hiber.modem.ModemTransfer.Status>} */ (jspb.Message.getRepeatedField(this, 5));
};


/** @param {!Array.<!proto.hiber.modem.ModemTransfer.Status>} value */
proto.hiber.modem.ModemTransferSelection.prototype.setStatusesList = function(value) {
  jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {!proto.hiber.modem.ModemTransfer.Status} value
 * @param {number=} opt_index
 */
proto.hiber.modem.ModemTransferSelection.prototype.addStatuses = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


proto.hiber.modem.ModemTransferSelection.prototype.clearStatusesList = function() {
  this.setStatusesList([]);
};


/**
 * optional hiber.TimeRange created_in = 6;
 * @return {?proto.hiber.TimeRange}
 */
proto.hiber.modem.ModemTransferSelection.prototype.getCreatedIn = function() {
  return /** @type{?proto.hiber.TimeRange} */ (
    jspb.Message.getWrapperField(this, base_pb.TimeRange, 6));
};


/** @param {?proto.hiber.TimeRange|undefined} value */
proto.hiber.modem.ModemTransferSelection.prototype.setCreatedIn = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.hiber.modem.ModemTransferSelection.prototype.clearCreatedIn = function() {
  this.setCreatedIn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ModemTransferSelection.prototype.hasCreatedIn = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional hiber.TimeRange received_in = 7;
 * @return {?proto.hiber.TimeRange}
 */
proto.hiber.modem.ModemTransferSelection.prototype.getReceivedIn = function() {
  return /** @type{?proto.hiber.TimeRange} */ (
    jspb.Message.getWrapperField(this, base_pb.TimeRange, 7));
};


/** @param {?proto.hiber.TimeRange|undefined} value */
proto.hiber.modem.ModemTransferSelection.prototype.setReceivedIn = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.hiber.modem.ModemTransferSelection.prototype.clearReceivedIn = function() {
  this.setReceivedIn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ModemTransferSelection.prototype.hasReceivedIn = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional hiber.TimeRange not_received_in = 8;
 * @return {?proto.hiber.TimeRange}
 */
proto.hiber.modem.ModemTransferSelection.prototype.getNotReceivedIn = function() {
  return /** @type{?proto.hiber.TimeRange} */ (
    jspb.Message.getWrapperField(this, base_pb.TimeRange, 8));
};


/** @param {?proto.hiber.TimeRange|undefined} value */
proto.hiber.modem.ModemTransferSelection.prototype.setNotReceivedIn = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.hiber.modem.ModemTransferSelection.prototype.clearNotReceivedIn = function() {
  this.setNotReceivedIn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ModemTransferSelection.prototype.hasNotReceivedIn = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional hiber.TimeRange cancelled_in = 9;
 * @return {?proto.hiber.TimeRange}
 */
proto.hiber.modem.ModemTransferSelection.prototype.getCancelledIn = function() {
  return /** @type{?proto.hiber.TimeRange} */ (
    jspb.Message.getWrapperField(this, base_pb.TimeRange, 9));
};


/** @param {?proto.hiber.TimeRange|undefined} value */
proto.hiber.modem.ModemTransferSelection.prototype.setCancelledIn = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


proto.hiber.modem.ModemTransferSelection.prototype.clearCancelledIn = function() {
  this.setCancelledIn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ModemTransferSelection.prototype.hasCancelledIn = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * repeated ModemTransfer.Type types = 10;
 * @return {!Array.<!proto.hiber.modem.ModemTransfer.Type>}
 */
proto.hiber.modem.ModemTransferSelection.prototype.getTypesList = function() {
  return /** @type {!Array.<!proto.hiber.modem.ModemTransfer.Type>} */ (jspb.Message.getRepeatedField(this, 10));
};


/** @param {!Array.<!proto.hiber.modem.ModemTransfer.Type>} value */
proto.hiber.modem.ModemTransferSelection.prototype.setTypesList = function(value) {
  jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {!proto.hiber.modem.ModemTransfer.Type} value
 * @param {number=} opt_index
 */
proto.hiber.modem.ModemTransferSelection.prototype.addTypes = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


proto.hiber.modem.ModemTransferSelection.prototype.clearTypesList = function() {
  this.setTypesList([]);
};


/**
 * optional bool inbound_only = 11;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.hiber.modem.ModemTransferSelection.prototype.getInboundOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 11, false));
};


/** @param {boolean} value */
proto.hiber.modem.ModemTransferSelection.prototype.setInboundOnly = function(value) {
  jspb.Message.setField(this, 11, value);
};


/**
 * optional bool outbound_only = 12;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.hiber.modem.ModemTransferSelection.prototype.getOutboundOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 12, false));
};


/** @param {boolean} value */
proto.hiber.modem.ModemTransferSelection.prototype.setOutboundOnly = function(value) {
  jspb.Message.setField(this, 12, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.TransferModemsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.modem.TransferModemsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.TransferModemsRequest.displayName = 'proto.hiber.modem.TransferModemsRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.TransferModemsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.TransferModemsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.TransferModemsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.TransferModemsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: jspb.Message.getFieldWithDefault(msg, 1, ""),
    selection: (f = msg.getSelection()) && modem_pb.ModemSelection.toObject(includeInstance, f),
    recipientOrganization: jspb.Message.getFieldWithDefault(msg, 3, ""),
    createRecipient: (f = msg.getCreateRecipient()) && organization_pb.CreateOrganizationRequest.toObject(includeInstance, f),
    trackingInformation: jspb.Message.getFieldWithDefault(msg, 5, ""),
    markReceivedAutomatically: jspb.Message.getFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.TransferModemsRequest}
 */
proto.hiber.modem.TransferModemsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.TransferModemsRequest;
  return proto.hiber.modem.TransferModemsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.TransferModemsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.TransferModemsRequest}
 */
proto.hiber.modem.TransferModemsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 2:
      var value = new modem_pb.ModemSelection;
      reader.readMessage(value,modem_pb.ModemSelection.deserializeBinaryFromReader);
      msg.setSelection(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecipientOrganization(value);
      break;
    case 4:
      var value = new organization_pb.CreateOrganizationRequest;
      reader.readMessage(value,organization_pb.CreateOrganizationRequest.deserializeBinaryFromReader);
      msg.setCreateRecipient(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTrackingInformation(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMarkReceivedAutomatically(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.TransferModemsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.TransferModemsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.TransferModemsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.TransferModemsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSelection();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      modem_pb.ModemSelection.serializeBinaryToWriter
    );
  }
  f = message.getRecipientOrganization();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCreateRecipient();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      organization_pb.CreateOrganizationRequest.serializeBinaryToWriter
    );
  }
  f = message.getTrackingInformation();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getMarkReceivedAutomatically();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.TransferModemsRequest.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.modem.TransferModemsRequest.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.TransferModemsRequest.Response.displayName = 'proto.hiber.modem.TransferModemsRequest.Response';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.TransferModemsRequest.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.TransferModemsRequest.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.TransferModemsRequest.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.TransferModemsRequest.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    request: (f = msg.getRequest()) && proto.hiber.modem.TransferModemsRequest.toObject(includeInstance, f),
    transfer: (f = msg.getTransfer()) && proto.hiber.modem.ModemTransfer.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.TransferModemsRequest.Response}
 */
proto.hiber.modem.TransferModemsRequest.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.TransferModemsRequest.Response;
  return proto.hiber.modem.TransferModemsRequest.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.TransferModemsRequest.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.TransferModemsRequest.Response}
 */
proto.hiber.modem.TransferModemsRequest.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.hiber.modem.TransferModemsRequest;
      reader.readMessage(value,proto.hiber.modem.TransferModemsRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    case 2:
      var value = new proto.hiber.modem.ModemTransfer;
      reader.readMessage(value,proto.hiber.modem.ModemTransfer.deserializeBinaryFromReader);
      msg.setTransfer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.TransferModemsRequest.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.TransferModemsRequest.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.TransferModemsRequest.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.TransferModemsRequest.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.hiber.modem.TransferModemsRequest.serializeBinaryToWriter
    );
  }
  f = message.getTransfer();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.hiber.modem.ModemTransfer.serializeBinaryToWriter
    );
  }
};


/**
 * optional TransferModemsRequest request = 1;
 * @return {?proto.hiber.modem.TransferModemsRequest}
 */
proto.hiber.modem.TransferModemsRequest.Response.prototype.getRequest = function() {
  return /** @type{?proto.hiber.modem.TransferModemsRequest} */ (
    jspb.Message.getWrapperField(this, proto.hiber.modem.TransferModemsRequest, 1));
};


/** @param {?proto.hiber.modem.TransferModemsRequest|undefined} value */
proto.hiber.modem.TransferModemsRequest.Response.prototype.setRequest = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.hiber.modem.TransferModemsRequest.Response.prototype.clearRequest = function() {
  this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.TransferModemsRequest.Response.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ModemTransfer transfer = 2;
 * @return {?proto.hiber.modem.ModemTransfer}
 */
proto.hiber.modem.TransferModemsRequest.Response.prototype.getTransfer = function() {
  return /** @type{?proto.hiber.modem.ModemTransfer} */ (
    jspb.Message.getWrapperField(this, proto.hiber.modem.ModemTransfer, 2));
};


/** @param {?proto.hiber.modem.ModemTransfer|undefined} value */
proto.hiber.modem.TransferModemsRequest.Response.prototype.setTransfer = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.modem.TransferModemsRequest.Response.prototype.clearTransfer = function() {
  this.setTransfer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.TransferModemsRequest.Response.prototype.hasTransfer = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string organization = 1;
 * @return {string}
 */
proto.hiber.modem.TransferModemsRequest.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.modem.TransferModemsRequest.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional ModemSelection selection = 2;
 * @return {?proto.hiber.modem.ModemSelection}
 */
proto.hiber.modem.TransferModemsRequest.prototype.getSelection = function() {
  return /** @type{?proto.hiber.modem.ModemSelection} */ (
    jspb.Message.getWrapperField(this, modem_pb.ModemSelection, 2));
};


/** @param {?proto.hiber.modem.ModemSelection|undefined} value */
proto.hiber.modem.TransferModemsRequest.prototype.setSelection = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.modem.TransferModemsRequest.prototype.clearSelection = function() {
  this.setSelection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.TransferModemsRequest.prototype.hasSelection = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string recipient_organization = 3;
 * @return {string}
 */
proto.hiber.modem.TransferModemsRequest.prototype.getRecipientOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.hiber.modem.TransferModemsRequest.prototype.setRecipientOrganization = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional hiber.organization.CreateOrganizationRequest create_recipient = 4;
 * @return {?proto.hiber.organization.CreateOrganizationRequest}
 */
proto.hiber.modem.TransferModemsRequest.prototype.getCreateRecipient = function() {
  return /** @type{?proto.hiber.organization.CreateOrganizationRequest} */ (
    jspb.Message.getWrapperField(this, organization_pb.CreateOrganizationRequest, 4));
};


/** @param {?proto.hiber.organization.CreateOrganizationRequest|undefined} value */
proto.hiber.modem.TransferModemsRequest.prototype.setCreateRecipient = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.hiber.modem.TransferModemsRequest.prototype.clearCreateRecipient = function() {
  this.setCreateRecipient(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.TransferModemsRequest.prototype.hasCreateRecipient = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string tracking_information = 5;
 * @return {string}
 */
proto.hiber.modem.TransferModemsRequest.prototype.getTrackingInformation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.hiber.modem.TransferModemsRequest.prototype.setTrackingInformation = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional bool mark_received_automatically = 6;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.hiber.modem.TransferModemsRequest.prototype.getMarkReceivedAutomatically = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, false));
};


/** @param {boolean} value */
proto.hiber.modem.TransferModemsRequest.prototype.setMarkReceivedAutomatically = function(value) {
  jspb.Message.setField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.ListModemTransfersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.modem.ListModemTransfersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.ListModemTransfersRequest.displayName = 'proto.hiber.modem.ListModemTransfersRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.ListModemTransfersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.ListModemTransfersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.ListModemTransfersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.ListModemTransfersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: jspb.Message.getFieldWithDefault(msg, 1, ""),
    selection: (f = msg.getSelection()) && proto.hiber.modem.ModemTransferSelection.toObject(includeInstance, f),
    pagination: (f = msg.getPagination()) && base_pb.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.ListModemTransfersRequest}
 */
proto.hiber.modem.ListModemTransfersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.ListModemTransfersRequest;
  return proto.hiber.modem.ListModemTransfersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.ListModemTransfersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.ListModemTransfersRequest}
 */
proto.hiber.modem.ListModemTransfersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 2:
      var value = new proto.hiber.modem.ModemTransferSelection;
      reader.readMessage(value,proto.hiber.modem.ModemTransferSelection.deserializeBinaryFromReader);
      msg.setSelection(value);
      break;
    case 3:
      var value = new base_pb.Pagination;
      reader.readMessage(value,base_pb.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.ListModemTransfersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.ListModemTransfersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.ListModemTransfersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.ListModemTransfersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSelection();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.hiber.modem.ModemTransferSelection.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      base_pb.Pagination.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.ListModemTransfersRequest.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.modem.ListModemTransfersRequest.Response.repeatedFields_, null);
};
goog.inherits(proto.hiber.modem.ListModemTransfersRequest.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.ListModemTransfersRequest.Response.displayName = 'proto.hiber.modem.ListModemTransfersRequest.Response';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.modem.ListModemTransfersRequest.Response.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.ListModemTransfersRequest.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.ListModemTransfersRequest.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.ListModemTransfersRequest.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.ListModemTransfersRequest.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    request: (f = msg.getRequest()) && proto.hiber.modem.ListModemTransfersRequest.toObject(includeInstance, f),
    transfersList: jspb.Message.toObjectList(msg.getTransfersList(),
    proto.hiber.modem.ModemTransfer.toObject, includeInstance),
    pagination: (f = msg.getPagination()) && base_pb.Pagination.Result.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.ListModemTransfersRequest.Response}
 */
proto.hiber.modem.ListModemTransfersRequest.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.ListModemTransfersRequest.Response;
  return proto.hiber.modem.ListModemTransfersRequest.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.ListModemTransfersRequest.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.ListModemTransfersRequest.Response}
 */
proto.hiber.modem.ListModemTransfersRequest.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.hiber.modem.ListModemTransfersRequest;
      reader.readMessage(value,proto.hiber.modem.ListModemTransfersRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    case 2:
      var value = new proto.hiber.modem.ModemTransfer;
      reader.readMessage(value,proto.hiber.modem.ModemTransfer.deserializeBinaryFromReader);
      msg.addTransfers(value);
      break;
    case 3:
      var value = new base_pb.Pagination.Result;
      reader.readMessage(value,base_pb.Pagination.Result.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.ListModemTransfersRequest.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.ListModemTransfersRequest.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.ListModemTransfersRequest.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.ListModemTransfersRequest.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.hiber.modem.ListModemTransfersRequest.serializeBinaryToWriter
    );
  }
  f = message.getTransfersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.hiber.modem.ModemTransfer.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      base_pb.Pagination.Result.serializeBinaryToWriter
    );
  }
};


/**
 * optional ListModemTransfersRequest request = 1;
 * @return {?proto.hiber.modem.ListModemTransfersRequest}
 */
proto.hiber.modem.ListModemTransfersRequest.Response.prototype.getRequest = function() {
  return /** @type{?proto.hiber.modem.ListModemTransfersRequest} */ (
    jspb.Message.getWrapperField(this, proto.hiber.modem.ListModemTransfersRequest, 1));
};


/** @param {?proto.hiber.modem.ListModemTransfersRequest|undefined} value */
proto.hiber.modem.ListModemTransfersRequest.Response.prototype.setRequest = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.hiber.modem.ListModemTransfersRequest.Response.prototype.clearRequest = function() {
  this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ListModemTransfersRequest.Response.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated ModemTransfer transfers = 2;
 * @return {!Array.<!proto.hiber.modem.ModemTransfer>}
 */
proto.hiber.modem.ListModemTransfersRequest.Response.prototype.getTransfersList = function() {
  return /** @type{!Array.<!proto.hiber.modem.ModemTransfer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.hiber.modem.ModemTransfer, 2));
};


/** @param {!Array.<!proto.hiber.modem.ModemTransfer>} value */
proto.hiber.modem.ListModemTransfersRequest.Response.prototype.setTransfersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.hiber.modem.ModemTransfer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hiber.modem.ModemTransfer}
 */
proto.hiber.modem.ListModemTransfersRequest.Response.prototype.addTransfers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.hiber.modem.ModemTransfer, opt_index);
};


proto.hiber.modem.ListModemTransfersRequest.Response.prototype.clearTransfersList = function() {
  this.setTransfersList([]);
};


/**
 * optional hiber.Pagination.Result pagination = 3;
 * @return {?proto.hiber.Pagination.Result}
 */
proto.hiber.modem.ListModemTransfersRequest.Response.prototype.getPagination = function() {
  return /** @type{?proto.hiber.Pagination.Result} */ (
    jspb.Message.getWrapperField(this, base_pb.Pagination.Result, 3));
};


/** @param {?proto.hiber.Pagination.Result|undefined} value */
proto.hiber.modem.ListModemTransfersRequest.Response.prototype.setPagination = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.modem.ListModemTransfersRequest.Response.prototype.clearPagination = function() {
  this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ListModemTransfersRequest.Response.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string organization = 1;
 * @return {string}
 */
proto.hiber.modem.ListModemTransfersRequest.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.modem.ListModemTransfersRequest.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional ModemTransferSelection selection = 2;
 * @return {?proto.hiber.modem.ModemTransferSelection}
 */
proto.hiber.modem.ListModemTransfersRequest.prototype.getSelection = function() {
  return /** @type{?proto.hiber.modem.ModemTransferSelection} */ (
    jspb.Message.getWrapperField(this, proto.hiber.modem.ModemTransferSelection, 2));
};


/** @param {?proto.hiber.modem.ModemTransferSelection|undefined} value */
proto.hiber.modem.ListModemTransfersRequest.prototype.setSelection = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.modem.ListModemTransfersRequest.prototype.clearSelection = function() {
  this.setSelection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ListModemTransfersRequest.prototype.hasSelection = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional hiber.Pagination pagination = 3;
 * @return {?proto.hiber.Pagination}
 */
proto.hiber.modem.ListModemTransfersRequest.prototype.getPagination = function() {
  return /** @type{?proto.hiber.Pagination} */ (
    jspb.Message.getWrapperField(this, base_pb.Pagination, 3));
};


/** @param {?proto.hiber.Pagination|undefined} value */
proto.hiber.modem.ListModemTransfersRequest.prototype.setPagination = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.modem.ListModemTransfersRequest.prototype.clearPagination = function() {
  this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ListModemTransfersRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.CancelModemTransferRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.modem.CancelModemTransferRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.CancelModemTransferRequest.displayName = 'proto.hiber.modem.CancelModemTransferRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.CancelModemTransferRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.CancelModemTransferRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.CancelModemTransferRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.CancelModemTransferRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: jspb.Message.getFieldWithDefault(msg, 1, ""),
    selection: (f = msg.getSelection()) && proto.hiber.modem.ModemTransferSelection.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.CancelModemTransferRequest}
 */
proto.hiber.modem.CancelModemTransferRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.CancelModemTransferRequest;
  return proto.hiber.modem.CancelModemTransferRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.CancelModemTransferRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.CancelModemTransferRequest}
 */
proto.hiber.modem.CancelModemTransferRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 2:
      var value = new proto.hiber.modem.ModemTransferSelection;
      reader.readMessage(value,proto.hiber.modem.ModemTransferSelection.deserializeBinaryFromReader);
      msg.setSelection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.CancelModemTransferRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.CancelModemTransferRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.CancelModemTransferRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.CancelModemTransferRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSelection();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.hiber.modem.ModemTransferSelection.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.CancelModemTransferRequest.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.modem.CancelModemTransferRequest.Response.repeatedFields_, null);
};
goog.inherits(proto.hiber.modem.CancelModemTransferRequest.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.CancelModemTransferRequest.Response.displayName = 'proto.hiber.modem.CancelModemTransferRequest.Response';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.modem.CancelModemTransferRequest.Response.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.CancelModemTransferRequest.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.CancelModemTransferRequest.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.CancelModemTransferRequest.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.CancelModemTransferRequest.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    request: (f = msg.getRequest()) && proto.hiber.modem.CancelModemTransferRequest.toObject(includeInstance, f),
    cancelledList: jspb.Message.toObjectList(msg.getCancelledList(),
    proto.hiber.modem.ModemTransfer.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.CancelModemTransferRequest.Response}
 */
proto.hiber.modem.CancelModemTransferRequest.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.CancelModemTransferRequest.Response;
  return proto.hiber.modem.CancelModemTransferRequest.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.CancelModemTransferRequest.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.CancelModemTransferRequest.Response}
 */
proto.hiber.modem.CancelModemTransferRequest.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.hiber.modem.CancelModemTransferRequest;
      reader.readMessage(value,proto.hiber.modem.CancelModemTransferRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    case 2:
      var value = new proto.hiber.modem.ModemTransfer;
      reader.readMessage(value,proto.hiber.modem.ModemTransfer.deserializeBinaryFromReader);
      msg.addCancelled(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.CancelModemTransferRequest.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.CancelModemTransferRequest.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.CancelModemTransferRequest.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.CancelModemTransferRequest.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.hiber.modem.CancelModemTransferRequest.serializeBinaryToWriter
    );
  }
  f = message.getCancelledList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.hiber.modem.ModemTransfer.serializeBinaryToWriter
    );
  }
};


/**
 * optional CancelModemTransferRequest request = 1;
 * @return {?proto.hiber.modem.CancelModemTransferRequest}
 */
proto.hiber.modem.CancelModemTransferRequest.Response.prototype.getRequest = function() {
  return /** @type{?proto.hiber.modem.CancelModemTransferRequest} */ (
    jspb.Message.getWrapperField(this, proto.hiber.modem.CancelModemTransferRequest, 1));
};


/** @param {?proto.hiber.modem.CancelModemTransferRequest|undefined} value */
proto.hiber.modem.CancelModemTransferRequest.Response.prototype.setRequest = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.hiber.modem.CancelModemTransferRequest.Response.prototype.clearRequest = function() {
  this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.CancelModemTransferRequest.Response.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated ModemTransfer cancelled = 2;
 * @return {!Array.<!proto.hiber.modem.ModemTransfer>}
 */
proto.hiber.modem.CancelModemTransferRequest.Response.prototype.getCancelledList = function() {
  return /** @type{!Array.<!proto.hiber.modem.ModemTransfer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.hiber.modem.ModemTransfer, 2));
};


/** @param {!Array.<!proto.hiber.modem.ModemTransfer>} value */
proto.hiber.modem.CancelModemTransferRequest.Response.prototype.setCancelledList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.hiber.modem.ModemTransfer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hiber.modem.ModemTransfer}
 */
proto.hiber.modem.CancelModemTransferRequest.Response.prototype.addCancelled = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.hiber.modem.ModemTransfer, opt_index);
};


proto.hiber.modem.CancelModemTransferRequest.Response.prototype.clearCancelledList = function() {
  this.setCancelledList([]);
};


/**
 * optional string organization = 1;
 * @return {string}
 */
proto.hiber.modem.CancelModemTransferRequest.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.modem.CancelModemTransferRequest.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional ModemTransferSelection selection = 2;
 * @return {?proto.hiber.modem.ModemTransferSelection}
 */
proto.hiber.modem.CancelModemTransferRequest.prototype.getSelection = function() {
  return /** @type{?proto.hiber.modem.ModemTransferSelection} */ (
    jspb.Message.getWrapperField(this, proto.hiber.modem.ModemTransferSelection, 2));
};


/** @param {?proto.hiber.modem.ModemTransferSelection|undefined} value */
proto.hiber.modem.CancelModemTransferRequest.prototype.setSelection = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.modem.CancelModemTransferRequest.prototype.clearSelection = function() {
  this.setSelection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.CancelModemTransferRequest.prototype.hasSelection = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.ReceivedModemTransferRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.modem.ReceivedModemTransferRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.ReceivedModemTransferRequest.displayName = 'proto.hiber.modem.ReceivedModemTransferRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.ReceivedModemTransferRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.ReceivedModemTransferRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.ReceivedModemTransferRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.ReceivedModemTransferRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: jspb.Message.getFieldWithDefault(msg, 1, ""),
    selection: (f = msg.getSelection()) && proto.hiber.modem.ModemTransferSelection.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.ReceivedModemTransferRequest}
 */
proto.hiber.modem.ReceivedModemTransferRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.ReceivedModemTransferRequest;
  return proto.hiber.modem.ReceivedModemTransferRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.ReceivedModemTransferRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.ReceivedModemTransferRequest}
 */
proto.hiber.modem.ReceivedModemTransferRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 2:
      var value = new proto.hiber.modem.ModemTransferSelection;
      reader.readMessage(value,proto.hiber.modem.ModemTransferSelection.deserializeBinaryFromReader);
      msg.setSelection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.ReceivedModemTransferRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.ReceivedModemTransferRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.ReceivedModemTransferRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.ReceivedModemTransferRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSelection();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.hiber.modem.ModemTransferSelection.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.ReceivedModemTransferRequest.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.modem.ReceivedModemTransferRequest.Response.repeatedFields_, null);
};
goog.inherits(proto.hiber.modem.ReceivedModemTransferRequest.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.ReceivedModemTransferRequest.Response.displayName = 'proto.hiber.modem.ReceivedModemTransferRequest.Response';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.modem.ReceivedModemTransferRequest.Response.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.ReceivedModemTransferRequest.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.ReceivedModemTransferRequest.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.ReceivedModemTransferRequest.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.ReceivedModemTransferRequest.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    request: (f = msg.getRequest()) && proto.hiber.modem.ReceivedModemTransferRequest.toObject(includeInstance, f),
    receivedList: jspb.Message.toObjectList(msg.getReceivedList(),
    proto.hiber.modem.ModemTransfer.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.ReceivedModemTransferRequest.Response}
 */
proto.hiber.modem.ReceivedModemTransferRequest.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.ReceivedModemTransferRequest.Response;
  return proto.hiber.modem.ReceivedModemTransferRequest.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.ReceivedModemTransferRequest.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.ReceivedModemTransferRequest.Response}
 */
proto.hiber.modem.ReceivedModemTransferRequest.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.hiber.modem.ReceivedModemTransferRequest;
      reader.readMessage(value,proto.hiber.modem.ReceivedModemTransferRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    case 2:
      var value = new proto.hiber.modem.ModemTransfer;
      reader.readMessage(value,proto.hiber.modem.ModemTransfer.deserializeBinaryFromReader);
      msg.addReceived(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.ReceivedModemTransferRequest.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.ReceivedModemTransferRequest.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.ReceivedModemTransferRequest.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.ReceivedModemTransferRequest.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.hiber.modem.ReceivedModemTransferRequest.serializeBinaryToWriter
    );
  }
  f = message.getReceivedList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.hiber.modem.ModemTransfer.serializeBinaryToWriter
    );
  }
};


/**
 * optional ReceivedModemTransferRequest request = 1;
 * @return {?proto.hiber.modem.ReceivedModemTransferRequest}
 */
proto.hiber.modem.ReceivedModemTransferRequest.Response.prototype.getRequest = function() {
  return /** @type{?proto.hiber.modem.ReceivedModemTransferRequest} */ (
    jspb.Message.getWrapperField(this, proto.hiber.modem.ReceivedModemTransferRequest, 1));
};


/** @param {?proto.hiber.modem.ReceivedModemTransferRequest|undefined} value */
proto.hiber.modem.ReceivedModemTransferRequest.Response.prototype.setRequest = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.hiber.modem.ReceivedModemTransferRequest.Response.prototype.clearRequest = function() {
  this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ReceivedModemTransferRequest.Response.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated ModemTransfer received = 2;
 * @return {!Array.<!proto.hiber.modem.ModemTransfer>}
 */
proto.hiber.modem.ReceivedModemTransferRequest.Response.prototype.getReceivedList = function() {
  return /** @type{!Array.<!proto.hiber.modem.ModemTransfer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.hiber.modem.ModemTransfer, 2));
};


/** @param {!Array.<!proto.hiber.modem.ModemTransfer>} value */
proto.hiber.modem.ReceivedModemTransferRequest.Response.prototype.setReceivedList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.hiber.modem.ModemTransfer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hiber.modem.ModemTransfer}
 */
proto.hiber.modem.ReceivedModemTransferRequest.Response.prototype.addReceived = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.hiber.modem.ModemTransfer, opt_index);
};


proto.hiber.modem.ReceivedModemTransferRequest.Response.prototype.clearReceivedList = function() {
  this.setReceivedList([]);
};


/**
 * optional string organization = 1;
 * @return {string}
 */
proto.hiber.modem.ReceivedModemTransferRequest.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.modem.ReceivedModemTransferRequest.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional ModemTransferSelection selection = 2;
 * @return {?proto.hiber.modem.ModemTransferSelection}
 */
proto.hiber.modem.ReceivedModemTransferRequest.prototype.getSelection = function() {
  return /** @type{?proto.hiber.modem.ModemTransferSelection} */ (
    jspb.Message.getWrapperField(this, proto.hiber.modem.ModemTransferSelection, 2));
};


/** @param {?proto.hiber.modem.ModemTransferSelection|undefined} value */
proto.hiber.modem.ReceivedModemTransferRequest.prototype.setSelection = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.modem.ReceivedModemTransferRequest.prototype.clearSelection = function() {
  this.setSelection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ReceivedModemTransferRequest.prototype.hasSelection = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.NotReceivedModemTransferRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.modem.NotReceivedModemTransferRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.NotReceivedModemTransferRequest.displayName = 'proto.hiber.modem.NotReceivedModemTransferRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.NotReceivedModemTransferRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.NotReceivedModemTransferRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.NotReceivedModemTransferRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.NotReceivedModemTransferRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: jspb.Message.getFieldWithDefault(msg, 1, ""),
    selection: (f = msg.getSelection()) && proto.hiber.modem.ModemTransferSelection.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.NotReceivedModemTransferRequest}
 */
proto.hiber.modem.NotReceivedModemTransferRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.NotReceivedModemTransferRequest;
  return proto.hiber.modem.NotReceivedModemTransferRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.NotReceivedModemTransferRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.NotReceivedModemTransferRequest}
 */
proto.hiber.modem.NotReceivedModemTransferRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 2:
      var value = new proto.hiber.modem.ModemTransferSelection;
      reader.readMessage(value,proto.hiber.modem.ModemTransferSelection.deserializeBinaryFromReader);
      msg.setSelection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.NotReceivedModemTransferRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.NotReceivedModemTransferRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.NotReceivedModemTransferRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.NotReceivedModemTransferRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSelection();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.hiber.modem.ModemTransferSelection.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.NotReceivedModemTransferRequest.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.modem.NotReceivedModemTransferRequest.Response.repeatedFields_, null);
};
goog.inherits(proto.hiber.modem.NotReceivedModemTransferRequest.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.NotReceivedModemTransferRequest.Response.displayName = 'proto.hiber.modem.NotReceivedModemTransferRequest.Response';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.modem.NotReceivedModemTransferRequest.Response.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.NotReceivedModemTransferRequest.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.NotReceivedModemTransferRequest.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.NotReceivedModemTransferRequest.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.NotReceivedModemTransferRequest.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    request: (f = msg.getRequest()) && proto.hiber.modem.NotReceivedModemTransferRequest.toObject(includeInstance, f),
    notReceivedList: jspb.Message.toObjectList(msg.getNotReceivedList(),
    proto.hiber.modem.ModemTransfer.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.NotReceivedModemTransferRequest.Response}
 */
proto.hiber.modem.NotReceivedModemTransferRequest.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.NotReceivedModemTransferRequest.Response;
  return proto.hiber.modem.NotReceivedModemTransferRequest.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.NotReceivedModemTransferRequest.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.NotReceivedModemTransferRequest.Response}
 */
proto.hiber.modem.NotReceivedModemTransferRequest.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.hiber.modem.NotReceivedModemTransferRequest;
      reader.readMessage(value,proto.hiber.modem.NotReceivedModemTransferRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    case 2:
      var value = new proto.hiber.modem.ModemTransfer;
      reader.readMessage(value,proto.hiber.modem.ModemTransfer.deserializeBinaryFromReader);
      msg.addNotReceived(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.NotReceivedModemTransferRequest.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.NotReceivedModemTransferRequest.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.NotReceivedModemTransferRequest.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.NotReceivedModemTransferRequest.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.hiber.modem.NotReceivedModemTransferRequest.serializeBinaryToWriter
    );
  }
  f = message.getNotReceivedList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.hiber.modem.ModemTransfer.serializeBinaryToWriter
    );
  }
};


/**
 * optional NotReceivedModemTransferRequest request = 1;
 * @return {?proto.hiber.modem.NotReceivedModemTransferRequest}
 */
proto.hiber.modem.NotReceivedModemTransferRequest.Response.prototype.getRequest = function() {
  return /** @type{?proto.hiber.modem.NotReceivedModemTransferRequest} */ (
    jspb.Message.getWrapperField(this, proto.hiber.modem.NotReceivedModemTransferRequest, 1));
};


/** @param {?proto.hiber.modem.NotReceivedModemTransferRequest|undefined} value */
proto.hiber.modem.NotReceivedModemTransferRequest.Response.prototype.setRequest = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.hiber.modem.NotReceivedModemTransferRequest.Response.prototype.clearRequest = function() {
  this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.NotReceivedModemTransferRequest.Response.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated ModemTransfer not_received = 2;
 * @return {!Array.<!proto.hiber.modem.ModemTransfer>}
 */
proto.hiber.modem.NotReceivedModemTransferRequest.Response.prototype.getNotReceivedList = function() {
  return /** @type{!Array.<!proto.hiber.modem.ModemTransfer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.hiber.modem.ModemTransfer, 2));
};


/** @param {!Array.<!proto.hiber.modem.ModemTransfer>} value */
proto.hiber.modem.NotReceivedModemTransferRequest.Response.prototype.setNotReceivedList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.hiber.modem.ModemTransfer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hiber.modem.ModemTransfer}
 */
proto.hiber.modem.NotReceivedModemTransferRequest.Response.prototype.addNotReceived = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.hiber.modem.ModemTransfer, opt_index);
};


proto.hiber.modem.NotReceivedModemTransferRequest.Response.prototype.clearNotReceivedList = function() {
  this.setNotReceivedList([]);
};


/**
 * optional string organization = 1;
 * @return {string}
 */
proto.hiber.modem.NotReceivedModemTransferRequest.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.modem.NotReceivedModemTransferRequest.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional ModemTransferSelection selection = 2;
 * @return {?proto.hiber.modem.ModemTransferSelection}
 */
proto.hiber.modem.NotReceivedModemTransferRequest.prototype.getSelection = function() {
  return /** @type{?proto.hiber.modem.ModemTransferSelection} */ (
    jspb.Message.getWrapperField(this, proto.hiber.modem.ModemTransferSelection, 2));
};


/** @param {?proto.hiber.modem.ModemTransferSelection|undefined} value */
proto.hiber.modem.NotReceivedModemTransferRequest.prototype.setSelection = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.modem.NotReceivedModemTransferRequest.prototype.clearSelection = function() {
  this.setSelection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.NotReceivedModemTransferRequest.prototype.hasSelection = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.PrepareModemForReturnRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.modem.PrepareModemForReturnRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.PrepareModemForReturnRequest.displayName = 'proto.hiber.modem.PrepareModemForReturnRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.PrepareModemForReturnRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.PrepareModemForReturnRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.PrepareModemForReturnRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.PrepareModemForReturnRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: jspb.Message.getFieldWithDefault(msg, 1, ""),
    transferId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    selection: (f = msg.getSelection()) && modem_pb.ModemSelection.toObject(includeInstance, f),
    reason: jspb.Message.getFieldWithDefault(msg, 4, 0),
    comment: jspb.Message.getFieldWithDefault(msg, 5, ""),
    replacePreviousComment: jspb.Message.getFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.PrepareModemForReturnRequest}
 */
proto.hiber.modem.PrepareModemForReturnRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.PrepareModemForReturnRequest;
  return proto.hiber.modem.PrepareModemForReturnRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.PrepareModemForReturnRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.PrepareModemForReturnRequest}
 */
proto.hiber.modem.PrepareModemForReturnRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransferId(value);
      break;
    case 3:
      var value = new modem_pb.ModemSelection;
      reader.readMessage(value,modem_pb.ModemSelection.deserializeBinaryFromReader);
      msg.setSelection(value);
      break;
    case 4:
      var value = /** @type {!proto.hiber.modem.ModemTransferReturnLine.Reason} */ (reader.readEnum());
      msg.setReason(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setComment(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReplacePreviousComment(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.PrepareModemForReturnRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.PrepareModemForReturnRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.PrepareModemForReturnRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.PrepareModemForReturnRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTransferId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSelection();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      modem_pb.ModemSelection.serializeBinaryToWriter
    );
  }
  f = message.getReason();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getComment();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getReplacePreviousComment();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.PrepareModemForReturnRequest.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.modem.PrepareModemForReturnRequest.Response.repeatedFields_, null);
};
goog.inherits(proto.hiber.modem.PrepareModemForReturnRequest.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.PrepareModemForReturnRequest.Response.displayName = 'proto.hiber.modem.PrepareModemForReturnRequest.Response';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.modem.PrepareModemForReturnRequest.Response.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.PrepareModemForReturnRequest.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.PrepareModemForReturnRequest.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.PrepareModemForReturnRequest.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.PrepareModemForReturnRequest.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    request: (f = msg.getRequest()) && proto.hiber.modem.PrepareModemForReturnRequest.toObject(includeInstance, f),
    modemReturnLinesList: jspb.Message.toObjectList(msg.getModemReturnLinesList(),
    proto.hiber.modem.ModemTransferReturnLine.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.PrepareModemForReturnRequest.Response}
 */
proto.hiber.modem.PrepareModemForReturnRequest.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.PrepareModemForReturnRequest.Response;
  return proto.hiber.modem.PrepareModemForReturnRequest.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.PrepareModemForReturnRequest.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.PrepareModemForReturnRequest.Response}
 */
proto.hiber.modem.PrepareModemForReturnRequest.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.hiber.modem.PrepareModemForReturnRequest;
      reader.readMessage(value,proto.hiber.modem.PrepareModemForReturnRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    case 3:
      var value = new proto.hiber.modem.ModemTransferReturnLine;
      reader.readMessage(value,proto.hiber.modem.ModemTransferReturnLine.deserializeBinaryFromReader);
      msg.addModemReturnLines(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.PrepareModemForReturnRequest.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.PrepareModemForReturnRequest.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.PrepareModemForReturnRequest.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.PrepareModemForReturnRequest.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.hiber.modem.PrepareModemForReturnRequest.serializeBinaryToWriter
    );
  }
  f = message.getModemReturnLinesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.hiber.modem.ModemTransferReturnLine.serializeBinaryToWriter
    );
  }
};


/**
 * optional PrepareModemForReturnRequest request = 1;
 * @return {?proto.hiber.modem.PrepareModemForReturnRequest}
 */
proto.hiber.modem.PrepareModemForReturnRequest.Response.prototype.getRequest = function() {
  return /** @type{?proto.hiber.modem.PrepareModemForReturnRequest} */ (
    jspb.Message.getWrapperField(this, proto.hiber.modem.PrepareModemForReturnRequest, 1));
};


/** @param {?proto.hiber.modem.PrepareModemForReturnRequest|undefined} value */
proto.hiber.modem.PrepareModemForReturnRequest.Response.prototype.setRequest = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.hiber.modem.PrepareModemForReturnRequest.Response.prototype.clearRequest = function() {
  this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.PrepareModemForReturnRequest.Response.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated ModemTransferReturnLine modem_return_lines = 3;
 * @return {!Array.<!proto.hiber.modem.ModemTransferReturnLine>}
 */
proto.hiber.modem.PrepareModemForReturnRequest.Response.prototype.getModemReturnLinesList = function() {
  return /** @type{!Array.<!proto.hiber.modem.ModemTransferReturnLine>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.hiber.modem.ModemTransferReturnLine, 3));
};


/** @param {!Array.<!proto.hiber.modem.ModemTransferReturnLine>} value */
proto.hiber.modem.PrepareModemForReturnRequest.Response.prototype.setModemReturnLinesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.hiber.modem.ModemTransferReturnLine=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hiber.modem.ModemTransferReturnLine}
 */
proto.hiber.modem.PrepareModemForReturnRequest.Response.prototype.addModemReturnLines = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.hiber.modem.ModemTransferReturnLine, opt_index);
};


proto.hiber.modem.PrepareModemForReturnRequest.Response.prototype.clearModemReturnLinesList = function() {
  this.setModemReturnLinesList([]);
};


/**
 * optional string organization = 1;
 * @return {string}
 */
proto.hiber.modem.PrepareModemForReturnRequest.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.modem.PrepareModemForReturnRequest.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string transfer_id = 2;
 * @return {string}
 */
proto.hiber.modem.PrepareModemForReturnRequest.prototype.getTransferId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hiber.modem.PrepareModemForReturnRequest.prototype.setTransferId = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional ModemSelection selection = 3;
 * @return {?proto.hiber.modem.ModemSelection}
 */
proto.hiber.modem.PrepareModemForReturnRequest.prototype.getSelection = function() {
  return /** @type{?proto.hiber.modem.ModemSelection} */ (
    jspb.Message.getWrapperField(this, modem_pb.ModemSelection, 3));
};


/** @param {?proto.hiber.modem.ModemSelection|undefined} value */
proto.hiber.modem.PrepareModemForReturnRequest.prototype.setSelection = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.modem.PrepareModemForReturnRequest.prototype.clearSelection = function() {
  this.setSelection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.PrepareModemForReturnRequest.prototype.hasSelection = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ModemTransferReturnLine.Reason reason = 4;
 * @return {!proto.hiber.modem.ModemTransferReturnLine.Reason}
 */
proto.hiber.modem.PrepareModemForReturnRequest.prototype.getReason = function() {
  return /** @type {!proto.hiber.modem.ModemTransferReturnLine.Reason} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {!proto.hiber.modem.ModemTransferReturnLine.Reason} value */
proto.hiber.modem.PrepareModemForReturnRequest.prototype.setReason = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string comment = 5;
 * @return {string}
 */
proto.hiber.modem.PrepareModemForReturnRequest.prototype.getComment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.hiber.modem.PrepareModemForReturnRequest.prototype.setComment = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional bool replace_previous_comment = 6;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.hiber.modem.PrepareModemForReturnRequest.prototype.getReplacePreviousComment = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, false));
};


/** @param {boolean} value */
proto.hiber.modem.PrepareModemForReturnRequest.prototype.setReplacePreviousComment = function(value) {
  jspb.Message.setField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.DeleteModemTransferReturnLinesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.modem.DeleteModemTransferReturnLinesRequest.repeatedFields_, null);
};
goog.inherits(proto.hiber.modem.DeleteModemTransferReturnLinesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.DeleteModemTransferReturnLinesRequest.displayName = 'proto.hiber.modem.DeleteModemTransferReturnLinesRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.modem.DeleteModemTransferReturnLinesRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.DeleteModemTransferReturnLinesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.DeleteModemTransferReturnLinesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.DeleteModemTransferReturnLinesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.DeleteModemTransferReturnLinesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: jspb.Message.getFieldWithDefault(msg, 1, ""),
    transferId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    modemNumbersList: jspb.Message.getRepeatedField(msg, 3)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.DeleteModemTransferReturnLinesRequest}
 */
proto.hiber.modem.DeleteModemTransferReturnLinesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.DeleteModemTransferReturnLinesRequest;
  return proto.hiber.modem.DeleteModemTransferReturnLinesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.DeleteModemTransferReturnLinesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.DeleteModemTransferReturnLinesRequest}
 */
proto.hiber.modem.DeleteModemTransferReturnLinesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransferId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addModemNumbers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.DeleteModemTransferReturnLinesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.DeleteModemTransferReturnLinesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.DeleteModemTransferReturnLinesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.DeleteModemTransferReturnLinesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTransferId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getModemNumbersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.DeleteModemTransferReturnLinesRequest.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.modem.DeleteModemTransferReturnLinesRequest.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.DeleteModemTransferReturnLinesRequest.Response.displayName = 'proto.hiber.modem.DeleteModemTransferReturnLinesRequest.Response';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.DeleteModemTransferReturnLinesRequest.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.DeleteModemTransferReturnLinesRequest.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.DeleteModemTransferReturnLinesRequest.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.DeleteModemTransferReturnLinesRequest.Response.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.DeleteModemTransferReturnLinesRequest.Response}
 */
proto.hiber.modem.DeleteModemTransferReturnLinesRequest.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.DeleteModemTransferReturnLinesRequest.Response;
  return proto.hiber.modem.DeleteModemTransferReturnLinesRequest.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.DeleteModemTransferReturnLinesRequest.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.DeleteModemTransferReturnLinesRequest.Response}
 */
proto.hiber.modem.DeleteModemTransferReturnLinesRequest.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.DeleteModemTransferReturnLinesRequest.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.DeleteModemTransferReturnLinesRequest.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.DeleteModemTransferReturnLinesRequest.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.DeleteModemTransferReturnLinesRequest.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * optional string organization = 1;
 * @return {string}
 */
proto.hiber.modem.DeleteModemTransferReturnLinesRequest.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.modem.DeleteModemTransferReturnLinesRequest.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string transfer_id = 2;
 * @return {string}
 */
proto.hiber.modem.DeleteModemTransferReturnLinesRequest.prototype.getTransferId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hiber.modem.DeleteModemTransferReturnLinesRequest.prototype.setTransferId = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * repeated string modem_numbers = 3;
 * @return {!Array.<string>}
 */
proto.hiber.modem.DeleteModemTransferReturnLinesRequest.prototype.getModemNumbersList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array.<string>} value */
proto.hiber.modem.DeleteModemTransferReturnLinesRequest.prototype.setModemNumbersList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.hiber.modem.DeleteModemTransferReturnLinesRequest.prototype.addModemNumbers = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.hiber.modem.DeleteModemTransferReturnLinesRequest.prototype.clearModemNumbersList = function() {
  this.setModemNumbersList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.ListModemTransferReturnLinesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.modem.ListModemTransferReturnLinesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.ListModemTransferReturnLinesRequest.displayName = 'proto.hiber.modem.ListModemTransferReturnLinesRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.ListModemTransferReturnLinesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.ListModemTransferReturnLinesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.ListModemTransferReturnLinesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.ListModemTransferReturnLinesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: jspb.Message.getFieldWithDefault(msg, 1, ""),
    selection: (f = msg.getSelection()) && proto.hiber.modem.ModemTransferSelection.toObject(includeInstance, f),
    pagination: (f = msg.getPagination()) && base_pb.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.ListModemTransferReturnLinesRequest}
 */
proto.hiber.modem.ListModemTransferReturnLinesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.ListModemTransferReturnLinesRequest;
  return proto.hiber.modem.ListModemTransferReturnLinesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.ListModemTransferReturnLinesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.ListModemTransferReturnLinesRequest}
 */
proto.hiber.modem.ListModemTransferReturnLinesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 2:
      var value = new proto.hiber.modem.ModemTransferSelection;
      reader.readMessage(value,proto.hiber.modem.ModemTransferSelection.deserializeBinaryFromReader);
      msg.setSelection(value);
      break;
    case 3:
      var value = new base_pb.Pagination;
      reader.readMessage(value,base_pb.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.ListModemTransferReturnLinesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.ListModemTransferReturnLinesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.ListModemTransferReturnLinesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.ListModemTransferReturnLinesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSelection();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.hiber.modem.ModemTransferSelection.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      base_pb.Pagination.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.ListModemTransferReturnLinesRequest.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.modem.ListModemTransferReturnLinesRequest.Response.repeatedFields_, null);
};
goog.inherits(proto.hiber.modem.ListModemTransferReturnLinesRequest.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.ListModemTransferReturnLinesRequest.Response.displayName = 'proto.hiber.modem.ListModemTransferReturnLinesRequest.Response';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.modem.ListModemTransferReturnLinesRequest.Response.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.ListModemTransferReturnLinesRequest.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.ListModemTransferReturnLinesRequest.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.ListModemTransferReturnLinesRequest.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.ListModemTransferReturnLinesRequest.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    request: (f = msg.getRequest()) && proto.hiber.modem.ListModemTransferReturnLinesRequest.toObject(includeInstance, f),
    linesList: jspb.Message.toObjectList(msg.getLinesList(),
    proto.hiber.modem.ModemTransferReturnLine.toObject, includeInstance),
    pagination: (f = msg.getPagination()) && base_pb.Pagination.Result.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.ListModemTransferReturnLinesRequest.Response}
 */
proto.hiber.modem.ListModemTransferReturnLinesRequest.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.ListModemTransferReturnLinesRequest.Response;
  return proto.hiber.modem.ListModemTransferReturnLinesRequest.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.ListModemTransferReturnLinesRequest.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.ListModemTransferReturnLinesRequest.Response}
 */
proto.hiber.modem.ListModemTransferReturnLinesRequest.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.hiber.modem.ListModemTransferReturnLinesRequest;
      reader.readMessage(value,proto.hiber.modem.ListModemTransferReturnLinesRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    case 2:
      var value = new proto.hiber.modem.ModemTransferReturnLine;
      reader.readMessage(value,proto.hiber.modem.ModemTransferReturnLine.deserializeBinaryFromReader);
      msg.addLines(value);
      break;
    case 3:
      var value = new base_pb.Pagination.Result;
      reader.readMessage(value,base_pb.Pagination.Result.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.ListModemTransferReturnLinesRequest.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.ListModemTransferReturnLinesRequest.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.ListModemTransferReturnLinesRequest.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.ListModemTransferReturnLinesRequest.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.hiber.modem.ListModemTransferReturnLinesRequest.serializeBinaryToWriter
    );
  }
  f = message.getLinesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.hiber.modem.ModemTransferReturnLine.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      base_pb.Pagination.Result.serializeBinaryToWriter
    );
  }
};


/**
 * optional ListModemTransferReturnLinesRequest request = 1;
 * @return {?proto.hiber.modem.ListModemTransferReturnLinesRequest}
 */
proto.hiber.modem.ListModemTransferReturnLinesRequest.Response.prototype.getRequest = function() {
  return /** @type{?proto.hiber.modem.ListModemTransferReturnLinesRequest} */ (
    jspb.Message.getWrapperField(this, proto.hiber.modem.ListModemTransferReturnLinesRequest, 1));
};


/** @param {?proto.hiber.modem.ListModemTransferReturnLinesRequest|undefined} value */
proto.hiber.modem.ListModemTransferReturnLinesRequest.Response.prototype.setRequest = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.hiber.modem.ListModemTransferReturnLinesRequest.Response.prototype.clearRequest = function() {
  this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ListModemTransferReturnLinesRequest.Response.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated ModemTransferReturnLine lines = 2;
 * @return {!Array.<!proto.hiber.modem.ModemTransferReturnLine>}
 */
proto.hiber.modem.ListModemTransferReturnLinesRequest.Response.prototype.getLinesList = function() {
  return /** @type{!Array.<!proto.hiber.modem.ModemTransferReturnLine>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.hiber.modem.ModemTransferReturnLine, 2));
};


/** @param {!Array.<!proto.hiber.modem.ModemTransferReturnLine>} value */
proto.hiber.modem.ListModemTransferReturnLinesRequest.Response.prototype.setLinesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.hiber.modem.ModemTransferReturnLine=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hiber.modem.ModemTransferReturnLine}
 */
proto.hiber.modem.ListModemTransferReturnLinesRequest.Response.prototype.addLines = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.hiber.modem.ModemTransferReturnLine, opt_index);
};


proto.hiber.modem.ListModemTransferReturnLinesRequest.Response.prototype.clearLinesList = function() {
  this.setLinesList([]);
};


/**
 * optional hiber.Pagination.Result pagination = 3;
 * @return {?proto.hiber.Pagination.Result}
 */
proto.hiber.modem.ListModemTransferReturnLinesRequest.Response.prototype.getPagination = function() {
  return /** @type{?proto.hiber.Pagination.Result} */ (
    jspb.Message.getWrapperField(this, base_pb.Pagination.Result, 3));
};


/** @param {?proto.hiber.Pagination.Result|undefined} value */
proto.hiber.modem.ListModemTransferReturnLinesRequest.Response.prototype.setPagination = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.modem.ListModemTransferReturnLinesRequest.Response.prototype.clearPagination = function() {
  this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ListModemTransferReturnLinesRequest.Response.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string organization = 1;
 * @return {string}
 */
proto.hiber.modem.ListModemTransferReturnLinesRequest.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.modem.ListModemTransferReturnLinesRequest.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional ModemTransferSelection selection = 2;
 * @return {?proto.hiber.modem.ModemTransferSelection}
 */
proto.hiber.modem.ListModemTransferReturnLinesRequest.prototype.getSelection = function() {
  return /** @type{?proto.hiber.modem.ModemTransferSelection} */ (
    jspb.Message.getWrapperField(this, proto.hiber.modem.ModemTransferSelection, 2));
};


/** @param {?proto.hiber.modem.ModemTransferSelection|undefined} value */
proto.hiber.modem.ListModemTransferReturnLinesRequest.prototype.setSelection = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.modem.ListModemTransferReturnLinesRequest.prototype.clearSelection = function() {
  this.setSelection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ListModemTransferReturnLinesRequest.prototype.hasSelection = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional hiber.Pagination pagination = 3;
 * @return {?proto.hiber.Pagination}
 */
proto.hiber.modem.ListModemTransferReturnLinesRequest.prototype.getPagination = function() {
  return /** @type{?proto.hiber.Pagination} */ (
    jspb.Message.getWrapperField(this, base_pb.Pagination, 3));
};


/** @param {?proto.hiber.Pagination|undefined} value */
proto.hiber.modem.ListModemTransferReturnLinesRequest.prototype.setPagination = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.modem.ListModemTransferReturnLinesRequest.prototype.clearPagination = function() {
  this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.ListModemTransferReturnLinesRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.SendReturnRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.modem.SendReturnRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.SendReturnRequest.displayName = 'proto.hiber.modem.SendReturnRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.SendReturnRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.SendReturnRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.SendReturnRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.SendReturnRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: jspb.Message.getFieldWithDefault(msg, 1, ""),
    selection: (f = msg.getSelection()) && proto.hiber.modem.ModemTransferSelection.toObject(includeInstance, f),
    trackingInformation: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.SendReturnRequest}
 */
proto.hiber.modem.SendReturnRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.SendReturnRequest;
  return proto.hiber.modem.SendReturnRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.SendReturnRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.SendReturnRequest}
 */
proto.hiber.modem.SendReturnRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 2:
      var value = new proto.hiber.modem.ModemTransferSelection;
      reader.readMessage(value,proto.hiber.modem.ModemTransferSelection.deserializeBinaryFromReader);
      msg.setSelection(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTrackingInformation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.SendReturnRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.SendReturnRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.SendReturnRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.SendReturnRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSelection();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.hiber.modem.ModemTransferSelection.serializeBinaryToWriter
    );
  }
  f = message.getTrackingInformation();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.modem.SendReturnRequest.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.modem.SendReturnRequest.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.modem.SendReturnRequest.Response.displayName = 'proto.hiber.modem.SendReturnRequest.Response';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.modem.SendReturnRequest.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.modem.SendReturnRequest.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.modem.SendReturnRequest.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.SendReturnRequest.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    request: (f = msg.getRequest()) && proto.hiber.modem.SendReturnRequest.toObject(includeInstance, f),
    returnTransfer: (f = msg.getReturnTransfer()) && proto.hiber.modem.ModemTransfer.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.modem.SendReturnRequest.Response}
 */
proto.hiber.modem.SendReturnRequest.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.modem.SendReturnRequest.Response;
  return proto.hiber.modem.SendReturnRequest.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.modem.SendReturnRequest.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.modem.SendReturnRequest.Response}
 */
proto.hiber.modem.SendReturnRequest.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.hiber.modem.SendReturnRequest;
      reader.readMessage(value,proto.hiber.modem.SendReturnRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    case 2:
      var value = new proto.hiber.modem.ModemTransfer;
      reader.readMessage(value,proto.hiber.modem.ModemTransfer.deserializeBinaryFromReader);
      msg.setReturnTransfer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.modem.SendReturnRequest.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.modem.SendReturnRequest.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.modem.SendReturnRequest.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.modem.SendReturnRequest.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.hiber.modem.SendReturnRequest.serializeBinaryToWriter
    );
  }
  f = message.getReturnTransfer();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.hiber.modem.ModemTransfer.serializeBinaryToWriter
    );
  }
};


/**
 * optional SendReturnRequest request = 1;
 * @return {?proto.hiber.modem.SendReturnRequest}
 */
proto.hiber.modem.SendReturnRequest.Response.prototype.getRequest = function() {
  return /** @type{?proto.hiber.modem.SendReturnRequest} */ (
    jspb.Message.getWrapperField(this, proto.hiber.modem.SendReturnRequest, 1));
};


/** @param {?proto.hiber.modem.SendReturnRequest|undefined} value */
proto.hiber.modem.SendReturnRequest.Response.prototype.setRequest = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.hiber.modem.SendReturnRequest.Response.prototype.clearRequest = function() {
  this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.SendReturnRequest.Response.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ModemTransfer return_transfer = 2;
 * @return {?proto.hiber.modem.ModemTransfer}
 */
proto.hiber.modem.SendReturnRequest.Response.prototype.getReturnTransfer = function() {
  return /** @type{?proto.hiber.modem.ModemTransfer} */ (
    jspb.Message.getWrapperField(this, proto.hiber.modem.ModemTransfer, 2));
};


/** @param {?proto.hiber.modem.ModemTransfer|undefined} value */
proto.hiber.modem.SendReturnRequest.Response.prototype.setReturnTransfer = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.modem.SendReturnRequest.Response.prototype.clearReturnTransfer = function() {
  this.setReturnTransfer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.SendReturnRequest.Response.prototype.hasReturnTransfer = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string organization = 1;
 * @return {string}
 */
proto.hiber.modem.SendReturnRequest.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.modem.SendReturnRequest.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional ModemTransferSelection selection = 2;
 * @return {?proto.hiber.modem.ModemTransferSelection}
 */
proto.hiber.modem.SendReturnRequest.prototype.getSelection = function() {
  return /** @type{?proto.hiber.modem.ModemTransferSelection} */ (
    jspb.Message.getWrapperField(this, proto.hiber.modem.ModemTransferSelection, 2));
};


/** @param {?proto.hiber.modem.ModemTransferSelection|undefined} value */
proto.hiber.modem.SendReturnRequest.prototype.setSelection = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.modem.SendReturnRequest.prototype.clearSelection = function() {
  this.setSelection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.modem.SendReturnRequest.prototype.hasSelection = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string tracking_information = 3;
 * @return {string}
 */
proto.hiber.modem.SendReturnRequest.prototype.getTrackingInformation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.hiber.modem.SendReturnRequest.prototype.setTrackingInformation = function(value) {
  jspb.Message.setField(this, 3, value);
};


goog.object.extend(exports, proto.hiber.modem);
