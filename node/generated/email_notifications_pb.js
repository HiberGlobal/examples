/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var base_pb = require('./base_pb.js');
goog.object.extend(proto, base_pb);
var tag_pb = require('./tag_pb.js');
goog.object.extend(proto, tag_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.hiber.email.EmailHistorySelection', null, global);
goog.exportSymbol('proto.hiber.email.EmailNotificationHistoryRequest', null, global);
goog.exportSymbol('proto.hiber.email.EmailNotificationHistoryRequest.Response', null, global);
goog.exportSymbol('proto.hiber.email.EmailNotificationHistoryRequest.Response.Email', null, global);
goog.exportSymbol('proto.hiber.email.EmailNotificationPreferences', null, global);
goog.exportSymbol('proto.hiber.email.EmailNotificationPreferences.CustomRecipient', null, global);
goog.exportSymbol('proto.hiber.email.ListEmailNotificationPreferencesRequest', null, global);
goog.exportSymbol('proto.hiber.email.ListEmailNotificationPreferencesRequest.Response', null, global);
goog.exportSymbol('proto.hiber.email.RemoveAllEmailNotificationPreferencesRequest', null, global);
goog.exportSymbol('proto.hiber.email.RemoveAllEmailNotificationPreferencesRequest.Response', null, global);
goog.exportSymbol('proto.hiber.email.UpdateEmailNotificationPreferencesRequest', null, global);
goog.exportSymbol('proto.hiber.email.ViewEmailNotificationPreferencesRequest', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.email.EmailNotificationPreferences = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.hiber.email.EmailNotificationPreferences.oneofGroups_);
};
goog.inherits(proto.hiber.email.EmailNotificationPreferences, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.email.EmailNotificationPreferences.displayName = 'proto.hiber.email.EmailNotificationPreferences';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.hiber.email.EmailNotificationPreferences.oneofGroups_ = [[5,6]];

/**
 * @enum {number}
 */
proto.hiber.email.EmailNotificationPreferences.RecipientCase = {
  RECIPIENT_NOT_SET: 0,
  USER_ID: 5,
  CUSTOM: 6
};

/**
 * @return {proto.hiber.email.EmailNotificationPreferences.RecipientCase}
 */
proto.hiber.email.EmailNotificationPreferences.prototype.getRecipientCase = function() {
  return /** @type {proto.hiber.email.EmailNotificationPreferences.RecipientCase} */(jspb.Message.computeOneofCase(this, proto.hiber.email.EmailNotificationPreferences.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.email.EmailNotificationPreferences.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.email.EmailNotificationPreferences.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.email.EmailNotificationPreferences} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.email.EmailNotificationPreferences.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: jspb.Message.getFieldWithDefault(msg, 1, ""),
    enabledNotifications: (f = msg.getEnabledNotifications()) && base_pb.Filter.Events.toObject(includeInstance, f),
    filterModems: (f = msg.getFilterModems()) && base_pb.Filter.Modems.toObject(includeInstance, f),
    filterTags: (f = msg.getFilterTags()) && base_pb.Filter.Tags.toObject(includeInstance, f),
    userId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    custom: (f = msg.getCustom()) && proto.hiber.email.EmailNotificationPreferences.CustomRecipient.toObject(includeInstance, f),
    active: jspb.Message.getFieldWithDefault(msg, 7, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.email.EmailNotificationPreferences}
 */
proto.hiber.email.EmailNotificationPreferences.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.email.EmailNotificationPreferences;
  return proto.hiber.email.EmailNotificationPreferences.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.email.EmailNotificationPreferences} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.email.EmailNotificationPreferences}
 */
proto.hiber.email.EmailNotificationPreferences.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 2:
      var value = new base_pb.Filter.Events;
      reader.readMessage(value,base_pb.Filter.Events.deserializeBinaryFromReader);
      msg.setEnabledNotifications(value);
      break;
    case 3:
      var value = new base_pb.Filter.Modems;
      reader.readMessage(value,base_pb.Filter.Modems.deserializeBinaryFromReader);
      msg.setFilterModems(value);
      break;
    case 4:
      var value = new base_pb.Filter.Tags;
      reader.readMessage(value,base_pb.Filter.Tags.deserializeBinaryFromReader);
      msg.setFilterTags(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 6:
      var value = new proto.hiber.email.EmailNotificationPreferences.CustomRecipient;
      reader.readMessage(value,proto.hiber.email.EmailNotificationPreferences.CustomRecipient.deserializeBinaryFromReader);
      msg.setCustom(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.email.EmailNotificationPreferences.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.email.EmailNotificationPreferences.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.email.EmailNotificationPreferences} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.email.EmailNotificationPreferences.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEnabledNotifications();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      base_pb.Filter.Events.serializeBinaryToWriter
    );
  }
  f = message.getFilterModems();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      base_pb.Filter.Modems.serializeBinaryToWriter
    );
  }
  f = message.getFilterTags();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      base_pb.Filter.Tags.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCustom();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.hiber.email.EmailNotificationPreferences.CustomRecipient.serializeBinaryToWriter
    );
  }
  f = message.getActive();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.email.EmailNotificationPreferences.CustomRecipient = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.email.EmailNotificationPreferences.CustomRecipient, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.email.EmailNotificationPreferences.CustomRecipient.displayName = 'proto.hiber.email.EmailNotificationPreferences.CustomRecipient';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.email.EmailNotificationPreferences.CustomRecipient.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.email.EmailNotificationPreferences.CustomRecipient.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.email.EmailNotificationPreferences.CustomRecipient} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.email.EmailNotificationPreferences.CustomRecipient.toObject = function(includeInstance, msg) {
  var f, obj = {
    email: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.email.EmailNotificationPreferences.CustomRecipient}
 */
proto.hiber.email.EmailNotificationPreferences.CustomRecipient.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.email.EmailNotificationPreferences.CustomRecipient;
  return proto.hiber.email.EmailNotificationPreferences.CustomRecipient.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.email.EmailNotificationPreferences.CustomRecipient} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.email.EmailNotificationPreferences.CustomRecipient}
 */
proto.hiber.email.EmailNotificationPreferences.CustomRecipient.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.email.EmailNotificationPreferences.CustomRecipient.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.email.EmailNotificationPreferences.CustomRecipient.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.email.EmailNotificationPreferences.CustomRecipient} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.email.EmailNotificationPreferences.CustomRecipient.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string email = 1;
 * @return {string}
 */
proto.hiber.email.EmailNotificationPreferences.CustomRecipient.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.email.EmailNotificationPreferences.CustomRecipient.prototype.setEmail = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.hiber.email.EmailNotificationPreferences.CustomRecipient.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hiber.email.EmailNotificationPreferences.CustomRecipient.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string organization = 1;
 * @return {string}
 */
proto.hiber.email.EmailNotificationPreferences.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.email.EmailNotificationPreferences.prototype.setOrganization = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional hiber.Filter.Events enabled_notifications = 2;
 * @return {?proto.hiber.Filter.Events}
 */
proto.hiber.email.EmailNotificationPreferences.prototype.getEnabledNotifications = function() {
  return /** @type{?proto.hiber.Filter.Events} */ (
    jspb.Message.getWrapperField(this, base_pb.Filter.Events, 2));
};


/** @param {?proto.hiber.Filter.Events|undefined} value */
proto.hiber.email.EmailNotificationPreferences.prototype.setEnabledNotifications = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.email.EmailNotificationPreferences.prototype.clearEnabledNotifications = function() {
  this.setEnabledNotifications(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.hiber.email.EmailNotificationPreferences.prototype.hasEnabledNotifications = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional hiber.Filter.Modems filter_modems = 3;
 * @return {?proto.hiber.Filter.Modems}
 */
proto.hiber.email.EmailNotificationPreferences.prototype.getFilterModems = function() {
  return /** @type{?proto.hiber.Filter.Modems} */ (
    jspb.Message.getWrapperField(this, base_pb.Filter.Modems, 3));
};


/** @param {?proto.hiber.Filter.Modems|undefined} value */
proto.hiber.email.EmailNotificationPreferences.prototype.setFilterModems = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.email.EmailNotificationPreferences.prototype.clearFilterModems = function() {
  this.setFilterModems(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.hiber.email.EmailNotificationPreferences.prototype.hasFilterModems = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional hiber.Filter.Tags filter_tags = 4;
 * @return {?proto.hiber.Filter.Tags}
 */
proto.hiber.email.EmailNotificationPreferences.prototype.getFilterTags = function() {
  return /** @type{?proto.hiber.Filter.Tags} */ (
    jspb.Message.getWrapperField(this, base_pb.Filter.Tags, 4));
};


/** @param {?proto.hiber.Filter.Tags|undefined} value */
proto.hiber.email.EmailNotificationPreferences.prototype.setFilterTags = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.hiber.email.EmailNotificationPreferences.prototype.clearFilterTags = function() {
  this.setFilterTags(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.hiber.email.EmailNotificationPreferences.prototype.hasFilterTags = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string user_id = 5;
 * @return {string}
 */
proto.hiber.email.EmailNotificationPreferences.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.hiber.email.EmailNotificationPreferences.prototype.setUserId = function(value) {
  jspb.Message.setOneofField(this, 5, proto.hiber.email.EmailNotificationPreferences.oneofGroups_[0], value);
};


proto.hiber.email.EmailNotificationPreferences.prototype.clearUserId = function() {
  jspb.Message.setOneofField(this, 5, proto.hiber.email.EmailNotificationPreferences.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.hiber.email.EmailNotificationPreferences.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional CustomRecipient custom = 6;
 * @return {?proto.hiber.email.EmailNotificationPreferences.CustomRecipient}
 */
proto.hiber.email.EmailNotificationPreferences.prototype.getCustom = function() {
  return /** @type{?proto.hiber.email.EmailNotificationPreferences.CustomRecipient} */ (
    jspb.Message.getWrapperField(this, proto.hiber.email.EmailNotificationPreferences.CustomRecipient, 6));
};


/** @param {?proto.hiber.email.EmailNotificationPreferences.CustomRecipient|undefined} value */
proto.hiber.email.EmailNotificationPreferences.prototype.setCustom = function(value) {
  jspb.Message.setOneofWrapperField(this, 6, proto.hiber.email.EmailNotificationPreferences.oneofGroups_[0], value);
};


proto.hiber.email.EmailNotificationPreferences.prototype.clearCustom = function() {
  this.setCustom(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.hiber.email.EmailNotificationPreferences.prototype.hasCustom = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool active = 7;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.hiber.email.EmailNotificationPreferences.prototype.getActive = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 7, false));
};


/** @param {boolean} value */
proto.hiber.email.EmailNotificationPreferences.prototype.setActive = function(value) {
  jspb.Message.setProto3BooleanField(this, 7, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.email.ListEmailNotificationPreferencesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.email.ListEmailNotificationPreferencesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.email.ListEmailNotificationPreferencesRequest.displayName = 'proto.hiber.email.ListEmailNotificationPreferencesRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.email.ListEmailNotificationPreferencesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.email.ListEmailNotificationPreferencesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.email.ListEmailNotificationPreferencesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.email.ListEmailNotificationPreferencesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: jspb.Message.getFieldWithDefault(msg, 1, ""),
    searchEmail: jspb.Message.getFieldWithDefault(msg, 2, ""),
    includePersonalEmailPreferences: jspb.Message.getFieldWithDefault(msg, 3, false),
    pagination: (f = msg.getPagination()) && base_pb.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.email.ListEmailNotificationPreferencesRequest}
 */
proto.hiber.email.ListEmailNotificationPreferencesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.email.ListEmailNotificationPreferencesRequest;
  return proto.hiber.email.ListEmailNotificationPreferencesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.email.ListEmailNotificationPreferencesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.email.ListEmailNotificationPreferencesRequest}
 */
proto.hiber.email.ListEmailNotificationPreferencesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSearchEmail(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludePersonalEmailPreferences(value);
      break;
    case 4:
      var value = new base_pb.Pagination;
      reader.readMessage(value,base_pb.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.email.ListEmailNotificationPreferencesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.email.ListEmailNotificationPreferencesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.email.ListEmailNotificationPreferencesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.email.ListEmailNotificationPreferencesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSearchEmail();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIncludePersonalEmailPreferences();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      base_pb.Pagination.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.email.ListEmailNotificationPreferencesRequest.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.email.ListEmailNotificationPreferencesRequest.Response.repeatedFields_, null);
};
goog.inherits(proto.hiber.email.ListEmailNotificationPreferencesRequest.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.email.ListEmailNotificationPreferencesRequest.Response.displayName = 'proto.hiber.email.ListEmailNotificationPreferencesRequest.Response';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.email.ListEmailNotificationPreferencesRequest.Response.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.email.ListEmailNotificationPreferencesRequest.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.email.ListEmailNotificationPreferencesRequest.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.email.ListEmailNotificationPreferencesRequest.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.email.ListEmailNotificationPreferencesRequest.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    emailPreferencesList: jspb.Message.toObjectList(msg.getEmailPreferencesList(),
    proto.hiber.email.EmailNotificationPreferences.toObject, includeInstance),
    request: (f = msg.getRequest()) && proto.hiber.email.ListEmailNotificationPreferencesRequest.toObject(includeInstance, f),
    pagination: (f = msg.getPagination()) && base_pb.Pagination.Result.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.email.ListEmailNotificationPreferencesRequest.Response}
 */
proto.hiber.email.ListEmailNotificationPreferencesRequest.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.email.ListEmailNotificationPreferencesRequest.Response;
  return proto.hiber.email.ListEmailNotificationPreferencesRequest.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.email.ListEmailNotificationPreferencesRequest.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.email.ListEmailNotificationPreferencesRequest.Response}
 */
proto.hiber.email.ListEmailNotificationPreferencesRequest.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.hiber.email.EmailNotificationPreferences;
      reader.readMessage(value,proto.hiber.email.EmailNotificationPreferences.deserializeBinaryFromReader);
      msg.addEmailPreferences(value);
      break;
    case 2:
      var value = new proto.hiber.email.ListEmailNotificationPreferencesRequest;
      reader.readMessage(value,proto.hiber.email.ListEmailNotificationPreferencesRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    case 3:
      var value = new base_pb.Pagination.Result;
      reader.readMessage(value,base_pb.Pagination.Result.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.email.ListEmailNotificationPreferencesRequest.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.email.ListEmailNotificationPreferencesRequest.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.email.ListEmailNotificationPreferencesRequest.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.email.ListEmailNotificationPreferencesRequest.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEmailPreferencesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.hiber.email.EmailNotificationPreferences.serializeBinaryToWriter
    );
  }
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.hiber.email.ListEmailNotificationPreferencesRequest.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      base_pb.Pagination.Result.serializeBinaryToWriter
    );
  }
};


/**
 * repeated EmailNotificationPreferences email_preferences = 1;
 * @return {!Array<!proto.hiber.email.EmailNotificationPreferences>}
 */
proto.hiber.email.ListEmailNotificationPreferencesRequest.Response.prototype.getEmailPreferencesList = function() {
  return /** @type{!Array<!proto.hiber.email.EmailNotificationPreferences>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.hiber.email.EmailNotificationPreferences, 1));
};


/** @param {!Array<!proto.hiber.email.EmailNotificationPreferences>} value */
proto.hiber.email.ListEmailNotificationPreferencesRequest.Response.prototype.setEmailPreferencesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.hiber.email.EmailNotificationPreferences=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hiber.email.EmailNotificationPreferences}
 */
proto.hiber.email.ListEmailNotificationPreferencesRequest.Response.prototype.addEmailPreferences = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.hiber.email.EmailNotificationPreferences, opt_index);
};


proto.hiber.email.ListEmailNotificationPreferencesRequest.Response.prototype.clearEmailPreferencesList = function() {
  this.setEmailPreferencesList([]);
};


/**
 * optional ListEmailNotificationPreferencesRequest request = 2;
 * @return {?proto.hiber.email.ListEmailNotificationPreferencesRequest}
 */
proto.hiber.email.ListEmailNotificationPreferencesRequest.Response.prototype.getRequest = function() {
  return /** @type{?proto.hiber.email.ListEmailNotificationPreferencesRequest} */ (
    jspb.Message.getWrapperField(this, proto.hiber.email.ListEmailNotificationPreferencesRequest, 2));
};


/** @param {?proto.hiber.email.ListEmailNotificationPreferencesRequest|undefined} value */
proto.hiber.email.ListEmailNotificationPreferencesRequest.Response.prototype.setRequest = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.email.ListEmailNotificationPreferencesRequest.Response.prototype.clearRequest = function() {
  this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.hiber.email.ListEmailNotificationPreferencesRequest.Response.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional hiber.Pagination.Result pagination = 3;
 * @return {?proto.hiber.Pagination.Result}
 */
proto.hiber.email.ListEmailNotificationPreferencesRequest.Response.prototype.getPagination = function() {
  return /** @type{?proto.hiber.Pagination.Result} */ (
    jspb.Message.getWrapperField(this, base_pb.Pagination.Result, 3));
};


/** @param {?proto.hiber.Pagination.Result|undefined} value */
proto.hiber.email.ListEmailNotificationPreferencesRequest.Response.prototype.setPagination = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.email.ListEmailNotificationPreferencesRequest.Response.prototype.clearPagination = function() {
  this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.hiber.email.ListEmailNotificationPreferencesRequest.Response.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string organization = 1;
 * @return {string}
 */
proto.hiber.email.ListEmailNotificationPreferencesRequest.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.email.ListEmailNotificationPreferencesRequest.prototype.setOrganization = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string search_email = 2;
 * @return {string}
 */
proto.hiber.email.ListEmailNotificationPreferencesRequest.prototype.getSearchEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hiber.email.ListEmailNotificationPreferencesRequest.prototype.setSearchEmail = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool include_personal_email_preferences = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.hiber.email.ListEmailNotificationPreferencesRequest.prototype.getIncludePersonalEmailPreferences = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.hiber.email.ListEmailNotificationPreferencesRequest.prototype.setIncludePersonalEmailPreferences = function(value) {
  jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional hiber.Pagination pagination = 4;
 * @return {?proto.hiber.Pagination}
 */
proto.hiber.email.ListEmailNotificationPreferencesRequest.prototype.getPagination = function() {
  return /** @type{?proto.hiber.Pagination} */ (
    jspb.Message.getWrapperField(this, base_pb.Pagination, 4));
};


/** @param {?proto.hiber.Pagination|undefined} value */
proto.hiber.email.ListEmailNotificationPreferencesRequest.prototype.setPagination = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.hiber.email.ListEmailNotificationPreferencesRequest.prototype.clearPagination = function() {
  this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.hiber.email.ListEmailNotificationPreferencesRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.email.ViewEmailNotificationPreferencesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.email.ViewEmailNotificationPreferencesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.email.ViewEmailNotificationPreferencesRequest.displayName = 'proto.hiber.email.ViewEmailNotificationPreferencesRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.email.ViewEmailNotificationPreferencesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.email.ViewEmailNotificationPreferencesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.email.ViewEmailNotificationPreferencesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.email.ViewEmailNotificationPreferencesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: jspb.Message.getFieldWithDefault(msg, 1, ""),
    email: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.email.ViewEmailNotificationPreferencesRequest}
 */
proto.hiber.email.ViewEmailNotificationPreferencesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.email.ViewEmailNotificationPreferencesRequest;
  return proto.hiber.email.ViewEmailNotificationPreferencesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.email.ViewEmailNotificationPreferencesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.email.ViewEmailNotificationPreferencesRequest}
 */
proto.hiber.email.ViewEmailNotificationPreferencesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.email.ViewEmailNotificationPreferencesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.email.ViewEmailNotificationPreferencesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.email.ViewEmailNotificationPreferencesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.email.ViewEmailNotificationPreferencesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string organization = 1;
 * @return {string}
 */
proto.hiber.email.ViewEmailNotificationPreferencesRequest.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.email.ViewEmailNotificationPreferencesRequest.prototype.setOrganization = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string email = 2;
 * @return {string}
 */
proto.hiber.email.ViewEmailNotificationPreferencesRequest.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hiber.email.ViewEmailNotificationPreferencesRequest.prototype.setEmail = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.email.UpdateEmailNotificationPreferencesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.email.UpdateEmailNotificationPreferencesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.email.UpdateEmailNotificationPreferencesRequest.displayName = 'proto.hiber.email.UpdateEmailNotificationPreferencesRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.email.UpdateEmailNotificationPreferencesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.email.UpdateEmailNotificationPreferencesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.email.UpdateEmailNotificationPreferencesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.email.UpdateEmailNotificationPreferencesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: jspb.Message.getFieldWithDefault(msg, 1, ""),
    custom: (f = msg.getCustom()) && proto.hiber.email.EmailNotificationPreferences.CustomRecipient.toObject(includeInstance, f),
    enabledNotifications: (f = msg.getEnabledNotifications()) && base_pb.Filter.Events.Update.toObject(includeInstance, f),
    filterModems: (f = msg.getFilterModems()) && base_pb.Filter.Modems.Update.toObject(includeInstance, f),
    filterTags: (f = msg.getFilterTags()) && base_pb.Filter.Tags.Update.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.email.UpdateEmailNotificationPreferencesRequest}
 */
proto.hiber.email.UpdateEmailNotificationPreferencesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.email.UpdateEmailNotificationPreferencesRequest;
  return proto.hiber.email.UpdateEmailNotificationPreferencesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.email.UpdateEmailNotificationPreferencesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.email.UpdateEmailNotificationPreferencesRequest}
 */
proto.hiber.email.UpdateEmailNotificationPreferencesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 2:
      var value = new proto.hiber.email.EmailNotificationPreferences.CustomRecipient;
      reader.readMessage(value,proto.hiber.email.EmailNotificationPreferences.CustomRecipient.deserializeBinaryFromReader);
      msg.setCustom(value);
      break;
    case 3:
      var value = new base_pb.Filter.Events.Update;
      reader.readMessage(value,base_pb.Filter.Events.Update.deserializeBinaryFromReader);
      msg.setEnabledNotifications(value);
      break;
    case 4:
      var value = new base_pb.Filter.Modems.Update;
      reader.readMessage(value,base_pb.Filter.Modems.Update.deserializeBinaryFromReader);
      msg.setFilterModems(value);
      break;
    case 5:
      var value = new base_pb.Filter.Tags.Update;
      reader.readMessage(value,base_pb.Filter.Tags.Update.deserializeBinaryFromReader);
      msg.setFilterTags(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.email.UpdateEmailNotificationPreferencesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.email.UpdateEmailNotificationPreferencesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.email.UpdateEmailNotificationPreferencesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.email.UpdateEmailNotificationPreferencesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCustom();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.hiber.email.EmailNotificationPreferences.CustomRecipient.serializeBinaryToWriter
    );
  }
  f = message.getEnabledNotifications();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      base_pb.Filter.Events.Update.serializeBinaryToWriter
    );
  }
  f = message.getFilterModems();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      base_pb.Filter.Modems.Update.serializeBinaryToWriter
    );
  }
  f = message.getFilterTags();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      base_pb.Filter.Tags.Update.serializeBinaryToWriter
    );
  }
};


/**
 * optional string organization = 1;
 * @return {string}
 */
proto.hiber.email.UpdateEmailNotificationPreferencesRequest.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.email.UpdateEmailNotificationPreferencesRequest.prototype.setOrganization = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional EmailNotificationPreferences.CustomRecipient custom = 2;
 * @return {?proto.hiber.email.EmailNotificationPreferences.CustomRecipient}
 */
proto.hiber.email.UpdateEmailNotificationPreferencesRequest.prototype.getCustom = function() {
  return /** @type{?proto.hiber.email.EmailNotificationPreferences.CustomRecipient} */ (
    jspb.Message.getWrapperField(this, proto.hiber.email.EmailNotificationPreferences.CustomRecipient, 2));
};


/** @param {?proto.hiber.email.EmailNotificationPreferences.CustomRecipient|undefined} value */
proto.hiber.email.UpdateEmailNotificationPreferencesRequest.prototype.setCustom = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.email.UpdateEmailNotificationPreferencesRequest.prototype.clearCustom = function() {
  this.setCustom(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.hiber.email.UpdateEmailNotificationPreferencesRequest.prototype.hasCustom = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional hiber.Filter.Events.Update enabled_notifications = 3;
 * @return {?proto.hiber.Filter.Events.Update}
 */
proto.hiber.email.UpdateEmailNotificationPreferencesRequest.prototype.getEnabledNotifications = function() {
  return /** @type{?proto.hiber.Filter.Events.Update} */ (
    jspb.Message.getWrapperField(this, base_pb.Filter.Events.Update, 3));
};


/** @param {?proto.hiber.Filter.Events.Update|undefined} value */
proto.hiber.email.UpdateEmailNotificationPreferencesRequest.prototype.setEnabledNotifications = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.email.UpdateEmailNotificationPreferencesRequest.prototype.clearEnabledNotifications = function() {
  this.setEnabledNotifications(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.hiber.email.UpdateEmailNotificationPreferencesRequest.prototype.hasEnabledNotifications = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional hiber.Filter.Modems.Update filter_modems = 4;
 * @return {?proto.hiber.Filter.Modems.Update}
 */
proto.hiber.email.UpdateEmailNotificationPreferencesRequest.prototype.getFilterModems = function() {
  return /** @type{?proto.hiber.Filter.Modems.Update} */ (
    jspb.Message.getWrapperField(this, base_pb.Filter.Modems.Update, 4));
};


/** @param {?proto.hiber.Filter.Modems.Update|undefined} value */
proto.hiber.email.UpdateEmailNotificationPreferencesRequest.prototype.setFilterModems = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.hiber.email.UpdateEmailNotificationPreferencesRequest.prototype.clearFilterModems = function() {
  this.setFilterModems(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.hiber.email.UpdateEmailNotificationPreferencesRequest.prototype.hasFilterModems = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional hiber.Filter.Tags.Update filter_tags = 5;
 * @return {?proto.hiber.Filter.Tags.Update}
 */
proto.hiber.email.UpdateEmailNotificationPreferencesRequest.prototype.getFilterTags = function() {
  return /** @type{?proto.hiber.Filter.Tags.Update} */ (
    jspb.Message.getWrapperField(this, base_pb.Filter.Tags.Update, 5));
};


/** @param {?proto.hiber.Filter.Tags.Update|undefined} value */
proto.hiber.email.UpdateEmailNotificationPreferencesRequest.prototype.setFilterTags = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.hiber.email.UpdateEmailNotificationPreferencesRequest.prototype.clearFilterTags = function() {
  this.setFilterTags(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.hiber.email.UpdateEmailNotificationPreferencesRequest.prototype.hasFilterTags = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.email.RemoveAllEmailNotificationPreferencesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.email.RemoveAllEmailNotificationPreferencesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.email.RemoveAllEmailNotificationPreferencesRequest.displayName = 'proto.hiber.email.RemoveAllEmailNotificationPreferencesRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.email.RemoveAllEmailNotificationPreferencesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.email.RemoveAllEmailNotificationPreferencesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.email.RemoveAllEmailNotificationPreferencesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.email.RemoveAllEmailNotificationPreferencesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: jspb.Message.getFieldWithDefault(msg, 1, ""),
    custom: (f = msg.getCustom()) && proto.hiber.email.EmailNotificationPreferences.CustomRecipient.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.email.RemoveAllEmailNotificationPreferencesRequest}
 */
proto.hiber.email.RemoveAllEmailNotificationPreferencesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.email.RemoveAllEmailNotificationPreferencesRequest;
  return proto.hiber.email.RemoveAllEmailNotificationPreferencesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.email.RemoveAllEmailNotificationPreferencesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.email.RemoveAllEmailNotificationPreferencesRequest}
 */
proto.hiber.email.RemoveAllEmailNotificationPreferencesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 2:
      var value = new proto.hiber.email.EmailNotificationPreferences.CustomRecipient;
      reader.readMessage(value,proto.hiber.email.EmailNotificationPreferences.CustomRecipient.deserializeBinaryFromReader);
      msg.setCustom(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.email.RemoveAllEmailNotificationPreferencesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.email.RemoveAllEmailNotificationPreferencesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.email.RemoveAllEmailNotificationPreferencesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.email.RemoveAllEmailNotificationPreferencesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCustom();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.hiber.email.EmailNotificationPreferences.CustomRecipient.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.email.RemoveAllEmailNotificationPreferencesRequest.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.email.RemoveAllEmailNotificationPreferencesRequest.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.email.RemoveAllEmailNotificationPreferencesRequest.Response.displayName = 'proto.hiber.email.RemoveAllEmailNotificationPreferencesRequest.Response';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.email.RemoveAllEmailNotificationPreferencesRequest.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.email.RemoveAllEmailNotificationPreferencesRequest.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.email.RemoveAllEmailNotificationPreferencesRequest.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.email.RemoveAllEmailNotificationPreferencesRequest.Response.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.email.RemoveAllEmailNotificationPreferencesRequest.Response}
 */
proto.hiber.email.RemoveAllEmailNotificationPreferencesRequest.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.email.RemoveAllEmailNotificationPreferencesRequest.Response;
  return proto.hiber.email.RemoveAllEmailNotificationPreferencesRequest.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.email.RemoveAllEmailNotificationPreferencesRequest.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.email.RemoveAllEmailNotificationPreferencesRequest.Response}
 */
proto.hiber.email.RemoveAllEmailNotificationPreferencesRequest.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.email.RemoveAllEmailNotificationPreferencesRequest.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.email.RemoveAllEmailNotificationPreferencesRequest.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.email.RemoveAllEmailNotificationPreferencesRequest.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.email.RemoveAllEmailNotificationPreferencesRequest.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * optional string organization = 1;
 * @return {string}
 */
proto.hiber.email.RemoveAllEmailNotificationPreferencesRequest.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.email.RemoveAllEmailNotificationPreferencesRequest.prototype.setOrganization = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional EmailNotificationPreferences.CustomRecipient custom = 2;
 * @return {?proto.hiber.email.EmailNotificationPreferences.CustomRecipient}
 */
proto.hiber.email.RemoveAllEmailNotificationPreferencesRequest.prototype.getCustom = function() {
  return /** @type{?proto.hiber.email.EmailNotificationPreferences.CustomRecipient} */ (
    jspb.Message.getWrapperField(this, proto.hiber.email.EmailNotificationPreferences.CustomRecipient, 2));
};


/** @param {?proto.hiber.email.EmailNotificationPreferences.CustomRecipient|undefined} value */
proto.hiber.email.RemoveAllEmailNotificationPreferencesRequest.prototype.setCustom = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.email.RemoveAllEmailNotificationPreferencesRequest.prototype.clearCustom = function() {
  this.setCustom(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.hiber.email.RemoveAllEmailNotificationPreferencesRequest.prototype.hasCustom = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.email.EmailHistorySelection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.email.EmailHistorySelection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.email.EmailHistorySelection.displayName = 'proto.hiber.email.EmailHistorySelection';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.email.EmailHistorySelection.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.email.EmailHistorySelection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.email.EmailHistorySelection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.email.EmailHistorySelection.toObject = function(includeInstance, msg) {
  var f, obj = {
    timeRange: (f = msg.getTimeRange()) && base_pb.TimeRange.toObject(includeInstance, f),
    onlyFailures: jspb.Message.getFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.email.EmailHistorySelection}
 */
proto.hiber.email.EmailHistorySelection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.email.EmailHistorySelection;
  return proto.hiber.email.EmailHistorySelection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.email.EmailHistorySelection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.email.EmailHistorySelection}
 */
proto.hiber.email.EmailHistorySelection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new base_pb.TimeRange;
      reader.readMessage(value,base_pb.TimeRange.deserializeBinaryFromReader);
      msg.setTimeRange(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOnlyFailures(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.email.EmailHistorySelection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.email.EmailHistorySelection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.email.EmailHistorySelection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.email.EmailHistorySelection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimeRange();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      base_pb.TimeRange.serializeBinaryToWriter
    );
  }
  f = message.getOnlyFailures();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional hiber.TimeRange time_range = 1;
 * @return {?proto.hiber.TimeRange}
 */
proto.hiber.email.EmailHistorySelection.prototype.getTimeRange = function() {
  return /** @type{?proto.hiber.TimeRange} */ (
    jspb.Message.getWrapperField(this, base_pb.TimeRange, 1));
};


/** @param {?proto.hiber.TimeRange|undefined} value */
proto.hiber.email.EmailHistorySelection.prototype.setTimeRange = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.hiber.email.EmailHistorySelection.prototype.clearTimeRange = function() {
  this.setTimeRange(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.hiber.email.EmailHistorySelection.prototype.hasTimeRange = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool only_failures = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.hiber.email.EmailHistorySelection.prototype.getOnlyFailures = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.hiber.email.EmailHistorySelection.prototype.setOnlyFailures = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.email.EmailNotificationHistoryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.email.EmailNotificationHistoryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.email.EmailNotificationHistoryRequest.displayName = 'proto.hiber.email.EmailNotificationHistoryRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.email.EmailNotificationHistoryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.email.EmailNotificationHistoryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.email.EmailNotificationHistoryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.email.EmailNotificationHistoryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: jspb.Message.getFieldWithDefault(msg, 1, ""),
    custom: (f = msg.getCustom()) && proto.hiber.email.EmailNotificationPreferences.CustomRecipient.toObject(includeInstance, f),
    selection: (f = msg.getSelection()) && proto.hiber.email.EmailHistorySelection.toObject(includeInstance, f),
    pagination: (f = msg.getPagination()) && base_pb.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.email.EmailNotificationHistoryRequest}
 */
proto.hiber.email.EmailNotificationHistoryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.email.EmailNotificationHistoryRequest;
  return proto.hiber.email.EmailNotificationHistoryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.email.EmailNotificationHistoryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.email.EmailNotificationHistoryRequest}
 */
proto.hiber.email.EmailNotificationHistoryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 2:
      var value = new proto.hiber.email.EmailNotificationPreferences.CustomRecipient;
      reader.readMessage(value,proto.hiber.email.EmailNotificationPreferences.CustomRecipient.deserializeBinaryFromReader);
      msg.setCustom(value);
      break;
    case 3:
      var value = new proto.hiber.email.EmailHistorySelection;
      reader.readMessage(value,proto.hiber.email.EmailHistorySelection.deserializeBinaryFromReader);
      msg.setSelection(value);
      break;
    case 4:
      var value = new base_pb.Pagination;
      reader.readMessage(value,base_pb.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.email.EmailNotificationHistoryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.email.EmailNotificationHistoryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.email.EmailNotificationHistoryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.email.EmailNotificationHistoryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCustom();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.hiber.email.EmailNotificationPreferences.CustomRecipient.serializeBinaryToWriter
    );
  }
  f = message.getSelection();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.hiber.email.EmailHistorySelection.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      base_pb.Pagination.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.email.EmailNotificationHistoryRequest.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.email.EmailNotificationHistoryRequest.Response.repeatedFields_, null);
};
goog.inherits(proto.hiber.email.EmailNotificationHistoryRequest.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.email.EmailNotificationHistoryRequest.Response.displayName = 'proto.hiber.email.EmailNotificationHistoryRequest.Response';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.email.EmailNotificationHistoryRequest.Response.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.email.EmailNotificationHistoryRequest.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.email.EmailNotificationHistoryRequest.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.email.EmailNotificationHistoryRequest.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.email.EmailNotificationHistoryRequest.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    emailsList: jspb.Message.toObjectList(msg.getEmailsList(),
    proto.hiber.email.EmailNotificationHistoryRequest.Response.Email.toObject, includeInstance),
    request: (f = msg.getRequest()) && proto.hiber.email.EmailNotificationHistoryRequest.toObject(includeInstance, f),
    pagination: (f = msg.getPagination()) && base_pb.Pagination.Result.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.email.EmailNotificationHistoryRequest.Response}
 */
proto.hiber.email.EmailNotificationHistoryRequest.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.email.EmailNotificationHistoryRequest.Response;
  return proto.hiber.email.EmailNotificationHistoryRequest.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.email.EmailNotificationHistoryRequest.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.email.EmailNotificationHistoryRequest.Response}
 */
proto.hiber.email.EmailNotificationHistoryRequest.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.hiber.email.EmailNotificationHistoryRequest.Response.Email;
      reader.readMessage(value,proto.hiber.email.EmailNotificationHistoryRequest.Response.Email.deserializeBinaryFromReader);
      msg.addEmails(value);
      break;
    case 2:
      var value = new proto.hiber.email.EmailNotificationHistoryRequest;
      reader.readMessage(value,proto.hiber.email.EmailNotificationHistoryRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    case 3:
      var value = new base_pb.Pagination.Result;
      reader.readMessage(value,base_pb.Pagination.Result.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.email.EmailNotificationHistoryRequest.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.email.EmailNotificationHistoryRequest.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.email.EmailNotificationHistoryRequest.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.email.EmailNotificationHistoryRequest.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEmailsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.hiber.email.EmailNotificationHistoryRequest.Response.Email.serializeBinaryToWriter
    );
  }
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.hiber.email.EmailNotificationHistoryRequest.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      base_pb.Pagination.Result.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.email.EmailNotificationHistoryRequest.Response.Email = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.email.EmailNotificationHistoryRequest.Response.Email, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.email.EmailNotificationHistoryRequest.Response.Email.displayName = 'proto.hiber.email.EmailNotificationHistoryRequest.Response.Email';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.email.EmailNotificationHistoryRequest.Response.Email.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.email.EmailNotificationHistoryRequest.Response.Email.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.email.EmailNotificationHistoryRequest.Response.Email} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.email.EmailNotificationHistoryRequest.Response.Email.toObject = function(includeInstance, msg) {
  var f, obj = {
    time: (f = msg.getTime()) && base_pb.Timestamp.toObject(includeInstance, f),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    successful: jspb.Message.getFieldWithDefault(msg, 4, false),
    error: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.email.EmailNotificationHistoryRequest.Response.Email}
 */
proto.hiber.email.EmailNotificationHistoryRequest.Response.Email.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.email.EmailNotificationHistoryRequest.Response.Email;
  return proto.hiber.email.EmailNotificationHistoryRequest.Response.Email.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.email.EmailNotificationHistoryRequest.Response.Email} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.email.EmailNotificationHistoryRequest.Response.Email}
 */
proto.hiber.email.EmailNotificationHistoryRequest.Response.Email.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new base_pb.Timestamp;
      reader.readMessage(value,base_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTime(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccessful(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.email.EmailNotificationHistoryRequest.Response.Email.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.email.EmailNotificationHistoryRequest.Response.Email.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.email.EmailNotificationHistoryRequest.Response.Email} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.email.EmailNotificationHistoryRequest.Response.Email.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTime();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      base_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSuccessful();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional hiber.Timestamp time = 1;
 * @return {?proto.hiber.Timestamp}
 */
proto.hiber.email.EmailNotificationHistoryRequest.Response.Email.prototype.getTime = function() {
  return /** @type{?proto.hiber.Timestamp} */ (
    jspb.Message.getWrapperField(this, base_pb.Timestamp, 1));
};


/** @param {?proto.hiber.Timestamp|undefined} value */
proto.hiber.email.EmailNotificationHistoryRequest.Response.Email.prototype.setTime = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.hiber.email.EmailNotificationHistoryRequest.Response.Email.prototype.clearTime = function() {
  this.setTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.hiber.email.EmailNotificationHistoryRequest.Response.Email.prototype.hasTime = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.hiber.email.EmailNotificationHistoryRequest.Response.Email.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hiber.email.EmailNotificationHistoryRequest.Response.Email.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool successful = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.hiber.email.EmailNotificationHistoryRequest.Response.Email.prototype.getSuccessful = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.hiber.email.EmailNotificationHistoryRequest.Response.Email.prototype.setSuccessful = function(value) {
  jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional string error = 5;
 * @return {string}
 */
proto.hiber.email.EmailNotificationHistoryRequest.Response.Email.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.hiber.email.EmailNotificationHistoryRequest.Response.Email.prototype.setError = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * repeated Email emails = 1;
 * @return {!Array<!proto.hiber.email.EmailNotificationHistoryRequest.Response.Email>}
 */
proto.hiber.email.EmailNotificationHistoryRequest.Response.prototype.getEmailsList = function() {
  return /** @type{!Array<!proto.hiber.email.EmailNotificationHistoryRequest.Response.Email>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.hiber.email.EmailNotificationHistoryRequest.Response.Email, 1));
};


/** @param {!Array<!proto.hiber.email.EmailNotificationHistoryRequest.Response.Email>} value */
proto.hiber.email.EmailNotificationHistoryRequest.Response.prototype.setEmailsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.hiber.email.EmailNotificationHistoryRequest.Response.Email=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hiber.email.EmailNotificationHistoryRequest.Response.Email}
 */
proto.hiber.email.EmailNotificationHistoryRequest.Response.prototype.addEmails = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.hiber.email.EmailNotificationHistoryRequest.Response.Email, opt_index);
};


proto.hiber.email.EmailNotificationHistoryRequest.Response.prototype.clearEmailsList = function() {
  this.setEmailsList([]);
};


/**
 * optional EmailNotificationHistoryRequest request = 2;
 * @return {?proto.hiber.email.EmailNotificationHistoryRequest}
 */
proto.hiber.email.EmailNotificationHistoryRequest.Response.prototype.getRequest = function() {
  return /** @type{?proto.hiber.email.EmailNotificationHistoryRequest} */ (
    jspb.Message.getWrapperField(this, proto.hiber.email.EmailNotificationHistoryRequest, 2));
};


/** @param {?proto.hiber.email.EmailNotificationHistoryRequest|undefined} value */
proto.hiber.email.EmailNotificationHistoryRequest.Response.prototype.setRequest = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.email.EmailNotificationHistoryRequest.Response.prototype.clearRequest = function() {
  this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.hiber.email.EmailNotificationHistoryRequest.Response.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional hiber.Pagination.Result pagination = 3;
 * @return {?proto.hiber.Pagination.Result}
 */
proto.hiber.email.EmailNotificationHistoryRequest.Response.prototype.getPagination = function() {
  return /** @type{?proto.hiber.Pagination.Result} */ (
    jspb.Message.getWrapperField(this, base_pb.Pagination.Result, 3));
};


/** @param {?proto.hiber.Pagination.Result|undefined} value */
proto.hiber.email.EmailNotificationHistoryRequest.Response.prototype.setPagination = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.email.EmailNotificationHistoryRequest.Response.prototype.clearPagination = function() {
  this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.hiber.email.EmailNotificationHistoryRequest.Response.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string organization = 1;
 * @return {string}
 */
proto.hiber.email.EmailNotificationHistoryRequest.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.email.EmailNotificationHistoryRequest.prototype.setOrganization = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional EmailNotificationPreferences.CustomRecipient custom = 2;
 * @return {?proto.hiber.email.EmailNotificationPreferences.CustomRecipient}
 */
proto.hiber.email.EmailNotificationHistoryRequest.prototype.getCustom = function() {
  return /** @type{?proto.hiber.email.EmailNotificationPreferences.CustomRecipient} */ (
    jspb.Message.getWrapperField(this, proto.hiber.email.EmailNotificationPreferences.CustomRecipient, 2));
};


/** @param {?proto.hiber.email.EmailNotificationPreferences.CustomRecipient|undefined} value */
proto.hiber.email.EmailNotificationHistoryRequest.prototype.setCustom = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.email.EmailNotificationHistoryRequest.prototype.clearCustom = function() {
  this.setCustom(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.hiber.email.EmailNotificationHistoryRequest.prototype.hasCustom = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional EmailHistorySelection selection = 3;
 * @return {?proto.hiber.email.EmailHistorySelection}
 */
proto.hiber.email.EmailNotificationHistoryRequest.prototype.getSelection = function() {
  return /** @type{?proto.hiber.email.EmailHistorySelection} */ (
    jspb.Message.getWrapperField(this, proto.hiber.email.EmailHistorySelection, 3));
};


/** @param {?proto.hiber.email.EmailHistorySelection|undefined} value */
proto.hiber.email.EmailNotificationHistoryRequest.prototype.setSelection = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.email.EmailNotificationHistoryRequest.prototype.clearSelection = function() {
  this.setSelection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.hiber.email.EmailNotificationHistoryRequest.prototype.hasSelection = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional hiber.Pagination pagination = 4;
 * @return {?proto.hiber.Pagination}
 */
proto.hiber.email.EmailNotificationHistoryRequest.prototype.getPagination = function() {
  return /** @type{?proto.hiber.Pagination} */ (
    jspb.Message.getWrapperField(this, base_pb.Pagination, 4));
};


/** @param {?proto.hiber.Pagination|undefined} value */
proto.hiber.email.EmailNotificationHistoryRequest.prototype.setPagination = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.hiber.email.EmailNotificationHistoryRequest.prototype.clearPagination = function() {
  this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.hiber.email.EmailNotificationHistoryRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 4) != null;
};


goog.object.extend(exports, proto.hiber.email);
