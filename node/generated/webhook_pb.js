/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var base_pb = require('./base_pb.js');
var tag_pb = require('./tag_pb.js');
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.exportSymbol('proto.hiber.webhook.CreateWebhookRequest', null, global);
goog.exportSymbol('proto.hiber.webhook.DeleteWebhookRequest', null, global);
goog.exportSymbol('proto.hiber.webhook.DeleteWebhookRequest.Response', null, global);
goog.exportSymbol('proto.hiber.webhook.DisableWebhookRequest', null, global);
goog.exportSymbol('proto.hiber.webhook.EnableWebhookRequest', null, global);
goog.exportSymbol('proto.hiber.webhook.GetWebhookRequest', null, global);
goog.exportSymbol('proto.hiber.webhook.ListWebhooksRequest', null, global);
goog.exportSymbol('proto.hiber.webhook.ListWebhooksRequest.Response', null, global);
goog.exportSymbol('proto.hiber.webhook.UpdateWebhookFilterRequest', null, global);
goog.exportSymbol('proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateEvents', null, global);
goog.exportSymbol('proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateModems', null, global);
goog.exportSymbol('proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateTags', null, global);
goog.exportSymbol('proto.hiber.webhook.UpdateWebhookRequest', null, global);
goog.exportSymbol('proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook', null, global);
goog.exportSymbol('proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateEvents', null, global);
goog.exportSymbol('proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateModems', null, global);
goog.exportSymbol('proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateTags', null, global);
goog.exportSymbol('proto.hiber.webhook.UpdateWebhookTagsRequest', null, global);
goog.exportSymbol('proto.hiber.webhook.UpdateWebhookTagsRequest.Response', null, global);
goog.exportSymbol('proto.hiber.webhook.Webhook', null, global);
goog.exportSymbol('proto.hiber.webhook.Webhook.ContentType', null, global);
goog.exportSymbol('proto.hiber.webhook.Webhook.WebhookData', null, global);
goog.exportSymbol('proto.hiber.webhook.Webhook.WebhookFilters', null, global);
goog.exportSymbol('proto.hiber.webhook.WebhookCall', null, global);
goog.exportSymbol('proto.hiber.webhook.WebhookHistoryRequest', null, global);
goog.exportSymbol('proto.hiber.webhook.WebhookHistoryRequest.Response', null, global);
goog.exportSymbol('proto.hiber.webhook.WebhookHistorySelection', null, global);
goog.exportSymbol('proto.hiber.webhook.WebhookSelection', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.webhook.Webhook = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.webhook.Webhook.repeatedFields_, null);
};
goog.inherits(proto.hiber.webhook.Webhook, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.webhook.Webhook.displayName = 'proto.hiber.webhook.Webhook';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.webhook.Webhook.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.webhook.Webhook.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.webhook.Webhook.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.webhook.Webhook} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.webhook.Webhook.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    organization: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    data: (f = msg.getData()) && proto.hiber.webhook.Webhook.WebhookData.toObject(includeInstance, f),
    filters: (f = msg.getFilters()) && proto.hiber.webhook.Webhook.WebhookFilters.toObject(includeInstance, f),
    tagsList: jspb.Message.toObjectList(msg.getTagsList(),
    tag_pb.Tag.toObject, includeInstance),
    health: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.webhook.Webhook}
 */
proto.hiber.webhook.Webhook.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.webhook.Webhook;
  return proto.hiber.webhook.Webhook.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.webhook.Webhook} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.webhook.Webhook}
 */
proto.hiber.webhook.Webhook.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = new proto.hiber.webhook.Webhook.WebhookData;
      reader.readMessage(value,proto.hiber.webhook.Webhook.WebhookData.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 5:
      var value = new proto.hiber.webhook.Webhook.WebhookFilters;
      reader.readMessage(value,proto.hiber.webhook.Webhook.WebhookFilters.deserializeBinaryFromReader);
      msg.setFilters(value);
      break;
    case 6:
      var value = new tag_pb.Tag;
      reader.readMessage(value,tag_pb.Tag.deserializeBinaryFromReader);
      msg.addTags(value);
      break;
    case 7:
      var value = /** @type {!proto.hiber.Health} */ (reader.readEnum());
      msg.setHealth(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.webhook.Webhook.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.webhook.Webhook.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.webhook.Webhook} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.webhook.Webhook.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.hiber.webhook.Webhook.WebhookData.serializeBinaryToWriter
    );
  }
  f = message.getFilters();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.hiber.webhook.Webhook.WebhookFilters.serializeBinaryToWriter
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      tag_pb.Tag.serializeBinaryToWriter
    );
  }
  f = message.getHealth();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.hiber.webhook.Webhook.ContentType = {
  DEFAULT: 0,
  JSON: 1,
  PROTO: 2
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.webhook.Webhook.WebhookData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.webhook.Webhook.WebhookData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.webhook.Webhook.WebhookData.displayName = 'proto.hiber.webhook.Webhook.WebhookData';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.webhook.Webhook.WebhookData.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.webhook.Webhook.WebhookData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.webhook.Webhook.WebhookData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.webhook.Webhook.WebhookData.toObject = function(includeInstance, msg) {
  var f, obj = {
    url: jspb.Message.getFieldWithDefault(msg, 1, ""),
    secret: jspb.Message.getFieldWithDefault(msg, 2, ""),
    contentType: jspb.Message.getFieldWithDefault(msg, 3, 0),
    disabled: jspb.Message.getFieldWithDefault(msg, 4, false),
    certificateId: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.webhook.Webhook.WebhookData}
 */
proto.hiber.webhook.Webhook.WebhookData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.webhook.Webhook.WebhookData;
  return proto.hiber.webhook.Webhook.WebhookData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.webhook.Webhook.WebhookData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.webhook.Webhook.WebhookData}
 */
proto.hiber.webhook.Webhook.WebhookData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecret(value);
      break;
    case 3:
      var value = /** @type {!proto.hiber.webhook.Webhook.ContentType} */ (reader.readEnum());
      msg.setContentType(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDisabled(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCertificateId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.webhook.Webhook.WebhookData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.webhook.Webhook.WebhookData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.webhook.Webhook.WebhookData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.webhook.Webhook.WebhookData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSecret();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getContentType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getDisabled();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getCertificateId();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
};


/**
 * optional string url = 1;
 * @return {string}
 */
proto.hiber.webhook.Webhook.WebhookData.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.webhook.Webhook.WebhookData.prototype.setUrl = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string secret = 2;
 * @return {string}
 */
proto.hiber.webhook.Webhook.WebhookData.prototype.getSecret = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hiber.webhook.Webhook.WebhookData.prototype.setSecret = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional ContentType content_type = 3;
 * @return {!proto.hiber.webhook.Webhook.ContentType}
 */
proto.hiber.webhook.Webhook.WebhookData.prototype.getContentType = function() {
  return /** @type {!proto.hiber.webhook.Webhook.ContentType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.hiber.webhook.Webhook.ContentType} value */
proto.hiber.webhook.Webhook.WebhookData.prototype.setContentType = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional bool disabled = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.hiber.webhook.Webhook.WebhookData.prototype.getDisabled = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.hiber.webhook.Webhook.WebhookData.prototype.setDisabled = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional int64 certificate_id = 5;
 * @return {number}
 */
proto.hiber.webhook.Webhook.WebhookData.prototype.getCertificateId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.hiber.webhook.Webhook.WebhookData.prototype.setCertificateId = function(value) {
  jspb.Message.setField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.webhook.Webhook.WebhookFilters = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.webhook.Webhook.WebhookFilters, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.webhook.Webhook.WebhookFilters.displayName = 'proto.hiber.webhook.Webhook.WebhookFilters';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.webhook.Webhook.WebhookFilters.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.webhook.Webhook.WebhookFilters.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.webhook.Webhook.WebhookFilters} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.webhook.Webhook.WebhookFilters.toObject = function(includeInstance, msg) {
  var f, obj = {
    eventTypes: (f = msg.getEventTypes()) && base_pb.Filter.Events.toObject(includeInstance, f),
    modemNumbers: (f = msg.getModemNumbers()) && base_pb.Filter.Modems.toObject(includeInstance, f),
    tags: (f = msg.getTags()) && base_pb.Filter.Tags.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.webhook.Webhook.WebhookFilters}
 */
proto.hiber.webhook.Webhook.WebhookFilters.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.webhook.Webhook.WebhookFilters;
  return proto.hiber.webhook.Webhook.WebhookFilters.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.webhook.Webhook.WebhookFilters} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.webhook.Webhook.WebhookFilters}
 */
proto.hiber.webhook.Webhook.WebhookFilters.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new base_pb.Filter.Events;
      reader.readMessage(value,base_pb.Filter.Events.deserializeBinaryFromReader);
      msg.setEventTypes(value);
      break;
    case 2:
      var value = new base_pb.Filter.Modems;
      reader.readMessage(value,base_pb.Filter.Modems.deserializeBinaryFromReader);
      msg.setModemNumbers(value);
      break;
    case 3:
      var value = new base_pb.Filter.Tags;
      reader.readMessage(value,base_pb.Filter.Tags.deserializeBinaryFromReader);
      msg.setTags(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.webhook.Webhook.WebhookFilters.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.webhook.Webhook.WebhookFilters.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.webhook.Webhook.WebhookFilters} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.webhook.Webhook.WebhookFilters.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventTypes();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      base_pb.Filter.Events.serializeBinaryToWriter
    );
  }
  f = message.getModemNumbers();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      base_pb.Filter.Modems.serializeBinaryToWriter
    );
  }
  f = message.getTags();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      base_pb.Filter.Tags.serializeBinaryToWriter
    );
  }
};


/**
 * optional hiber.Filter.Events event_types = 1;
 * @return {?proto.hiber.Filter.Events}
 */
proto.hiber.webhook.Webhook.WebhookFilters.prototype.getEventTypes = function() {
  return /** @type{?proto.hiber.Filter.Events} */ (
    jspb.Message.getWrapperField(this, base_pb.Filter.Events, 1));
};


/** @param {?proto.hiber.Filter.Events|undefined} value */
proto.hiber.webhook.Webhook.WebhookFilters.prototype.setEventTypes = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.hiber.webhook.Webhook.WebhookFilters.prototype.clearEventTypes = function() {
  this.setEventTypes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.webhook.Webhook.WebhookFilters.prototype.hasEventTypes = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional hiber.Filter.Modems modem_numbers = 2;
 * @return {?proto.hiber.Filter.Modems}
 */
proto.hiber.webhook.Webhook.WebhookFilters.prototype.getModemNumbers = function() {
  return /** @type{?proto.hiber.Filter.Modems} */ (
    jspb.Message.getWrapperField(this, base_pb.Filter.Modems, 2));
};


/** @param {?proto.hiber.Filter.Modems|undefined} value */
proto.hiber.webhook.Webhook.WebhookFilters.prototype.setModemNumbers = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.webhook.Webhook.WebhookFilters.prototype.clearModemNumbers = function() {
  this.setModemNumbers(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.webhook.Webhook.WebhookFilters.prototype.hasModemNumbers = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional hiber.Filter.Tags tags = 3;
 * @return {?proto.hiber.Filter.Tags}
 */
proto.hiber.webhook.Webhook.WebhookFilters.prototype.getTags = function() {
  return /** @type{?proto.hiber.Filter.Tags} */ (
    jspb.Message.getWrapperField(this, base_pb.Filter.Tags, 3));
};


/** @param {?proto.hiber.Filter.Tags|undefined} value */
proto.hiber.webhook.Webhook.WebhookFilters.prototype.setTags = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.webhook.Webhook.WebhookFilters.prototype.clearTags = function() {
  this.setTags(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.webhook.Webhook.WebhookFilters.prototype.hasTags = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.hiber.webhook.Webhook.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.hiber.webhook.Webhook.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string organization = 2;
 * @return {string}
 */
proto.hiber.webhook.Webhook.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hiber.webhook.Webhook.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.hiber.webhook.Webhook.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.hiber.webhook.Webhook.prototype.setDescription = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional WebhookData data = 4;
 * @return {?proto.hiber.webhook.Webhook.WebhookData}
 */
proto.hiber.webhook.Webhook.prototype.getData = function() {
  return /** @type{?proto.hiber.webhook.Webhook.WebhookData} */ (
    jspb.Message.getWrapperField(this, proto.hiber.webhook.Webhook.WebhookData, 4));
};


/** @param {?proto.hiber.webhook.Webhook.WebhookData|undefined} value */
proto.hiber.webhook.Webhook.prototype.setData = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.hiber.webhook.Webhook.prototype.clearData = function() {
  this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.webhook.Webhook.prototype.hasData = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional WebhookFilters filters = 5;
 * @return {?proto.hiber.webhook.Webhook.WebhookFilters}
 */
proto.hiber.webhook.Webhook.prototype.getFilters = function() {
  return /** @type{?proto.hiber.webhook.Webhook.WebhookFilters} */ (
    jspb.Message.getWrapperField(this, proto.hiber.webhook.Webhook.WebhookFilters, 5));
};


/** @param {?proto.hiber.webhook.Webhook.WebhookFilters|undefined} value */
proto.hiber.webhook.Webhook.prototype.setFilters = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.hiber.webhook.Webhook.prototype.clearFilters = function() {
  this.setFilters(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.webhook.Webhook.prototype.hasFilters = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated hiber.tag.Tag tags = 6;
 * @return {!Array.<!proto.hiber.tag.Tag>}
 */
proto.hiber.webhook.Webhook.prototype.getTagsList = function() {
  return /** @type{!Array.<!proto.hiber.tag.Tag>} */ (
    jspb.Message.getRepeatedWrapperField(this, tag_pb.Tag, 6));
};


/** @param {!Array.<!proto.hiber.tag.Tag>} value */
proto.hiber.webhook.Webhook.prototype.setTagsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.hiber.tag.Tag=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hiber.tag.Tag}
 */
proto.hiber.webhook.Webhook.prototype.addTags = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.hiber.tag.Tag, opt_index);
};


proto.hiber.webhook.Webhook.prototype.clearTagsList = function() {
  this.setTagsList([]);
};


/**
 * optional hiber.Health health = 7;
 * @return {!proto.hiber.Health}
 */
proto.hiber.webhook.Webhook.prototype.getHealth = function() {
  return /** @type {!proto.hiber.Health} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {!proto.hiber.Health} value */
proto.hiber.webhook.Webhook.prototype.setHealth = function(value) {
  jspb.Message.setField(this, 7, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.webhook.WebhookSelection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.webhook.WebhookSelection.repeatedFields_, null);
};
goog.inherits(proto.hiber.webhook.WebhookSelection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.webhook.WebhookSelection.displayName = 'proto.hiber.webhook.WebhookSelection';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.webhook.WebhookSelection.repeatedFields_ = [5,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.webhook.WebhookSelection.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.webhook.WebhookSelection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.webhook.WebhookSelection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.webhook.WebhookSelection.toObject = function(includeInstance, msg) {
  var f, obj = {
    description: jspb.Message.getFieldWithDefault(msg, 1, ""),
    url: jspb.Message.getFieldWithDefault(msg, 2, ""),
    webhooks: (f = msg.getWebhooks()) && base_pb.Filter.Webhooks.toObject(includeInstance, f),
    tags: (f = msg.getTags()) && tag_pb.TagSelection.toObject(includeInstance, f),
    healthList: jspb.Message.getRepeatedField(msg, 5),
    certificateIdsList: jspb.Message.getRepeatedField(msg, 6)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.webhook.WebhookSelection}
 */
proto.hiber.webhook.WebhookSelection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.webhook.WebhookSelection;
  return proto.hiber.webhook.WebhookSelection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.webhook.WebhookSelection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.webhook.WebhookSelection}
 */
proto.hiber.webhook.WebhookSelection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 3:
      var value = new base_pb.Filter.Webhooks;
      reader.readMessage(value,base_pb.Filter.Webhooks.deserializeBinaryFromReader);
      msg.setWebhooks(value);
      break;
    case 4:
      var value = new tag_pb.TagSelection;
      reader.readMessage(value,tag_pb.TagSelection.deserializeBinaryFromReader);
      msg.setTags(value);
      break;
    case 5:
      var value = /** @type {!Array.<!proto.hiber.Health>} */ (reader.readPackedEnum());
      msg.setHealthList(value);
      break;
    case 6:
      var value = /** @type {!Array.<number>} */ (reader.readPackedInt64());
      msg.setCertificateIdsList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.webhook.WebhookSelection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.webhook.WebhookSelection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.webhook.WebhookSelection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.webhook.WebhookSelection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getWebhooks();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      base_pb.Filter.Webhooks.serializeBinaryToWriter
    );
  }
  f = message.getTags();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      tag_pb.TagSelection.serializeBinaryToWriter
    );
  }
  f = message.getHealthList();
  if (f.length > 0) {
    writer.writePackedEnum(
      5,
      f
    );
  }
  f = message.getCertificateIdsList();
  if (f.length > 0) {
    writer.writePackedInt64(
      6,
      f
    );
  }
};


/**
 * optional string description = 1;
 * @return {string}
 */
proto.hiber.webhook.WebhookSelection.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.webhook.WebhookSelection.prototype.setDescription = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string url = 2;
 * @return {string}
 */
proto.hiber.webhook.WebhookSelection.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hiber.webhook.WebhookSelection.prototype.setUrl = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional hiber.Filter.Webhooks webhooks = 3;
 * @return {?proto.hiber.Filter.Webhooks}
 */
proto.hiber.webhook.WebhookSelection.prototype.getWebhooks = function() {
  return /** @type{?proto.hiber.Filter.Webhooks} */ (
    jspb.Message.getWrapperField(this, base_pb.Filter.Webhooks, 3));
};


/** @param {?proto.hiber.Filter.Webhooks|undefined} value */
proto.hiber.webhook.WebhookSelection.prototype.setWebhooks = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.webhook.WebhookSelection.prototype.clearWebhooks = function() {
  this.setWebhooks(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.webhook.WebhookSelection.prototype.hasWebhooks = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional hiber.tag.TagSelection tags = 4;
 * @return {?proto.hiber.tag.TagSelection}
 */
proto.hiber.webhook.WebhookSelection.prototype.getTags = function() {
  return /** @type{?proto.hiber.tag.TagSelection} */ (
    jspb.Message.getWrapperField(this, tag_pb.TagSelection, 4));
};


/** @param {?proto.hiber.tag.TagSelection|undefined} value */
proto.hiber.webhook.WebhookSelection.prototype.setTags = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.hiber.webhook.WebhookSelection.prototype.clearTags = function() {
  this.setTags(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.webhook.WebhookSelection.prototype.hasTags = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated hiber.Health health = 5;
 * @return {!Array.<!proto.hiber.Health>}
 */
proto.hiber.webhook.WebhookSelection.prototype.getHealthList = function() {
  return /** @type {!Array.<!proto.hiber.Health>} */ (jspb.Message.getRepeatedField(this, 5));
};


/** @param {!Array.<!proto.hiber.Health>} value */
proto.hiber.webhook.WebhookSelection.prototype.setHealthList = function(value) {
  jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {!proto.hiber.Health} value
 * @param {number=} opt_index
 */
proto.hiber.webhook.WebhookSelection.prototype.addHealth = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


proto.hiber.webhook.WebhookSelection.prototype.clearHealthList = function() {
  this.setHealthList([]);
};


/**
 * repeated int64 certificate_ids = 6;
 * @return {!Array.<number>}
 */
proto.hiber.webhook.WebhookSelection.prototype.getCertificateIdsList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedField(this, 6));
};


/** @param {!Array.<number>} value */
proto.hiber.webhook.WebhookSelection.prototype.setCertificateIdsList = function(value) {
  jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.hiber.webhook.WebhookSelection.prototype.addCertificateIds = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


proto.hiber.webhook.WebhookSelection.prototype.clearCertificateIdsList = function() {
  this.setCertificateIdsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.webhook.WebhookCall = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.webhook.WebhookCall, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.webhook.WebhookCall.displayName = 'proto.hiber.webhook.WebhookCall';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.webhook.WebhookCall.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.webhook.WebhookCall.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.webhook.WebhookCall} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.webhook.WebhookCall.toObject = function(includeInstance, msg) {
  var f, obj = {
    time: (f = msg.getTime()) && base_pb.Timestamp.toObject(includeInstance, f),
    url: jspb.Message.getFieldWithDefault(msg, 2, ""),
    headersMap: (f = msg.getHeadersMap()) ? f.toObject(includeInstance, undefined) : [],
    body: msg.getBody_asB64(),
    successful: jspb.Message.getFieldWithDefault(msg, 5, false),
    error: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.webhook.WebhookCall}
 */
proto.hiber.webhook.WebhookCall.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.webhook.WebhookCall;
  return proto.hiber.webhook.WebhookCall.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.webhook.WebhookCall} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.webhook.WebhookCall}
 */
proto.hiber.webhook.WebhookCall.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new base_pb.Timestamp;
      reader.readMessage(value,base_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTime(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 3:
      var value = msg.getHeadersMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString);
         });
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBody(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccessful(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.webhook.WebhookCall.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.webhook.WebhookCall.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.webhook.WebhookCall} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.webhook.WebhookCall.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTime();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      base_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getHeadersMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getBody_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getSuccessful();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional hiber.Timestamp time = 1;
 * @return {?proto.hiber.Timestamp}
 */
proto.hiber.webhook.WebhookCall.prototype.getTime = function() {
  return /** @type{?proto.hiber.Timestamp} */ (
    jspb.Message.getWrapperField(this, base_pb.Timestamp, 1));
};


/** @param {?proto.hiber.Timestamp|undefined} value */
proto.hiber.webhook.WebhookCall.prototype.setTime = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.hiber.webhook.WebhookCall.prototype.clearTime = function() {
  this.setTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.webhook.WebhookCall.prototype.hasTime = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string url = 2;
 * @return {string}
 */
proto.hiber.webhook.WebhookCall.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hiber.webhook.WebhookCall.prototype.setUrl = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * map<string, string> headers = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.hiber.webhook.WebhookCall.prototype.getHeadersMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


proto.hiber.webhook.WebhookCall.prototype.clearHeadersMap = function() {
  this.getHeadersMap().clear();
};


/**
 * optional bytes body = 4;
 * @return {!(string|Uint8Array)}
 */
proto.hiber.webhook.WebhookCall.prototype.getBody = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes body = 4;
 * This is a type-conversion wrapper around `getBody()`
 * @return {string}
 */
proto.hiber.webhook.WebhookCall.prototype.getBody_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBody()));
};


/**
 * optional bytes body = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBody()`
 * @return {!Uint8Array}
 */
proto.hiber.webhook.WebhookCall.prototype.getBody_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBody()));
};


/** @param {!(string|Uint8Array)} value */
proto.hiber.webhook.WebhookCall.prototype.setBody = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional bool successful = 5;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.hiber.webhook.WebhookCall.prototype.getSuccessful = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));
};


/** @param {boolean} value */
proto.hiber.webhook.WebhookCall.prototype.setSuccessful = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional string error = 6;
 * @return {string}
 */
proto.hiber.webhook.WebhookCall.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.hiber.webhook.WebhookCall.prototype.setError = function(value) {
  jspb.Message.setField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.webhook.WebhookHistorySelection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.webhook.WebhookHistorySelection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.webhook.WebhookHistorySelection.displayName = 'proto.hiber.webhook.WebhookHistorySelection';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.webhook.WebhookHistorySelection.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.webhook.WebhookHistorySelection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.webhook.WebhookHistorySelection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.webhook.WebhookHistorySelection.toObject = function(includeInstance, msg) {
  var f, obj = {
    onlyFailures: jspb.Message.getFieldWithDefault(msg, 2, false),
    timeRange: (f = msg.getTimeRange()) && base_pb.TimeRange.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.webhook.WebhookHistorySelection}
 */
proto.hiber.webhook.WebhookHistorySelection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.webhook.WebhookHistorySelection;
  return proto.hiber.webhook.WebhookHistorySelection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.webhook.WebhookHistorySelection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.webhook.WebhookHistorySelection}
 */
proto.hiber.webhook.WebhookHistorySelection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOnlyFailures(value);
      break;
    case 3:
      var value = new base_pb.TimeRange;
      reader.readMessage(value,base_pb.TimeRange.deserializeBinaryFromReader);
      msg.setTimeRange(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.webhook.WebhookHistorySelection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.webhook.WebhookHistorySelection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.webhook.WebhookHistorySelection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.webhook.WebhookHistorySelection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOnlyFailures();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getTimeRange();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      base_pb.TimeRange.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool only_failures = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.hiber.webhook.WebhookHistorySelection.prototype.getOnlyFailures = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.hiber.webhook.WebhookHistorySelection.prototype.setOnlyFailures = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional hiber.TimeRange time_range = 3;
 * @return {?proto.hiber.TimeRange}
 */
proto.hiber.webhook.WebhookHistorySelection.prototype.getTimeRange = function() {
  return /** @type{?proto.hiber.TimeRange} */ (
    jspb.Message.getWrapperField(this, base_pb.TimeRange, 3));
};


/** @param {?proto.hiber.TimeRange|undefined} value */
proto.hiber.webhook.WebhookHistorySelection.prototype.setTimeRange = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.webhook.WebhookHistorySelection.prototype.clearTimeRange = function() {
  this.setTimeRange(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.webhook.WebhookHistorySelection.prototype.hasTimeRange = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.webhook.ListWebhooksRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.webhook.ListWebhooksRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.webhook.ListWebhooksRequest.displayName = 'proto.hiber.webhook.ListWebhooksRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.webhook.ListWebhooksRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.webhook.ListWebhooksRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.webhook.ListWebhooksRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.webhook.ListWebhooksRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: jspb.Message.getFieldWithDefault(msg, 1, ""),
    selection: (f = msg.getSelection()) && proto.hiber.webhook.WebhookSelection.toObject(includeInstance, f),
    pagination: (f = msg.getPagination()) && base_pb.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.webhook.ListWebhooksRequest}
 */
proto.hiber.webhook.ListWebhooksRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.webhook.ListWebhooksRequest;
  return proto.hiber.webhook.ListWebhooksRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.webhook.ListWebhooksRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.webhook.ListWebhooksRequest}
 */
proto.hiber.webhook.ListWebhooksRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 2:
      var value = new proto.hiber.webhook.WebhookSelection;
      reader.readMessage(value,proto.hiber.webhook.WebhookSelection.deserializeBinaryFromReader);
      msg.setSelection(value);
      break;
    case 3:
      var value = new base_pb.Pagination;
      reader.readMessage(value,base_pb.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.webhook.ListWebhooksRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.webhook.ListWebhooksRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.webhook.ListWebhooksRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.webhook.ListWebhooksRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSelection();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.hiber.webhook.WebhookSelection.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      base_pb.Pagination.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.webhook.ListWebhooksRequest.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.webhook.ListWebhooksRequest.Response.repeatedFields_, null);
};
goog.inherits(proto.hiber.webhook.ListWebhooksRequest.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.webhook.ListWebhooksRequest.Response.displayName = 'proto.hiber.webhook.ListWebhooksRequest.Response';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.webhook.ListWebhooksRequest.Response.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.webhook.ListWebhooksRequest.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.webhook.ListWebhooksRequest.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.webhook.ListWebhooksRequest.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.webhook.ListWebhooksRequest.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    webhooksList: jspb.Message.toObjectList(msg.getWebhooksList(),
    proto.hiber.webhook.Webhook.toObject, includeInstance),
    request: (f = msg.getRequest()) && proto.hiber.webhook.ListWebhooksRequest.toObject(includeInstance, f),
    pagination: (f = msg.getPagination()) && base_pb.Pagination.Result.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.webhook.ListWebhooksRequest.Response}
 */
proto.hiber.webhook.ListWebhooksRequest.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.webhook.ListWebhooksRequest.Response;
  return proto.hiber.webhook.ListWebhooksRequest.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.webhook.ListWebhooksRequest.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.webhook.ListWebhooksRequest.Response}
 */
proto.hiber.webhook.ListWebhooksRequest.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.hiber.webhook.Webhook;
      reader.readMessage(value,proto.hiber.webhook.Webhook.deserializeBinaryFromReader);
      msg.addWebhooks(value);
      break;
    case 2:
      var value = new proto.hiber.webhook.ListWebhooksRequest;
      reader.readMessage(value,proto.hiber.webhook.ListWebhooksRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    case 3:
      var value = new base_pb.Pagination.Result;
      reader.readMessage(value,base_pb.Pagination.Result.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.webhook.ListWebhooksRequest.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.webhook.ListWebhooksRequest.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.webhook.ListWebhooksRequest.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.webhook.ListWebhooksRequest.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWebhooksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.hiber.webhook.Webhook.serializeBinaryToWriter
    );
  }
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.hiber.webhook.ListWebhooksRequest.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      base_pb.Pagination.Result.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Webhook webhooks = 1;
 * @return {!Array.<!proto.hiber.webhook.Webhook>}
 */
proto.hiber.webhook.ListWebhooksRequest.Response.prototype.getWebhooksList = function() {
  return /** @type{!Array.<!proto.hiber.webhook.Webhook>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.hiber.webhook.Webhook, 1));
};


/** @param {!Array.<!proto.hiber.webhook.Webhook>} value */
proto.hiber.webhook.ListWebhooksRequest.Response.prototype.setWebhooksList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.hiber.webhook.Webhook=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hiber.webhook.Webhook}
 */
proto.hiber.webhook.ListWebhooksRequest.Response.prototype.addWebhooks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.hiber.webhook.Webhook, opt_index);
};


proto.hiber.webhook.ListWebhooksRequest.Response.prototype.clearWebhooksList = function() {
  this.setWebhooksList([]);
};


/**
 * optional ListWebhooksRequest request = 2;
 * @return {?proto.hiber.webhook.ListWebhooksRequest}
 */
proto.hiber.webhook.ListWebhooksRequest.Response.prototype.getRequest = function() {
  return /** @type{?proto.hiber.webhook.ListWebhooksRequest} */ (
    jspb.Message.getWrapperField(this, proto.hiber.webhook.ListWebhooksRequest, 2));
};


/** @param {?proto.hiber.webhook.ListWebhooksRequest|undefined} value */
proto.hiber.webhook.ListWebhooksRequest.Response.prototype.setRequest = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.webhook.ListWebhooksRequest.Response.prototype.clearRequest = function() {
  this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.webhook.ListWebhooksRequest.Response.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional hiber.Pagination.Result pagination = 3;
 * @return {?proto.hiber.Pagination.Result}
 */
proto.hiber.webhook.ListWebhooksRequest.Response.prototype.getPagination = function() {
  return /** @type{?proto.hiber.Pagination.Result} */ (
    jspb.Message.getWrapperField(this, base_pb.Pagination.Result, 3));
};


/** @param {?proto.hiber.Pagination.Result|undefined} value */
proto.hiber.webhook.ListWebhooksRequest.Response.prototype.setPagination = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.webhook.ListWebhooksRequest.Response.prototype.clearPagination = function() {
  this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.webhook.ListWebhooksRequest.Response.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string organization = 1;
 * @return {string}
 */
proto.hiber.webhook.ListWebhooksRequest.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.webhook.ListWebhooksRequest.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional WebhookSelection selection = 2;
 * @return {?proto.hiber.webhook.WebhookSelection}
 */
proto.hiber.webhook.ListWebhooksRequest.prototype.getSelection = function() {
  return /** @type{?proto.hiber.webhook.WebhookSelection} */ (
    jspb.Message.getWrapperField(this, proto.hiber.webhook.WebhookSelection, 2));
};


/** @param {?proto.hiber.webhook.WebhookSelection|undefined} value */
proto.hiber.webhook.ListWebhooksRequest.prototype.setSelection = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.webhook.ListWebhooksRequest.prototype.clearSelection = function() {
  this.setSelection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.webhook.ListWebhooksRequest.prototype.hasSelection = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional hiber.Pagination pagination = 3;
 * @return {?proto.hiber.Pagination}
 */
proto.hiber.webhook.ListWebhooksRequest.prototype.getPagination = function() {
  return /** @type{?proto.hiber.Pagination} */ (
    jspb.Message.getWrapperField(this, base_pb.Pagination, 3));
};


/** @param {?proto.hiber.Pagination|undefined} value */
proto.hiber.webhook.ListWebhooksRequest.prototype.setPagination = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.webhook.ListWebhooksRequest.prototype.clearPagination = function() {
  this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.webhook.ListWebhooksRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.webhook.WebhookHistoryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.webhook.WebhookHistoryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.webhook.WebhookHistoryRequest.displayName = 'proto.hiber.webhook.WebhookHistoryRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.webhook.WebhookHistoryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.webhook.WebhookHistoryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.webhook.WebhookHistoryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.webhook.WebhookHistoryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: jspb.Message.getFieldWithDefault(msg, 1, ""),
    webhookId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    selection: (f = msg.getSelection()) && proto.hiber.webhook.WebhookHistorySelection.toObject(includeInstance, f),
    pagination: (f = msg.getPagination()) && base_pb.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.webhook.WebhookHistoryRequest}
 */
proto.hiber.webhook.WebhookHistoryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.webhook.WebhookHistoryRequest;
  return proto.hiber.webhook.WebhookHistoryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.webhook.WebhookHistoryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.webhook.WebhookHistoryRequest}
 */
proto.hiber.webhook.WebhookHistoryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setWebhookId(value);
      break;
    case 3:
      var value = new proto.hiber.webhook.WebhookHistorySelection;
      reader.readMessage(value,proto.hiber.webhook.WebhookHistorySelection.deserializeBinaryFromReader);
      msg.setSelection(value);
      break;
    case 4:
      var value = new base_pb.Pagination;
      reader.readMessage(value,base_pb.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.webhook.WebhookHistoryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.webhook.WebhookHistoryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.webhook.WebhookHistoryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.webhook.WebhookHistoryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getWebhookId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getSelection();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.hiber.webhook.WebhookHistorySelection.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      base_pb.Pagination.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.webhook.WebhookHistoryRequest.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.webhook.WebhookHistoryRequest.Response.repeatedFields_, null);
};
goog.inherits(proto.hiber.webhook.WebhookHistoryRequest.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.webhook.WebhookHistoryRequest.Response.displayName = 'proto.hiber.webhook.WebhookHistoryRequest.Response';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.webhook.WebhookHistoryRequest.Response.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.webhook.WebhookHistoryRequest.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.webhook.WebhookHistoryRequest.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.webhook.WebhookHistoryRequest.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.webhook.WebhookHistoryRequest.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    callsList: jspb.Message.toObjectList(msg.getCallsList(),
    proto.hiber.webhook.WebhookCall.toObject, includeInstance),
    request: (f = msg.getRequest()) && proto.hiber.webhook.WebhookHistoryRequest.toObject(includeInstance, f),
    pagination: (f = msg.getPagination()) && base_pb.Pagination.Result.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.webhook.WebhookHistoryRequest.Response}
 */
proto.hiber.webhook.WebhookHistoryRequest.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.webhook.WebhookHistoryRequest.Response;
  return proto.hiber.webhook.WebhookHistoryRequest.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.webhook.WebhookHistoryRequest.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.webhook.WebhookHistoryRequest.Response}
 */
proto.hiber.webhook.WebhookHistoryRequest.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.hiber.webhook.WebhookCall;
      reader.readMessage(value,proto.hiber.webhook.WebhookCall.deserializeBinaryFromReader);
      msg.addCalls(value);
      break;
    case 2:
      var value = new proto.hiber.webhook.WebhookHistoryRequest;
      reader.readMessage(value,proto.hiber.webhook.WebhookHistoryRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    case 3:
      var value = new base_pb.Pagination.Result;
      reader.readMessage(value,base_pb.Pagination.Result.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.webhook.WebhookHistoryRequest.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.webhook.WebhookHistoryRequest.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.webhook.WebhookHistoryRequest.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.webhook.WebhookHistoryRequest.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCallsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.hiber.webhook.WebhookCall.serializeBinaryToWriter
    );
  }
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.hiber.webhook.WebhookHistoryRequest.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      base_pb.Pagination.Result.serializeBinaryToWriter
    );
  }
};


/**
 * repeated WebhookCall calls = 1;
 * @return {!Array.<!proto.hiber.webhook.WebhookCall>}
 */
proto.hiber.webhook.WebhookHistoryRequest.Response.prototype.getCallsList = function() {
  return /** @type{!Array.<!proto.hiber.webhook.WebhookCall>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.hiber.webhook.WebhookCall, 1));
};


/** @param {!Array.<!proto.hiber.webhook.WebhookCall>} value */
proto.hiber.webhook.WebhookHistoryRequest.Response.prototype.setCallsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.hiber.webhook.WebhookCall=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hiber.webhook.WebhookCall}
 */
proto.hiber.webhook.WebhookHistoryRequest.Response.prototype.addCalls = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.hiber.webhook.WebhookCall, opt_index);
};


proto.hiber.webhook.WebhookHistoryRequest.Response.prototype.clearCallsList = function() {
  this.setCallsList([]);
};


/**
 * optional WebhookHistoryRequest request = 2;
 * @return {?proto.hiber.webhook.WebhookHistoryRequest}
 */
proto.hiber.webhook.WebhookHistoryRequest.Response.prototype.getRequest = function() {
  return /** @type{?proto.hiber.webhook.WebhookHistoryRequest} */ (
    jspb.Message.getWrapperField(this, proto.hiber.webhook.WebhookHistoryRequest, 2));
};


/** @param {?proto.hiber.webhook.WebhookHistoryRequest|undefined} value */
proto.hiber.webhook.WebhookHistoryRequest.Response.prototype.setRequest = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.webhook.WebhookHistoryRequest.Response.prototype.clearRequest = function() {
  this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.webhook.WebhookHistoryRequest.Response.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional hiber.Pagination.Result pagination = 3;
 * @return {?proto.hiber.Pagination.Result}
 */
proto.hiber.webhook.WebhookHistoryRequest.Response.prototype.getPagination = function() {
  return /** @type{?proto.hiber.Pagination.Result} */ (
    jspb.Message.getWrapperField(this, base_pb.Pagination.Result, 3));
};


/** @param {?proto.hiber.Pagination.Result|undefined} value */
proto.hiber.webhook.WebhookHistoryRequest.Response.prototype.setPagination = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.webhook.WebhookHistoryRequest.Response.prototype.clearPagination = function() {
  this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.webhook.WebhookHistoryRequest.Response.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string organization = 1;
 * @return {string}
 */
proto.hiber.webhook.WebhookHistoryRequest.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.webhook.WebhookHistoryRequest.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int64 webhook_id = 2;
 * @return {number}
 */
proto.hiber.webhook.WebhookHistoryRequest.prototype.getWebhookId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.hiber.webhook.WebhookHistoryRequest.prototype.setWebhookId = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional WebhookHistorySelection selection = 3;
 * @return {?proto.hiber.webhook.WebhookHistorySelection}
 */
proto.hiber.webhook.WebhookHistoryRequest.prototype.getSelection = function() {
  return /** @type{?proto.hiber.webhook.WebhookHistorySelection} */ (
    jspb.Message.getWrapperField(this, proto.hiber.webhook.WebhookHistorySelection, 3));
};


/** @param {?proto.hiber.webhook.WebhookHistorySelection|undefined} value */
proto.hiber.webhook.WebhookHistoryRequest.prototype.setSelection = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.webhook.WebhookHistoryRequest.prototype.clearSelection = function() {
  this.setSelection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.webhook.WebhookHistoryRequest.prototype.hasSelection = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional hiber.Pagination pagination = 4;
 * @return {?proto.hiber.Pagination}
 */
proto.hiber.webhook.WebhookHistoryRequest.prototype.getPagination = function() {
  return /** @type{?proto.hiber.Pagination} */ (
    jspb.Message.getWrapperField(this, base_pb.Pagination, 4));
};


/** @param {?proto.hiber.Pagination|undefined} value */
proto.hiber.webhook.WebhookHistoryRequest.prototype.setPagination = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.hiber.webhook.WebhookHistoryRequest.prototype.clearPagination = function() {
  this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.webhook.WebhookHistoryRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.webhook.CreateWebhookRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.webhook.CreateWebhookRequest.repeatedFields_, null);
};
goog.inherits(proto.hiber.webhook.CreateWebhookRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.webhook.CreateWebhookRequest.displayName = 'proto.hiber.webhook.CreateWebhookRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.webhook.CreateWebhookRequest.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.webhook.CreateWebhookRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.webhook.CreateWebhookRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.webhook.CreateWebhookRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.webhook.CreateWebhookRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    data: (f = msg.getData()) && proto.hiber.webhook.Webhook.WebhookData.toObject(includeInstance, f),
    filters: (f = msg.getFilters()) && proto.hiber.webhook.Webhook.WebhookFilters.toObject(includeInstance, f),
    tagsList: jspb.Message.getRepeatedField(msg, 5),
    certificateId: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.webhook.CreateWebhookRequest}
 */
proto.hiber.webhook.CreateWebhookRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.webhook.CreateWebhookRequest;
  return proto.hiber.webhook.CreateWebhookRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.webhook.CreateWebhookRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.webhook.CreateWebhookRequest}
 */
proto.hiber.webhook.CreateWebhookRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = new proto.hiber.webhook.Webhook.WebhookData;
      reader.readMessage(value,proto.hiber.webhook.Webhook.WebhookData.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 4:
      var value = new proto.hiber.webhook.Webhook.WebhookFilters;
      reader.readMessage(value,proto.hiber.webhook.Webhook.WebhookFilters.deserializeBinaryFromReader);
      msg.setFilters(value);
      break;
    case 5:
      var value = /** @type {!Array.<number>} */ (reader.readPackedInt64());
      msg.setTagsList(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCertificateId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.webhook.CreateWebhookRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.webhook.CreateWebhookRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.webhook.CreateWebhookRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.webhook.CreateWebhookRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.hiber.webhook.Webhook.WebhookData.serializeBinaryToWriter
    );
  }
  f = message.getFilters();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.hiber.webhook.Webhook.WebhookFilters.serializeBinaryToWriter
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writePackedInt64(
      5,
      f
    );
  }
  f = message.getCertificateId();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
};


/**
 * optional string organization = 1;
 * @return {string}
 */
proto.hiber.webhook.CreateWebhookRequest.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.webhook.CreateWebhookRequest.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.hiber.webhook.CreateWebhookRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hiber.webhook.CreateWebhookRequest.prototype.setDescription = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional Webhook.WebhookData data = 3;
 * @return {?proto.hiber.webhook.Webhook.WebhookData}
 */
proto.hiber.webhook.CreateWebhookRequest.prototype.getData = function() {
  return /** @type{?proto.hiber.webhook.Webhook.WebhookData} */ (
    jspb.Message.getWrapperField(this, proto.hiber.webhook.Webhook.WebhookData, 3));
};


/** @param {?proto.hiber.webhook.Webhook.WebhookData|undefined} value */
proto.hiber.webhook.CreateWebhookRequest.prototype.setData = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.webhook.CreateWebhookRequest.prototype.clearData = function() {
  this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.webhook.CreateWebhookRequest.prototype.hasData = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Webhook.WebhookFilters filters = 4;
 * @return {?proto.hiber.webhook.Webhook.WebhookFilters}
 */
proto.hiber.webhook.CreateWebhookRequest.prototype.getFilters = function() {
  return /** @type{?proto.hiber.webhook.Webhook.WebhookFilters} */ (
    jspb.Message.getWrapperField(this, proto.hiber.webhook.Webhook.WebhookFilters, 4));
};


/** @param {?proto.hiber.webhook.Webhook.WebhookFilters|undefined} value */
proto.hiber.webhook.CreateWebhookRequest.prototype.setFilters = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.hiber.webhook.CreateWebhookRequest.prototype.clearFilters = function() {
  this.setFilters(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.webhook.CreateWebhookRequest.prototype.hasFilters = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated int64 tags = 5;
 * @return {!Array.<number>}
 */
proto.hiber.webhook.CreateWebhookRequest.prototype.getTagsList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedField(this, 5));
};


/** @param {!Array.<number>} value */
proto.hiber.webhook.CreateWebhookRequest.prototype.setTagsList = function(value) {
  jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.hiber.webhook.CreateWebhookRequest.prototype.addTags = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


proto.hiber.webhook.CreateWebhookRequest.prototype.clearTagsList = function() {
  this.setTagsList([]);
};


/**
 * optional int64 certificate_id = 6;
 * @return {number}
 */
proto.hiber.webhook.CreateWebhookRequest.prototype.getCertificateId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.hiber.webhook.CreateWebhookRequest.prototype.setCertificateId = function(value) {
  jspb.Message.setField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.webhook.GetWebhookRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.webhook.GetWebhookRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.webhook.GetWebhookRequest.displayName = 'proto.hiber.webhook.GetWebhookRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.webhook.GetWebhookRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.webhook.GetWebhookRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.webhook.GetWebhookRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.webhook.GetWebhookRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    organization: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.webhook.GetWebhookRequest}
 */
proto.hiber.webhook.GetWebhookRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.webhook.GetWebhookRequest;
  return proto.hiber.webhook.GetWebhookRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.webhook.GetWebhookRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.webhook.GetWebhookRequest}
 */
proto.hiber.webhook.GetWebhookRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.webhook.GetWebhookRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.webhook.GetWebhookRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.webhook.GetWebhookRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.webhook.GetWebhookRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.hiber.webhook.GetWebhookRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.hiber.webhook.GetWebhookRequest.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string organization = 2;
 * @return {string}
 */
proto.hiber.webhook.GetWebhookRequest.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hiber.webhook.GetWebhookRequest.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.webhook.EnableWebhookRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.webhook.EnableWebhookRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.webhook.EnableWebhookRequest.displayName = 'proto.hiber.webhook.EnableWebhookRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.webhook.EnableWebhookRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.webhook.EnableWebhookRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.webhook.EnableWebhookRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.webhook.EnableWebhookRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    organization: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.webhook.EnableWebhookRequest}
 */
proto.hiber.webhook.EnableWebhookRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.webhook.EnableWebhookRequest;
  return proto.hiber.webhook.EnableWebhookRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.webhook.EnableWebhookRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.webhook.EnableWebhookRequest}
 */
proto.hiber.webhook.EnableWebhookRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.webhook.EnableWebhookRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.webhook.EnableWebhookRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.webhook.EnableWebhookRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.webhook.EnableWebhookRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.hiber.webhook.EnableWebhookRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.hiber.webhook.EnableWebhookRequest.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string organization = 2;
 * @return {string}
 */
proto.hiber.webhook.EnableWebhookRequest.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hiber.webhook.EnableWebhookRequest.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.webhook.DisableWebhookRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.webhook.DisableWebhookRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.webhook.DisableWebhookRequest.displayName = 'proto.hiber.webhook.DisableWebhookRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.webhook.DisableWebhookRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.webhook.DisableWebhookRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.webhook.DisableWebhookRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.webhook.DisableWebhookRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    organization: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.webhook.DisableWebhookRequest}
 */
proto.hiber.webhook.DisableWebhookRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.webhook.DisableWebhookRequest;
  return proto.hiber.webhook.DisableWebhookRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.webhook.DisableWebhookRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.webhook.DisableWebhookRequest}
 */
proto.hiber.webhook.DisableWebhookRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.webhook.DisableWebhookRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.webhook.DisableWebhookRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.webhook.DisableWebhookRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.webhook.DisableWebhookRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.hiber.webhook.DisableWebhookRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.hiber.webhook.DisableWebhookRequest.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string organization = 2;
 * @return {string}
 */
proto.hiber.webhook.DisableWebhookRequest.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hiber.webhook.DisableWebhookRequest.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.webhook.UpdateWebhookFilterRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.webhook.UpdateWebhookFilterRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.webhook.UpdateWebhookFilterRequest.displayName = 'proto.hiber.webhook.UpdateWebhookFilterRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.webhook.UpdateWebhookFilterRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.webhook.UpdateWebhookFilterRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.webhook.UpdateWebhookFilterRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.webhook.UpdateWebhookFilterRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    organization: jspb.Message.getFieldWithDefault(msg, 2, ""),
    eventFilter: (f = msg.getEventFilter()) && proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateEvents.toObject(includeInstance, f),
    modemFilter: (f = msg.getModemFilter()) && proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateModems.toObject(includeInstance, f),
    tagFilter: (f = msg.getTagFilter()) && proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateTags.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.webhook.UpdateWebhookFilterRequest}
 */
proto.hiber.webhook.UpdateWebhookFilterRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.webhook.UpdateWebhookFilterRequest;
  return proto.hiber.webhook.UpdateWebhookFilterRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.webhook.UpdateWebhookFilterRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.webhook.UpdateWebhookFilterRequest}
 */
proto.hiber.webhook.UpdateWebhookFilterRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 3:
      var value = new proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateEvents;
      reader.readMessage(value,proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateEvents.deserializeBinaryFromReader);
      msg.setEventFilter(value);
      break;
    case 4:
      var value = new proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateModems;
      reader.readMessage(value,proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateModems.deserializeBinaryFromReader);
      msg.setModemFilter(value);
      break;
    case 5:
      var value = new proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateTags;
      reader.readMessage(value,proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateTags.deserializeBinaryFromReader);
      msg.setTagFilter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.webhook.UpdateWebhookFilterRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.webhook.UpdateWebhookFilterRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.webhook.UpdateWebhookFilterRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.webhook.UpdateWebhookFilterRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEventFilter();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateEvents.serializeBinaryToWriter
    );
  }
  f = message.getModemFilter();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateModems.serializeBinaryToWriter
    );
  }
  f = message.getTagFilter();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateTags.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateEvents = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateEvents, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateEvents.displayName = 'proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateEvents';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateEvents.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateEvents.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateEvents} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateEvents.toObject = function(includeInstance, msg) {
  var f, obj = {
    updated: jspb.Message.getFieldWithDefault(msg, 1, false),
    value: (f = msg.getValue()) && base_pb.Filter.Events.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateEvents}
 */
proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateEvents.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateEvents;
  return proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateEvents.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateEvents} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateEvents}
 */
proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateEvents.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUpdated(value);
      break;
    case 2:
      var value = new base_pb.Filter.Events;
      reader.readMessage(value,base_pb.Filter.Events.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateEvents.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateEvents.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateEvents} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateEvents.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUpdated();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      base_pb.Filter.Events.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool updated = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateEvents.prototype.getUpdated = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateEvents.prototype.setUpdated = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional hiber.Filter.Events value = 2;
 * @return {?proto.hiber.Filter.Events}
 */
proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateEvents.prototype.getValue = function() {
  return /** @type{?proto.hiber.Filter.Events} */ (
    jspb.Message.getWrapperField(this, base_pb.Filter.Events, 2));
};


/** @param {?proto.hiber.Filter.Events|undefined} value */
proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateEvents.prototype.setValue = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateEvents.prototype.clearValue = function() {
  this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateEvents.prototype.hasValue = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateModems = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateModems, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateModems.displayName = 'proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateModems';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateModems.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateModems.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateModems} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateModems.toObject = function(includeInstance, msg) {
  var f, obj = {
    updated: jspb.Message.getFieldWithDefault(msg, 1, false),
    value: (f = msg.getValue()) && base_pb.Filter.Modems.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateModems}
 */
proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateModems.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateModems;
  return proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateModems.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateModems} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateModems}
 */
proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateModems.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUpdated(value);
      break;
    case 2:
      var value = new base_pb.Filter.Modems;
      reader.readMessage(value,base_pb.Filter.Modems.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateModems.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateModems.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateModems} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateModems.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUpdated();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      base_pb.Filter.Modems.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool updated = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateModems.prototype.getUpdated = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateModems.prototype.setUpdated = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional hiber.Filter.Modems value = 2;
 * @return {?proto.hiber.Filter.Modems}
 */
proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateModems.prototype.getValue = function() {
  return /** @type{?proto.hiber.Filter.Modems} */ (
    jspb.Message.getWrapperField(this, base_pb.Filter.Modems, 2));
};


/** @param {?proto.hiber.Filter.Modems|undefined} value */
proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateModems.prototype.setValue = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateModems.prototype.clearValue = function() {
  this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateModems.prototype.hasValue = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateTags = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateTags, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateTags.displayName = 'proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateTags';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateTags.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateTags.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateTags} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateTags.toObject = function(includeInstance, msg) {
  var f, obj = {
    updated: jspb.Message.getFieldWithDefault(msg, 1, false),
    value: (f = msg.getValue()) && base_pb.Filter.Tags.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateTags}
 */
proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateTags.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateTags;
  return proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateTags.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateTags} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateTags}
 */
proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateTags.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUpdated(value);
      break;
    case 2:
      var value = new base_pb.Filter.Tags;
      reader.readMessage(value,base_pb.Filter.Tags.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateTags.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateTags.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateTags} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateTags.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUpdated();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      base_pb.Filter.Tags.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool updated = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateTags.prototype.getUpdated = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateTags.prototype.setUpdated = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional hiber.Filter.Tags value = 2;
 * @return {?proto.hiber.Filter.Tags}
 */
proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateTags.prototype.getValue = function() {
  return /** @type{?proto.hiber.Filter.Tags} */ (
    jspb.Message.getWrapperField(this, base_pb.Filter.Tags, 2));
};


/** @param {?proto.hiber.Filter.Tags|undefined} value */
proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateTags.prototype.setValue = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateTags.prototype.clearValue = function() {
  this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateTags.prototype.hasValue = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.hiber.webhook.UpdateWebhookFilterRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.hiber.webhook.UpdateWebhookFilterRequest.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string organization = 2;
 * @return {string}
 */
proto.hiber.webhook.UpdateWebhookFilterRequest.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hiber.webhook.UpdateWebhookFilterRequest.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional UpdateEvents event_filter = 3;
 * @return {?proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateEvents}
 */
proto.hiber.webhook.UpdateWebhookFilterRequest.prototype.getEventFilter = function() {
  return /** @type{?proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateEvents} */ (
    jspb.Message.getWrapperField(this, proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateEvents, 3));
};


/** @param {?proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateEvents|undefined} value */
proto.hiber.webhook.UpdateWebhookFilterRequest.prototype.setEventFilter = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.webhook.UpdateWebhookFilterRequest.prototype.clearEventFilter = function() {
  this.setEventFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.webhook.UpdateWebhookFilterRequest.prototype.hasEventFilter = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional UpdateModems modem_filter = 4;
 * @return {?proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateModems}
 */
proto.hiber.webhook.UpdateWebhookFilterRequest.prototype.getModemFilter = function() {
  return /** @type{?proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateModems} */ (
    jspb.Message.getWrapperField(this, proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateModems, 4));
};


/** @param {?proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateModems|undefined} value */
proto.hiber.webhook.UpdateWebhookFilterRequest.prototype.setModemFilter = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.hiber.webhook.UpdateWebhookFilterRequest.prototype.clearModemFilter = function() {
  this.setModemFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.webhook.UpdateWebhookFilterRequest.prototype.hasModemFilter = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional UpdateTags tag_filter = 5;
 * @return {?proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateTags}
 */
proto.hiber.webhook.UpdateWebhookFilterRequest.prototype.getTagFilter = function() {
  return /** @type{?proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateTags} */ (
    jspb.Message.getWrapperField(this, proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateTags, 5));
};


/** @param {?proto.hiber.webhook.UpdateWebhookFilterRequest.UpdateTags|undefined} value */
proto.hiber.webhook.UpdateWebhookFilterRequest.prototype.setTagFilter = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.hiber.webhook.UpdateWebhookFilterRequest.prototype.clearTagFilter = function() {
  this.setTagFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.webhook.UpdateWebhookFilterRequest.prototype.hasTagFilter = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.webhook.UpdateWebhookRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.webhook.UpdateWebhookRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.webhook.UpdateWebhookRequest.displayName = 'proto.hiber.webhook.UpdateWebhookRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.webhook.UpdateWebhookRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.webhook.UpdateWebhookRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.webhook.UpdateWebhookRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.webhook.UpdateWebhookRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    organization: jspb.Message.getFieldWithDefault(msg, 2, ""),
    update: (f = msg.getUpdate()) && proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.webhook.UpdateWebhookRequest}
 */
proto.hiber.webhook.UpdateWebhookRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.webhook.UpdateWebhookRequest;
  return proto.hiber.webhook.UpdateWebhookRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.webhook.UpdateWebhookRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.webhook.UpdateWebhookRequest}
 */
proto.hiber.webhook.UpdateWebhookRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 3:
      var value = new proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook;
      reader.readMessage(value,proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.deserializeBinaryFromReader);
      msg.setUpdate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.webhook.UpdateWebhookRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.webhook.UpdateWebhookRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.webhook.UpdateWebhookRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.webhook.UpdateWebhookRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUpdate();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.displayName = 'proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.toObject = function(includeInstance, msg) {
  var f, obj = {
    url: jspb.Message.getFieldWithDefault(msg, 1, ""),
    secret: (f = msg.getSecret()) && base_pb.UpdateClearableString.toObject(includeInstance, f),
    contentType: jspb.Message.getFieldWithDefault(msg, 3, 0),
    description: (f = msg.getDescription()) && base_pb.UpdateClearableString.toObject(includeInstance, f),
    eventFilter: (f = msg.getEventFilter()) && proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateEvents.toObject(includeInstance, f),
    modemFilter: (f = msg.getModemFilter()) && proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateModems.toObject(includeInstance, f),
    tagFilter: (f = msg.getTagFilter()) && proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateTags.toObject(includeInstance, f),
    active: (f = msg.getActive()) && base_pb.UpdateBoolean.toObject(includeInstance, f),
    certificateId: (f = msg.getCertificateId()) && base_pb.UpdateOptionalId.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook}
 */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook;
  return proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook}
 */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 2:
      var value = new base_pb.UpdateClearableString;
      reader.readMessage(value,base_pb.UpdateClearableString.deserializeBinaryFromReader);
      msg.setSecret(value);
      break;
    case 3:
      var value = /** @type {!proto.hiber.webhook.Webhook.ContentType} */ (reader.readEnum());
      msg.setContentType(value);
      break;
    case 4:
      var value = new base_pb.UpdateClearableString;
      reader.readMessage(value,base_pb.UpdateClearableString.deserializeBinaryFromReader);
      msg.setDescription(value);
      break;
    case 5:
      var value = new proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateEvents;
      reader.readMessage(value,proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateEvents.deserializeBinaryFromReader);
      msg.setEventFilter(value);
      break;
    case 6:
      var value = new proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateModems;
      reader.readMessage(value,proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateModems.deserializeBinaryFromReader);
      msg.setModemFilter(value);
      break;
    case 7:
      var value = new proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateTags;
      reader.readMessage(value,proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateTags.deserializeBinaryFromReader);
      msg.setTagFilter(value);
      break;
    case 8:
      var value = new base_pb.UpdateBoolean;
      reader.readMessage(value,base_pb.UpdateBoolean.deserializeBinaryFromReader);
      msg.setActive(value);
      break;
    case 9:
      var value = new base_pb.UpdateOptionalId;
      reader.readMessage(value,base_pb.UpdateOptionalId.deserializeBinaryFromReader);
      msg.setCertificateId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSecret();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      base_pb.UpdateClearableString.serializeBinaryToWriter
    );
  }
  f = message.getContentType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      base_pb.UpdateClearableString.serializeBinaryToWriter
    );
  }
  f = message.getEventFilter();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateEvents.serializeBinaryToWriter
    );
  }
  f = message.getModemFilter();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateModems.serializeBinaryToWriter
    );
  }
  f = message.getTagFilter();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateTags.serializeBinaryToWriter
    );
  }
  f = message.getActive();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      base_pb.UpdateBoolean.serializeBinaryToWriter
    );
  }
  f = message.getCertificateId();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      base_pb.UpdateOptionalId.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateEvents = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateEvents, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateEvents.displayName = 'proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateEvents';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateEvents.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateEvents.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateEvents} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateEvents.toObject = function(includeInstance, msg) {
  var f, obj = {
    updated: jspb.Message.getFieldWithDefault(msg, 1, false),
    value: (f = msg.getValue()) && base_pb.Filter.Events.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateEvents}
 */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateEvents.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateEvents;
  return proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateEvents.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateEvents} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateEvents}
 */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateEvents.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUpdated(value);
      break;
    case 2:
      var value = new base_pb.Filter.Events;
      reader.readMessage(value,base_pb.Filter.Events.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateEvents.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateEvents.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateEvents} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateEvents.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUpdated();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      base_pb.Filter.Events.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool updated = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateEvents.prototype.getUpdated = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateEvents.prototype.setUpdated = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional hiber.Filter.Events value = 2;
 * @return {?proto.hiber.Filter.Events}
 */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateEvents.prototype.getValue = function() {
  return /** @type{?proto.hiber.Filter.Events} */ (
    jspb.Message.getWrapperField(this, base_pb.Filter.Events, 2));
};


/** @param {?proto.hiber.Filter.Events|undefined} value */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateEvents.prototype.setValue = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateEvents.prototype.clearValue = function() {
  this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateEvents.prototype.hasValue = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateModems = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateModems, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateModems.displayName = 'proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateModems';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateModems.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateModems.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateModems} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateModems.toObject = function(includeInstance, msg) {
  var f, obj = {
    updated: jspb.Message.getFieldWithDefault(msg, 1, false),
    value: (f = msg.getValue()) && base_pb.Filter.Modems.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateModems}
 */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateModems.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateModems;
  return proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateModems.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateModems} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateModems}
 */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateModems.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUpdated(value);
      break;
    case 2:
      var value = new base_pb.Filter.Modems;
      reader.readMessage(value,base_pb.Filter.Modems.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateModems.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateModems.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateModems} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateModems.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUpdated();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      base_pb.Filter.Modems.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool updated = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateModems.prototype.getUpdated = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateModems.prototype.setUpdated = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional hiber.Filter.Modems value = 2;
 * @return {?proto.hiber.Filter.Modems}
 */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateModems.prototype.getValue = function() {
  return /** @type{?proto.hiber.Filter.Modems} */ (
    jspb.Message.getWrapperField(this, base_pb.Filter.Modems, 2));
};


/** @param {?proto.hiber.Filter.Modems|undefined} value */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateModems.prototype.setValue = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateModems.prototype.clearValue = function() {
  this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateModems.prototype.hasValue = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateTags = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateTags, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateTags.displayName = 'proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateTags';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateTags.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateTags.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateTags} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateTags.toObject = function(includeInstance, msg) {
  var f, obj = {
    updated: jspb.Message.getFieldWithDefault(msg, 1, false),
    value: (f = msg.getValue()) && base_pb.Filter.Tags.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateTags}
 */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateTags.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateTags;
  return proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateTags.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateTags} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateTags}
 */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateTags.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUpdated(value);
      break;
    case 2:
      var value = new base_pb.Filter.Tags;
      reader.readMessage(value,base_pb.Filter.Tags.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateTags.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateTags.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateTags} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateTags.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUpdated();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      base_pb.Filter.Tags.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool updated = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateTags.prototype.getUpdated = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateTags.prototype.setUpdated = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional hiber.Filter.Tags value = 2;
 * @return {?proto.hiber.Filter.Tags}
 */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateTags.prototype.getValue = function() {
  return /** @type{?proto.hiber.Filter.Tags} */ (
    jspb.Message.getWrapperField(this, base_pb.Filter.Tags, 2));
};


/** @param {?proto.hiber.Filter.Tags|undefined} value */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateTags.prototype.setValue = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateTags.prototype.clearValue = function() {
  this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateTags.prototype.hasValue = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string url = 1;
 * @return {string}
 */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.prototype.setUrl = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional hiber.UpdateClearableString secret = 2;
 * @return {?proto.hiber.UpdateClearableString}
 */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.prototype.getSecret = function() {
  return /** @type{?proto.hiber.UpdateClearableString} */ (
    jspb.Message.getWrapperField(this, base_pb.UpdateClearableString, 2));
};


/** @param {?proto.hiber.UpdateClearableString|undefined} value */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.prototype.setSecret = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.prototype.clearSecret = function() {
  this.setSecret(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.prototype.hasSecret = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Webhook.ContentType content_type = 3;
 * @return {!proto.hiber.webhook.Webhook.ContentType}
 */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.prototype.getContentType = function() {
  return /** @type {!proto.hiber.webhook.Webhook.ContentType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.hiber.webhook.Webhook.ContentType} value */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.prototype.setContentType = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional hiber.UpdateClearableString description = 4;
 * @return {?proto.hiber.UpdateClearableString}
 */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.prototype.getDescription = function() {
  return /** @type{?proto.hiber.UpdateClearableString} */ (
    jspb.Message.getWrapperField(this, base_pb.UpdateClearableString, 4));
};


/** @param {?proto.hiber.UpdateClearableString|undefined} value */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.prototype.setDescription = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.prototype.clearDescription = function() {
  this.setDescription(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional UpdateEvents event_filter = 5;
 * @return {?proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateEvents}
 */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.prototype.getEventFilter = function() {
  return /** @type{?proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateEvents} */ (
    jspb.Message.getWrapperField(this, proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateEvents, 5));
};


/** @param {?proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateEvents|undefined} value */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.prototype.setEventFilter = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.prototype.clearEventFilter = function() {
  this.setEventFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.prototype.hasEventFilter = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional UpdateModems modem_filter = 6;
 * @return {?proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateModems}
 */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.prototype.getModemFilter = function() {
  return /** @type{?proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateModems} */ (
    jspb.Message.getWrapperField(this, proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateModems, 6));
};


/** @param {?proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateModems|undefined} value */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.prototype.setModemFilter = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.prototype.clearModemFilter = function() {
  this.setModemFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.prototype.hasModemFilter = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional UpdateTags tag_filter = 7;
 * @return {?proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateTags}
 */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.prototype.getTagFilter = function() {
  return /** @type{?proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateTags} */ (
    jspb.Message.getWrapperField(this, proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateTags, 7));
};


/** @param {?proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.UpdateTags|undefined} value */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.prototype.setTagFilter = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.prototype.clearTagFilter = function() {
  this.setTagFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.prototype.hasTagFilter = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional hiber.UpdateBoolean active = 8;
 * @return {?proto.hiber.UpdateBoolean}
 */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.prototype.getActive = function() {
  return /** @type{?proto.hiber.UpdateBoolean} */ (
    jspb.Message.getWrapperField(this, base_pb.UpdateBoolean, 8));
};


/** @param {?proto.hiber.UpdateBoolean|undefined} value */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.prototype.setActive = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.prototype.clearActive = function() {
  this.setActive(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.prototype.hasActive = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional hiber.UpdateOptionalId certificate_id = 9;
 * @return {?proto.hiber.UpdateOptionalId}
 */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.prototype.getCertificateId = function() {
  return /** @type{?proto.hiber.UpdateOptionalId} */ (
    jspb.Message.getWrapperField(this, base_pb.UpdateOptionalId, 9));
};


/** @param {?proto.hiber.UpdateOptionalId|undefined} value */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.prototype.setCertificateId = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.prototype.clearCertificateId = function() {
  this.setCertificateId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook.prototype.hasCertificateId = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.hiber.webhook.UpdateWebhookRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.hiber.webhook.UpdateWebhookRequest.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string organization = 2;
 * @return {string}
 */
proto.hiber.webhook.UpdateWebhookRequest.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hiber.webhook.UpdateWebhookRequest.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional UpdateWebhook update = 3;
 * @return {?proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook}
 */
proto.hiber.webhook.UpdateWebhookRequest.prototype.getUpdate = function() {
  return /** @type{?proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook} */ (
    jspb.Message.getWrapperField(this, proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook, 3));
};


/** @param {?proto.hiber.webhook.UpdateWebhookRequest.UpdateWebhook|undefined} value */
proto.hiber.webhook.UpdateWebhookRequest.prototype.setUpdate = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.webhook.UpdateWebhookRequest.prototype.clearUpdate = function() {
  this.setUpdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.webhook.UpdateWebhookRequest.prototype.hasUpdate = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.webhook.UpdateWebhookTagsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.webhook.UpdateWebhookTagsRequest.repeatedFields_, null);
};
goog.inherits(proto.hiber.webhook.UpdateWebhookTagsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.webhook.UpdateWebhookTagsRequest.displayName = 'proto.hiber.webhook.UpdateWebhookTagsRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.webhook.UpdateWebhookTagsRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.webhook.UpdateWebhookTagsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.webhook.UpdateWebhookTagsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.webhook.UpdateWebhookTagsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.webhook.UpdateWebhookTagsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: jspb.Message.getFieldWithDefault(msg, 1, ""),
    webhookIdsList: jspb.Message.getRepeatedField(msg, 2),
    update: (f = msg.getUpdate()) && tag_pb.UpdateTagsForItem.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.webhook.UpdateWebhookTagsRequest}
 */
proto.hiber.webhook.UpdateWebhookTagsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.webhook.UpdateWebhookTagsRequest;
  return proto.hiber.webhook.UpdateWebhookTagsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.webhook.UpdateWebhookTagsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.webhook.UpdateWebhookTagsRequest}
 */
proto.hiber.webhook.UpdateWebhookTagsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 2:
      var value = /** @type {!Array.<number>} */ (reader.readPackedInt64());
      msg.setWebhookIdsList(value);
      break;
    case 3:
      var value = new tag_pb.UpdateTagsForItem;
      reader.readMessage(value,tag_pb.UpdateTagsForItem.deserializeBinaryFromReader);
      msg.setUpdate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.webhook.UpdateWebhookTagsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.webhook.UpdateWebhookTagsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.webhook.UpdateWebhookTagsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.webhook.UpdateWebhookTagsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getWebhookIdsList();
  if (f.length > 0) {
    writer.writePackedInt64(
      2,
      f
    );
  }
  f = message.getUpdate();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      tag_pb.UpdateTagsForItem.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.webhook.UpdateWebhookTagsRequest.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.webhook.UpdateWebhookTagsRequest.Response.repeatedFields_, null);
};
goog.inherits(proto.hiber.webhook.UpdateWebhookTagsRequest.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.webhook.UpdateWebhookTagsRequest.Response.displayName = 'proto.hiber.webhook.UpdateWebhookTagsRequest.Response';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.webhook.UpdateWebhookTagsRequest.Response.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.webhook.UpdateWebhookTagsRequest.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.webhook.UpdateWebhookTagsRequest.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.webhook.UpdateWebhookTagsRequest.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.webhook.UpdateWebhookTagsRequest.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    webhooksList: jspb.Message.toObjectList(msg.getWebhooksList(),
    proto.hiber.webhook.Webhook.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.webhook.UpdateWebhookTagsRequest.Response}
 */
proto.hiber.webhook.UpdateWebhookTagsRequest.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.webhook.UpdateWebhookTagsRequest.Response;
  return proto.hiber.webhook.UpdateWebhookTagsRequest.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.webhook.UpdateWebhookTagsRequest.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.webhook.UpdateWebhookTagsRequest.Response}
 */
proto.hiber.webhook.UpdateWebhookTagsRequest.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.hiber.webhook.Webhook;
      reader.readMessage(value,proto.hiber.webhook.Webhook.deserializeBinaryFromReader);
      msg.addWebhooks(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.webhook.UpdateWebhookTagsRequest.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.webhook.UpdateWebhookTagsRequest.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.webhook.UpdateWebhookTagsRequest.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.webhook.UpdateWebhookTagsRequest.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWebhooksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.hiber.webhook.Webhook.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Webhook webhooks = 1;
 * @return {!Array.<!proto.hiber.webhook.Webhook>}
 */
proto.hiber.webhook.UpdateWebhookTagsRequest.Response.prototype.getWebhooksList = function() {
  return /** @type{!Array.<!proto.hiber.webhook.Webhook>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.hiber.webhook.Webhook, 1));
};


/** @param {!Array.<!proto.hiber.webhook.Webhook>} value */
proto.hiber.webhook.UpdateWebhookTagsRequest.Response.prototype.setWebhooksList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.hiber.webhook.Webhook=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hiber.webhook.Webhook}
 */
proto.hiber.webhook.UpdateWebhookTagsRequest.Response.prototype.addWebhooks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.hiber.webhook.Webhook, opt_index);
};


proto.hiber.webhook.UpdateWebhookTagsRequest.Response.prototype.clearWebhooksList = function() {
  this.setWebhooksList([]);
};


/**
 * optional string organization = 1;
 * @return {string}
 */
proto.hiber.webhook.UpdateWebhookTagsRequest.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.webhook.UpdateWebhookTagsRequest.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * repeated int64 webhook_ids = 2;
 * @return {!Array.<number>}
 */
proto.hiber.webhook.UpdateWebhookTagsRequest.prototype.getWebhookIdsList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array.<number>} value */
proto.hiber.webhook.UpdateWebhookTagsRequest.prototype.setWebhookIdsList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.hiber.webhook.UpdateWebhookTagsRequest.prototype.addWebhookIds = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.hiber.webhook.UpdateWebhookTagsRequest.prototype.clearWebhookIdsList = function() {
  this.setWebhookIdsList([]);
};


/**
 * optional hiber.tag.UpdateTagsForItem update = 3;
 * @return {?proto.hiber.tag.UpdateTagsForItem}
 */
proto.hiber.webhook.UpdateWebhookTagsRequest.prototype.getUpdate = function() {
  return /** @type{?proto.hiber.tag.UpdateTagsForItem} */ (
    jspb.Message.getWrapperField(this, tag_pb.UpdateTagsForItem, 3));
};


/** @param {?proto.hiber.tag.UpdateTagsForItem|undefined} value */
proto.hiber.webhook.UpdateWebhookTagsRequest.prototype.setUpdate = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.webhook.UpdateWebhookTagsRequest.prototype.clearUpdate = function() {
  this.setUpdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.webhook.UpdateWebhookTagsRequest.prototype.hasUpdate = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.webhook.DeleteWebhookRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.webhook.DeleteWebhookRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.webhook.DeleteWebhookRequest.displayName = 'proto.hiber.webhook.DeleteWebhookRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.webhook.DeleteWebhookRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.webhook.DeleteWebhookRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.webhook.DeleteWebhookRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.webhook.DeleteWebhookRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    organization: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.webhook.DeleteWebhookRequest}
 */
proto.hiber.webhook.DeleteWebhookRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.webhook.DeleteWebhookRequest;
  return proto.hiber.webhook.DeleteWebhookRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.webhook.DeleteWebhookRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.webhook.DeleteWebhookRequest}
 */
proto.hiber.webhook.DeleteWebhookRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.webhook.DeleteWebhookRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.webhook.DeleteWebhookRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.webhook.DeleteWebhookRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.webhook.DeleteWebhookRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.webhook.DeleteWebhookRequest.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.webhook.DeleteWebhookRequest.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.webhook.DeleteWebhookRequest.Response.displayName = 'proto.hiber.webhook.DeleteWebhookRequest.Response';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.webhook.DeleteWebhookRequest.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.webhook.DeleteWebhookRequest.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.webhook.DeleteWebhookRequest.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.webhook.DeleteWebhookRequest.Response.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.webhook.DeleteWebhookRequest.Response}
 */
proto.hiber.webhook.DeleteWebhookRequest.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.webhook.DeleteWebhookRequest.Response;
  return proto.hiber.webhook.DeleteWebhookRequest.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.webhook.DeleteWebhookRequest.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.webhook.DeleteWebhookRequest.Response}
 */
proto.hiber.webhook.DeleteWebhookRequest.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.webhook.DeleteWebhookRequest.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.webhook.DeleteWebhookRequest.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.webhook.DeleteWebhookRequest.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.webhook.DeleteWebhookRequest.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.hiber.webhook.DeleteWebhookRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.hiber.webhook.DeleteWebhookRequest.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string organization = 2;
 * @return {string}
 */
proto.hiber.webhook.DeleteWebhookRequest.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hiber.webhook.DeleteWebhookRequest.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 2, value);
};


goog.object.extend(exports, proto.hiber.webhook);
