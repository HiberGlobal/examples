/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var base_pb = require('./base_pb.js');
goog.exportSymbol('proto.hiber.account.Account', null, global);
goog.exportSymbol('proto.hiber.account.Account.Address', null, global);
goog.exportSymbol('proto.hiber.account.Account.Contact', null, global);
goog.exportSymbol('proto.hiber.account.AccountTreeRequest', null, global);
goog.exportSymbol('proto.hiber.account.AccountTreeRequest.AccountTree', null, global);
goog.exportSymbol('proto.hiber.account.GetAccountRequest', null, global);
goog.exportSymbol('proto.hiber.account.UpdateAccountRequest', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.account.Account = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.account.Account, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.account.Account.displayName = 'proto.hiber.account.Account';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.account.Account.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.account.Account.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.account.Account} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.account.Account.toObject = function(includeInstance, msg) {
  var f, obj = {
    account: jspb.Message.getFieldWithDefault(msg, 1, ""),
    displayName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    vatNumber: jspb.Message.getFieldWithDefault(msg, 3, ""),
    address: (f = msg.getAddress()) && proto.hiber.account.Account.Address.toObject(includeInstance, f),
    billingName: jspb.Message.getFieldWithDefault(msg, 5, ""),
    billingAddress: (f = msg.getBillingAddress()) && proto.hiber.account.Account.Address.toObject(includeInstance, f),
    contact: (f = msg.getContact()) && proto.hiber.account.Account.Contact.toObject(includeInstance, f),
    contractSignatureDate: (f = msg.getContractSignatureDate()) && base_pb.Timestamp.toObject(includeInstance, f),
    createdAt: (f = msg.getCreatedAt()) && base_pb.Timestamp.toObject(includeInstance, f),
    updatedAt: (f = msg.getUpdatedAt()) && base_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.account.Account}
 */
proto.hiber.account.Account.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.account.Account;
  return proto.hiber.account.Account.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.account.Account} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.account.Account}
 */
proto.hiber.account.Account.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccount(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setVatNumber(value);
      break;
    case 4:
      var value = new proto.hiber.account.Account.Address;
      reader.readMessage(value,proto.hiber.account.Account.Address.deserializeBinaryFromReader);
      msg.setAddress(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBillingName(value);
      break;
    case 6:
      var value = new proto.hiber.account.Account.Address;
      reader.readMessage(value,proto.hiber.account.Account.Address.deserializeBinaryFromReader);
      msg.setBillingAddress(value);
      break;
    case 7:
      var value = new proto.hiber.account.Account.Contact;
      reader.readMessage(value,proto.hiber.account.Account.Contact.deserializeBinaryFromReader);
      msg.setContact(value);
      break;
    case 8:
      var value = new base_pb.Timestamp;
      reader.readMessage(value,base_pb.Timestamp.deserializeBinaryFromReader);
      msg.setContractSignatureDate(value);
      break;
    case 9:
      var value = new base_pb.Timestamp;
      reader.readMessage(value,base_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 10:
      var value = new base_pb.Timestamp;
      reader.readMessage(value,base_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.account.Account.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.account.Account.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.account.Account} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.account.Account.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccount();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDisplayName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getVatNumber();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAddress();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.hiber.account.Account.Address.serializeBinaryToWriter
    );
  }
  f = message.getBillingName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getBillingAddress();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.hiber.account.Account.Address.serializeBinaryToWriter
    );
  }
  f = message.getContact();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.hiber.account.Account.Contact.serializeBinaryToWriter
    );
  }
  f = message.getContractSignatureDate();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      base_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      base_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedAt();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      base_pb.Timestamp.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.account.Account.Address = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.account.Account.Address.repeatedFields_, null);
};
goog.inherits(proto.hiber.account.Account.Address, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.account.Account.Address.displayName = 'proto.hiber.account.Account.Address';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.account.Account.Address.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.account.Account.Address.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.account.Account.Address.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.account.Account.Address} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.account.Account.Address.toObject = function(includeInstance, msg) {
  var f, obj = {
    linesList: jspb.Message.getRepeatedField(msg, 1),
    zipcode: jspb.Message.getFieldWithDefault(msg, 2, ""),
    city: jspb.Message.getFieldWithDefault(msg, 3, ""),
    state: jspb.Message.getFieldWithDefault(msg, 4, ""),
    country: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.account.Account.Address}
 */
proto.hiber.account.Account.Address.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.account.Account.Address;
  return proto.hiber.account.Account.Address.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.account.Account.Address} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.account.Account.Address}
 */
proto.hiber.account.Account.Address.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addLines(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setZipcode(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCity(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setState(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.account.Account.Address.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.account.Account.Address.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.account.Account.Address} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.account.Account.Address.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLinesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getZipcode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCity();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getState();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * repeated string lines = 1;
 * @return {!Array.<string>}
 */
proto.hiber.account.Account.Address.prototype.getLinesList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array.<string>} value */
proto.hiber.account.Account.Address.prototype.setLinesList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.hiber.account.Account.Address.prototype.addLines = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.hiber.account.Account.Address.prototype.clearLinesList = function() {
  this.setLinesList([]);
};


/**
 * optional string zipcode = 2;
 * @return {string}
 */
proto.hiber.account.Account.Address.prototype.getZipcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hiber.account.Account.Address.prototype.setZipcode = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string city = 3;
 * @return {string}
 */
proto.hiber.account.Account.Address.prototype.getCity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.hiber.account.Account.Address.prototype.setCity = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string state = 4;
 * @return {string}
 */
proto.hiber.account.Account.Address.prototype.getState = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.hiber.account.Account.Address.prototype.setState = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string country = 5;
 * @return {string}
 */
proto.hiber.account.Account.Address.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.hiber.account.Account.Address.prototype.setCountry = function(value) {
  jspb.Message.setField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.account.Account.Contact = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.account.Account.Contact, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.account.Account.Contact.displayName = 'proto.hiber.account.Account.Contact';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.account.Account.Contact.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.account.Account.Contact.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.account.Account.Contact} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.account.Account.Contact.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    email: jspb.Message.getFieldWithDefault(msg, 2, ""),
    phone: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.account.Account.Contact}
 */
proto.hiber.account.Account.Contact.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.account.Account.Contact;
  return proto.hiber.account.Account.Contact.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.account.Account.Contact} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.account.Account.Contact}
 */
proto.hiber.account.Account.Contact.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhone(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.account.Account.Contact.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.account.Account.Contact.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.account.Account.Contact} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.account.Account.Contact.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPhone();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.hiber.account.Account.Contact.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.account.Account.Contact.prototype.setName = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string email = 2;
 * @return {string}
 */
proto.hiber.account.Account.Contact.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hiber.account.Account.Contact.prototype.setEmail = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string phone = 3;
 * @return {string}
 */
proto.hiber.account.Account.Contact.prototype.getPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.hiber.account.Account.Contact.prototype.setPhone = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string account = 1;
 * @return {string}
 */
proto.hiber.account.Account.prototype.getAccount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.account.Account.prototype.setAccount = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string display_name = 2;
 * @return {string}
 */
proto.hiber.account.Account.prototype.getDisplayName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hiber.account.Account.prototype.setDisplayName = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string vat_number = 3;
 * @return {string}
 */
proto.hiber.account.Account.prototype.getVatNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.hiber.account.Account.prototype.setVatNumber = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional Address address = 4;
 * @return {?proto.hiber.account.Account.Address}
 */
proto.hiber.account.Account.prototype.getAddress = function() {
  return /** @type{?proto.hiber.account.Account.Address} */ (
    jspb.Message.getWrapperField(this, proto.hiber.account.Account.Address, 4));
};


/** @param {?proto.hiber.account.Account.Address|undefined} value */
proto.hiber.account.Account.prototype.setAddress = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.hiber.account.Account.prototype.clearAddress = function() {
  this.setAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.account.Account.prototype.hasAddress = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string billing_name = 5;
 * @return {string}
 */
proto.hiber.account.Account.prototype.getBillingName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.hiber.account.Account.prototype.setBillingName = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional Address billing_address = 6;
 * @return {?proto.hiber.account.Account.Address}
 */
proto.hiber.account.Account.prototype.getBillingAddress = function() {
  return /** @type{?proto.hiber.account.Account.Address} */ (
    jspb.Message.getWrapperField(this, proto.hiber.account.Account.Address, 6));
};


/** @param {?proto.hiber.account.Account.Address|undefined} value */
proto.hiber.account.Account.prototype.setBillingAddress = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.hiber.account.Account.prototype.clearBillingAddress = function() {
  this.setBillingAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.account.Account.prototype.hasBillingAddress = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Contact contact = 7;
 * @return {?proto.hiber.account.Account.Contact}
 */
proto.hiber.account.Account.prototype.getContact = function() {
  return /** @type{?proto.hiber.account.Account.Contact} */ (
    jspb.Message.getWrapperField(this, proto.hiber.account.Account.Contact, 7));
};


/** @param {?proto.hiber.account.Account.Contact|undefined} value */
proto.hiber.account.Account.prototype.setContact = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.hiber.account.Account.prototype.clearContact = function() {
  this.setContact(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.account.Account.prototype.hasContact = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional hiber.Timestamp contract_signature_date = 8;
 * @return {?proto.hiber.Timestamp}
 */
proto.hiber.account.Account.prototype.getContractSignatureDate = function() {
  return /** @type{?proto.hiber.Timestamp} */ (
    jspb.Message.getWrapperField(this, base_pb.Timestamp, 8));
};


/** @param {?proto.hiber.Timestamp|undefined} value */
proto.hiber.account.Account.prototype.setContractSignatureDate = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.hiber.account.Account.prototype.clearContractSignatureDate = function() {
  this.setContractSignatureDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.account.Account.prototype.hasContractSignatureDate = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional hiber.Timestamp created_at = 9;
 * @return {?proto.hiber.Timestamp}
 */
proto.hiber.account.Account.prototype.getCreatedAt = function() {
  return /** @type{?proto.hiber.Timestamp} */ (
    jspb.Message.getWrapperField(this, base_pb.Timestamp, 9));
};


/** @param {?proto.hiber.Timestamp|undefined} value */
proto.hiber.account.Account.prototype.setCreatedAt = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


proto.hiber.account.Account.prototype.clearCreatedAt = function() {
  this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.account.Account.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional hiber.Timestamp updated_at = 10;
 * @return {?proto.hiber.Timestamp}
 */
proto.hiber.account.Account.prototype.getUpdatedAt = function() {
  return /** @type{?proto.hiber.Timestamp} */ (
    jspb.Message.getWrapperField(this, base_pb.Timestamp, 10));
};


/** @param {?proto.hiber.Timestamp|undefined} value */
proto.hiber.account.Account.prototype.setUpdatedAt = function(value) {
  jspb.Message.setWrapperField(this, 10, value);
};


proto.hiber.account.Account.prototype.clearUpdatedAt = function() {
  this.setUpdatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.account.Account.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 10) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.account.GetAccountRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.account.GetAccountRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.account.GetAccountRequest.displayName = 'proto.hiber.account.GetAccountRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.account.GetAccountRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.account.GetAccountRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.account.GetAccountRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.account.GetAccountRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    account: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.account.GetAccountRequest}
 */
proto.hiber.account.GetAccountRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.account.GetAccountRequest;
  return proto.hiber.account.GetAccountRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.account.GetAccountRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.account.GetAccountRequest}
 */
proto.hiber.account.GetAccountRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.account.GetAccountRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.account.GetAccountRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.account.GetAccountRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.account.GetAccountRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccount();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string account = 1;
 * @return {string}
 */
proto.hiber.account.GetAccountRequest.prototype.getAccount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.account.GetAccountRequest.prototype.setAccount = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.account.AccountTreeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.account.AccountTreeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.account.AccountTreeRequest.displayName = 'proto.hiber.account.AccountTreeRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.account.AccountTreeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.account.AccountTreeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.account.AccountTreeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.account.AccountTreeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    account: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.account.AccountTreeRequest}
 */
proto.hiber.account.AccountTreeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.account.AccountTreeRequest;
  return proto.hiber.account.AccountTreeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.account.AccountTreeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.account.AccountTreeRequest}
 */
proto.hiber.account.AccountTreeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.account.AccountTreeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.account.AccountTreeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.account.AccountTreeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.account.AccountTreeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccount();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.account.AccountTreeRequest.AccountTree = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.account.AccountTreeRequest.AccountTree.repeatedFields_, null);
};
goog.inherits(proto.hiber.account.AccountTreeRequest.AccountTree, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.account.AccountTreeRequest.AccountTree.displayName = 'proto.hiber.account.AccountTreeRequest.AccountTree';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.account.AccountTreeRequest.AccountTree.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.account.AccountTreeRequest.AccountTree.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.account.AccountTreeRequest.AccountTree.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.account.AccountTreeRequest.AccountTree} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.account.AccountTreeRequest.AccountTree.toObject = function(includeInstance, msg) {
  var f, obj = {
    account: jspb.Message.getFieldWithDefault(msg, 1, ""),
    companyName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    childrenList: jspb.Message.toObjectList(msg.getChildrenList(),
    proto.hiber.account.AccountTreeRequest.AccountTree.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.account.AccountTreeRequest.AccountTree}
 */
proto.hiber.account.AccountTreeRequest.AccountTree.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.account.AccountTreeRequest.AccountTree;
  return proto.hiber.account.AccountTreeRequest.AccountTree.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.account.AccountTreeRequest.AccountTree} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.account.AccountTreeRequest.AccountTree}
 */
proto.hiber.account.AccountTreeRequest.AccountTree.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccount(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyName(value);
      break;
    case 3:
      var value = new proto.hiber.account.AccountTreeRequest.AccountTree;
      reader.readMessage(value,proto.hiber.account.AccountTreeRequest.AccountTree.deserializeBinaryFromReader);
      msg.addChildren(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.account.AccountTreeRequest.AccountTree.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.account.AccountTreeRequest.AccountTree.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.account.AccountTreeRequest.AccountTree} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.account.AccountTreeRequest.AccountTree.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccount();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCompanyName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getChildrenList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.hiber.account.AccountTreeRequest.AccountTree.serializeBinaryToWriter
    );
  }
};


/**
 * optional string account = 1;
 * @return {string}
 */
proto.hiber.account.AccountTreeRequest.AccountTree.prototype.getAccount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.account.AccountTreeRequest.AccountTree.prototype.setAccount = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string company_name = 2;
 * @return {string}
 */
proto.hiber.account.AccountTreeRequest.AccountTree.prototype.getCompanyName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hiber.account.AccountTreeRequest.AccountTree.prototype.setCompanyName = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * repeated AccountTree children = 3;
 * @return {!Array.<!proto.hiber.account.AccountTreeRequest.AccountTree>}
 */
proto.hiber.account.AccountTreeRequest.AccountTree.prototype.getChildrenList = function() {
  return /** @type{!Array.<!proto.hiber.account.AccountTreeRequest.AccountTree>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.hiber.account.AccountTreeRequest.AccountTree, 3));
};


/** @param {!Array.<!proto.hiber.account.AccountTreeRequest.AccountTree>} value */
proto.hiber.account.AccountTreeRequest.AccountTree.prototype.setChildrenList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.hiber.account.AccountTreeRequest.AccountTree=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hiber.account.AccountTreeRequest.AccountTree}
 */
proto.hiber.account.AccountTreeRequest.AccountTree.prototype.addChildren = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.hiber.account.AccountTreeRequest.AccountTree, opt_index);
};


proto.hiber.account.AccountTreeRequest.AccountTree.prototype.clearChildrenList = function() {
  this.setChildrenList([]);
};


/**
 * optional string account = 1;
 * @return {string}
 */
proto.hiber.account.AccountTreeRequest.prototype.getAccount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.account.AccountTreeRequest.prototype.setAccount = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.account.UpdateAccountRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.account.UpdateAccountRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.account.UpdateAccountRequest.displayName = 'proto.hiber.account.UpdateAccountRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.account.UpdateAccountRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.account.UpdateAccountRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.account.UpdateAccountRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.account.UpdateAccountRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    account: jspb.Message.getFieldWithDefault(msg, 1, ""),
    displayName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    vatNumber: jspb.Message.getFieldWithDefault(msg, 3, ""),
    address: (f = msg.getAddress()) && proto.hiber.account.Account.Address.toObject(includeInstance, f),
    billingName: jspb.Message.getFieldWithDefault(msg, 5, ""),
    billingAddress: (f = msg.getBillingAddress()) && proto.hiber.account.Account.Address.toObject(includeInstance, f),
    contact: (f = msg.getContact()) && proto.hiber.account.Account.Contact.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.account.UpdateAccountRequest}
 */
proto.hiber.account.UpdateAccountRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.account.UpdateAccountRequest;
  return proto.hiber.account.UpdateAccountRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.account.UpdateAccountRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.account.UpdateAccountRequest}
 */
proto.hiber.account.UpdateAccountRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccount(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setVatNumber(value);
      break;
    case 4:
      var value = new proto.hiber.account.Account.Address;
      reader.readMessage(value,proto.hiber.account.Account.Address.deserializeBinaryFromReader);
      msg.setAddress(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBillingName(value);
      break;
    case 6:
      var value = new proto.hiber.account.Account.Address;
      reader.readMessage(value,proto.hiber.account.Account.Address.deserializeBinaryFromReader);
      msg.setBillingAddress(value);
      break;
    case 7:
      var value = new proto.hiber.account.Account.Contact;
      reader.readMessage(value,proto.hiber.account.Account.Contact.deserializeBinaryFromReader);
      msg.setContact(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.account.UpdateAccountRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.account.UpdateAccountRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.account.UpdateAccountRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.account.UpdateAccountRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccount();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDisplayName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getVatNumber();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAddress();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.hiber.account.Account.Address.serializeBinaryToWriter
    );
  }
  f = message.getBillingName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getBillingAddress();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.hiber.account.Account.Address.serializeBinaryToWriter
    );
  }
  f = message.getContact();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.hiber.account.Account.Contact.serializeBinaryToWriter
    );
  }
};


/**
 * optional string account = 1;
 * @return {string}
 */
proto.hiber.account.UpdateAccountRequest.prototype.getAccount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.account.UpdateAccountRequest.prototype.setAccount = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string display_name = 2;
 * @return {string}
 */
proto.hiber.account.UpdateAccountRequest.prototype.getDisplayName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hiber.account.UpdateAccountRequest.prototype.setDisplayName = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string vat_number = 3;
 * @return {string}
 */
proto.hiber.account.UpdateAccountRequest.prototype.getVatNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.hiber.account.UpdateAccountRequest.prototype.setVatNumber = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional Account.Address address = 4;
 * @return {?proto.hiber.account.Account.Address}
 */
proto.hiber.account.UpdateAccountRequest.prototype.getAddress = function() {
  return /** @type{?proto.hiber.account.Account.Address} */ (
    jspb.Message.getWrapperField(this, proto.hiber.account.Account.Address, 4));
};


/** @param {?proto.hiber.account.Account.Address|undefined} value */
proto.hiber.account.UpdateAccountRequest.prototype.setAddress = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.hiber.account.UpdateAccountRequest.prototype.clearAddress = function() {
  this.setAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.account.UpdateAccountRequest.prototype.hasAddress = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string billing_name = 5;
 * @return {string}
 */
proto.hiber.account.UpdateAccountRequest.prototype.getBillingName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.hiber.account.UpdateAccountRequest.prototype.setBillingName = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional Account.Address billing_address = 6;
 * @return {?proto.hiber.account.Account.Address}
 */
proto.hiber.account.UpdateAccountRequest.prototype.getBillingAddress = function() {
  return /** @type{?proto.hiber.account.Account.Address} */ (
    jspb.Message.getWrapperField(this, proto.hiber.account.Account.Address, 6));
};


/** @param {?proto.hiber.account.Account.Address|undefined} value */
proto.hiber.account.UpdateAccountRequest.prototype.setBillingAddress = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.hiber.account.UpdateAccountRequest.prototype.clearBillingAddress = function() {
  this.setBillingAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.account.UpdateAccountRequest.prototype.hasBillingAddress = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Account.Contact contact = 7;
 * @return {?proto.hiber.account.Account.Contact}
 */
proto.hiber.account.UpdateAccountRequest.prototype.getContact = function() {
  return /** @type{?proto.hiber.account.Account.Contact} */ (
    jspb.Message.getWrapperField(this, proto.hiber.account.Account.Contact, 7));
};


/** @param {?proto.hiber.account.Account.Contact|undefined} value */
proto.hiber.account.UpdateAccountRequest.prototype.setContact = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.hiber.account.UpdateAccountRequest.prototype.clearContact = function() {
  this.setContact(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.account.UpdateAccountRequest.prototype.hasContact = function() {
  return jspb.Message.getField(this, 7) != null;
};


goog.object.extend(exports, proto.hiber.account);
