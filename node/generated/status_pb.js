/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var base_pb = require('./base_pb.js');
goog.object.extend(proto, base_pb);
goog.exportSymbol('proto.hiber.status.AreaStatus', null, global);
goog.exportSymbol('proto.hiber.status.NetworkStatus', null, global);
goog.exportSymbol('proto.hiber.status.OrganizationStatus', null, global);
goog.exportSymbol('proto.hiber.status.OrganizationStatus.ModemStatus', null, global);
goog.exportSymbol('proto.hiber.status.OrganizationStatus.PublisherStatus', null, global);
goog.exportSymbol('proto.hiber.status.StatusRequest', null, global);
goog.exportSymbol('proto.hiber.status.StatusRequest.Response', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.status.NetworkStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.status.NetworkStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.status.NetworkStatus.displayName = 'proto.hiber.status.NetworkStatus';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.status.NetworkStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.status.NetworkStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.status.NetworkStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.status.NetworkStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    health: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    lastUpdated: (f = msg.getLastUpdated()) && base_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.status.NetworkStatus}
 */
proto.hiber.status.NetworkStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.status.NetworkStatus;
  return proto.hiber.status.NetworkStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.status.NetworkStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.status.NetworkStatus}
 */
proto.hiber.status.NetworkStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.hiber.Health} */ (reader.readEnum());
      msg.setHealth(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = new base_pb.Timestamp;
      reader.readMessage(value,base_pb.Timestamp.deserializeBinaryFromReader);
      msg.setLastUpdated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.status.NetworkStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.status.NetworkStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.status.NetworkStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.status.NetworkStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHealth();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLastUpdated();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      base_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional hiber.Health health = 1;
 * @return {!proto.hiber.Health}
 */
proto.hiber.status.NetworkStatus.prototype.getHealth = function() {
  return /** @type {!proto.hiber.Health} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.hiber.Health} value */
proto.hiber.status.NetworkStatus.prototype.setHealth = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.hiber.status.NetworkStatus.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hiber.status.NetworkStatus.prototype.setMessage = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional hiber.Timestamp last_updated = 3;
 * @return {?proto.hiber.Timestamp}
 */
proto.hiber.status.NetworkStatus.prototype.getLastUpdated = function() {
  return /** @type{?proto.hiber.Timestamp} */ (
    jspb.Message.getWrapperField(this, base_pb.Timestamp, 3));
};


/** @param {?proto.hiber.Timestamp|undefined} value */
proto.hiber.status.NetworkStatus.prototype.setLastUpdated = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.status.NetworkStatus.prototype.clearLastUpdated = function() {
  this.setLastUpdated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.hiber.status.NetworkStatus.prototype.hasLastUpdated = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.status.AreaStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.status.AreaStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.status.AreaStatus.displayName = 'proto.hiber.status.AreaStatus';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.status.AreaStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.status.AreaStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.status.AreaStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.status.AreaStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    area: (f = msg.getArea()) && base_pb.Area.toObject(includeInstance, f),
    health: jspb.Message.getFieldWithDefault(msg, 2, 0),
    message: jspb.Message.getFieldWithDefault(msg, 3, ""),
    lastUpdated: (f = msg.getLastUpdated()) && base_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.status.AreaStatus}
 */
proto.hiber.status.AreaStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.status.AreaStatus;
  return proto.hiber.status.AreaStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.status.AreaStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.status.AreaStatus}
 */
proto.hiber.status.AreaStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new base_pb.Area;
      reader.readMessage(value,base_pb.Area.deserializeBinaryFromReader);
      msg.setArea(value);
      break;
    case 2:
      var value = /** @type {!proto.hiber.Health} */ (reader.readEnum());
      msg.setHealth(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 4:
      var value = new base_pb.Timestamp;
      reader.readMessage(value,base_pb.Timestamp.deserializeBinaryFromReader);
      msg.setLastUpdated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.status.AreaStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.status.AreaStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.status.AreaStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.status.AreaStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getArea();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      base_pb.Area.serializeBinaryToWriter
    );
  }
  f = message.getHealth();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLastUpdated();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      base_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional hiber.Area area = 1;
 * @return {?proto.hiber.Area}
 */
proto.hiber.status.AreaStatus.prototype.getArea = function() {
  return /** @type{?proto.hiber.Area} */ (
    jspb.Message.getWrapperField(this, base_pb.Area, 1));
};


/** @param {?proto.hiber.Area|undefined} value */
proto.hiber.status.AreaStatus.prototype.setArea = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.hiber.status.AreaStatus.prototype.clearArea = function() {
  this.setArea(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.hiber.status.AreaStatus.prototype.hasArea = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional hiber.Health health = 2;
 * @return {!proto.hiber.Health}
 */
proto.hiber.status.AreaStatus.prototype.getHealth = function() {
  return /** @type {!proto.hiber.Health} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.hiber.Health} value */
proto.hiber.status.AreaStatus.prototype.setHealth = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string message = 3;
 * @return {string}
 */
proto.hiber.status.AreaStatus.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.hiber.status.AreaStatus.prototype.setMessage = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional hiber.Timestamp last_updated = 4;
 * @return {?proto.hiber.Timestamp}
 */
proto.hiber.status.AreaStatus.prototype.getLastUpdated = function() {
  return /** @type{?proto.hiber.Timestamp} */ (
    jspb.Message.getWrapperField(this, base_pb.Timestamp, 4));
};


/** @param {?proto.hiber.Timestamp|undefined} value */
proto.hiber.status.AreaStatus.prototype.setLastUpdated = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.hiber.status.AreaStatus.prototype.clearLastUpdated = function() {
  this.setLastUpdated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.hiber.status.AreaStatus.prototype.hasLastUpdated = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.status.OrganizationStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.status.OrganizationStatus.repeatedFields_, null);
};
goog.inherits(proto.hiber.status.OrganizationStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.status.OrganizationStatus.displayName = 'proto.hiber.status.OrganizationStatus';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.status.OrganizationStatus.repeatedFields_ = [4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.status.OrganizationStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.status.OrganizationStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.status.OrganizationStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.status.OrganizationStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    health: jspb.Message.getFieldWithDefault(msg, 1, 0),
    modems: jspb.Message.getFieldWithDefault(msg, 2, 0),
    publishers: jspb.Message.getFieldWithDefault(msg, 3, 0),
    relevantModemsList: jspb.Message.toObjectList(msg.getRelevantModemsList(),
    proto.hiber.status.OrganizationStatus.ModemStatus.toObject, includeInstance),
    relevantPublishersList: jspb.Message.toObjectList(msg.getRelevantPublishersList(),
    proto.hiber.status.OrganizationStatus.PublisherStatus.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.status.OrganizationStatus}
 */
proto.hiber.status.OrganizationStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.status.OrganizationStatus;
  return proto.hiber.status.OrganizationStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.status.OrganizationStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.status.OrganizationStatus}
 */
proto.hiber.status.OrganizationStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.hiber.Health} */ (reader.readEnum());
      msg.setHealth(value);
      break;
    case 2:
      var value = /** @type {!proto.hiber.Health} */ (reader.readEnum());
      msg.setModems(value);
      break;
    case 3:
      var value = /** @type {!proto.hiber.Health} */ (reader.readEnum());
      msg.setPublishers(value);
      break;
    case 4:
      var value = new proto.hiber.status.OrganizationStatus.ModemStatus;
      reader.readMessage(value,proto.hiber.status.OrganizationStatus.ModemStatus.deserializeBinaryFromReader);
      msg.addRelevantModems(value);
      break;
    case 5:
      var value = new proto.hiber.status.OrganizationStatus.PublisherStatus;
      reader.readMessage(value,proto.hiber.status.OrganizationStatus.PublisherStatus.deserializeBinaryFromReader);
      msg.addRelevantPublishers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.status.OrganizationStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.status.OrganizationStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.status.OrganizationStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.status.OrganizationStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHealth();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getModems();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getPublishers();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getRelevantModemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.hiber.status.OrganizationStatus.ModemStatus.serializeBinaryToWriter
    );
  }
  f = message.getRelevantPublishersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.hiber.status.OrganizationStatus.PublisherStatus.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.status.OrganizationStatus.ModemStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.status.OrganizationStatus.ModemStatus.repeatedFields_, null);
};
goog.inherits(proto.hiber.status.OrganizationStatus.ModemStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.status.OrganizationStatus.ModemStatus.displayName = 'proto.hiber.status.OrganizationStatus.ModemStatus';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.status.OrganizationStatus.ModemStatus.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.status.OrganizationStatus.ModemStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.status.OrganizationStatus.ModemStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.status.OrganizationStatus.ModemStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.status.OrganizationStatus.ModemStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    modemNumber: jspb.Message.getFieldWithDefault(msg, 1, ""),
    health: jspb.Message.getFieldWithDefault(msg, 2, 0),
    messagesList: jspb.Message.getRepeatedField(msg, 3)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.status.OrganizationStatus.ModemStatus}
 */
proto.hiber.status.OrganizationStatus.ModemStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.status.OrganizationStatus.ModemStatus;
  return proto.hiber.status.OrganizationStatus.ModemStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.status.OrganizationStatus.ModemStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.status.OrganizationStatus.ModemStatus}
 */
proto.hiber.status.OrganizationStatus.ModemStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setModemNumber(value);
      break;
    case 2:
      var value = /** @type {!proto.hiber.Health} */ (reader.readEnum());
      msg.setHealth(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addMessages(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.status.OrganizationStatus.ModemStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.status.OrganizationStatus.ModemStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.status.OrganizationStatus.ModemStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.status.OrganizationStatus.ModemStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModemNumber();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHealth();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getMessagesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional string modem_number = 1;
 * @return {string}
 */
proto.hiber.status.OrganizationStatus.ModemStatus.prototype.getModemNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.status.OrganizationStatus.ModemStatus.prototype.setModemNumber = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional hiber.Health health = 2;
 * @return {!proto.hiber.Health}
 */
proto.hiber.status.OrganizationStatus.ModemStatus.prototype.getHealth = function() {
  return /** @type {!proto.hiber.Health} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.hiber.Health} value */
proto.hiber.status.OrganizationStatus.ModemStatus.prototype.setHealth = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * repeated string messages = 3;
 * @return {!Array<string>}
 */
proto.hiber.status.OrganizationStatus.ModemStatus.prototype.getMessagesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array<string>} value */
proto.hiber.status.OrganizationStatus.ModemStatus.prototype.setMessagesList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.hiber.status.OrganizationStatus.ModemStatus.prototype.addMessages = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.hiber.status.OrganizationStatus.ModemStatus.prototype.clearMessagesList = function() {
  this.setMessagesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.status.OrganizationStatus.PublisherStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.status.OrganizationStatus.PublisherStatus.repeatedFields_, null);
};
goog.inherits(proto.hiber.status.OrganizationStatus.PublisherStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.status.OrganizationStatus.PublisherStatus.displayName = 'proto.hiber.status.OrganizationStatus.PublisherStatus';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.status.OrganizationStatus.PublisherStatus.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.status.OrganizationStatus.PublisherStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.status.OrganizationStatus.PublisherStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.status.OrganizationStatus.PublisherStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.status.OrganizationStatus.PublisherStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    publisherId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    health: jspb.Message.getFieldWithDefault(msg, 2, 0),
    messagesList: jspb.Message.getRepeatedField(msg, 3)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.status.OrganizationStatus.PublisherStatus}
 */
proto.hiber.status.OrganizationStatus.PublisherStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.status.OrganizationStatus.PublisherStatus;
  return proto.hiber.status.OrganizationStatus.PublisherStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.status.OrganizationStatus.PublisherStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.status.OrganizationStatus.PublisherStatus}
 */
proto.hiber.status.OrganizationStatus.PublisherStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPublisherId(value);
      break;
    case 2:
      var value = /** @type {!proto.hiber.Health} */ (reader.readEnum());
      msg.setHealth(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addMessages(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.status.OrganizationStatus.PublisherStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.status.OrganizationStatus.PublisherStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.status.OrganizationStatus.PublisherStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.status.OrganizationStatus.PublisherStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPublisherId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getHealth();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getMessagesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional int64 publisher_id = 1;
 * @return {number}
 */
proto.hiber.status.OrganizationStatus.PublisherStatus.prototype.getPublisherId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.hiber.status.OrganizationStatus.PublisherStatus.prototype.setPublisherId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional hiber.Health health = 2;
 * @return {!proto.hiber.Health}
 */
proto.hiber.status.OrganizationStatus.PublisherStatus.prototype.getHealth = function() {
  return /** @type {!proto.hiber.Health} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.hiber.Health} value */
proto.hiber.status.OrganizationStatus.PublisherStatus.prototype.setHealth = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * repeated string messages = 3;
 * @return {!Array<string>}
 */
proto.hiber.status.OrganizationStatus.PublisherStatus.prototype.getMessagesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array<string>} value */
proto.hiber.status.OrganizationStatus.PublisherStatus.prototype.setMessagesList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.hiber.status.OrganizationStatus.PublisherStatus.prototype.addMessages = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.hiber.status.OrganizationStatus.PublisherStatus.prototype.clearMessagesList = function() {
  this.setMessagesList([]);
};


/**
 * optional hiber.Health health = 1;
 * @return {!proto.hiber.Health}
 */
proto.hiber.status.OrganizationStatus.prototype.getHealth = function() {
  return /** @type {!proto.hiber.Health} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.hiber.Health} value */
proto.hiber.status.OrganizationStatus.prototype.setHealth = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional hiber.Health modems = 2;
 * @return {!proto.hiber.Health}
 */
proto.hiber.status.OrganizationStatus.prototype.getModems = function() {
  return /** @type {!proto.hiber.Health} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.hiber.Health} value */
proto.hiber.status.OrganizationStatus.prototype.setModems = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional hiber.Health publishers = 3;
 * @return {!proto.hiber.Health}
 */
proto.hiber.status.OrganizationStatus.prototype.getPublishers = function() {
  return /** @type {!proto.hiber.Health} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.hiber.Health} value */
proto.hiber.status.OrganizationStatus.prototype.setPublishers = function(value) {
  jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * repeated ModemStatus relevant_modems = 4;
 * @return {!Array<!proto.hiber.status.OrganizationStatus.ModemStatus>}
 */
proto.hiber.status.OrganizationStatus.prototype.getRelevantModemsList = function() {
  return /** @type{!Array<!proto.hiber.status.OrganizationStatus.ModemStatus>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.hiber.status.OrganizationStatus.ModemStatus, 4));
};


/** @param {!Array<!proto.hiber.status.OrganizationStatus.ModemStatus>} value */
proto.hiber.status.OrganizationStatus.prototype.setRelevantModemsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.hiber.status.OrganizationStatus.ModemStatus=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hiber.status.OrganizationStatus.ModemStatus}
 */
proto.hiber.status.OrganizationStatus.prototype.addRelevantModems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.hiber.status.OrganizationStatus.ModemStatus, opt_index);
};


proto.hiber.status.OrganizationStatus.prototype.clearRelevantModemsList = function() {
  this.setRelevantModemsList([]);
};


/**
 * repeated PublisherStatus relevant_publishers = 5;
 * @return {!Array<!proto.hiber.status.OrganizationStatus.PublisherStatus>}
 */
proto.hiber.status.OrganizationStatus.prototype.getRelevantPublishersList = function() {
  return /** @type{!Array<!proto.hiber.status.OrganizationStatus.PublisherStatus>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.hiber.status.OrganizationStatus.PublisherStatus, 5));
};


/** @param {!Array<!proto.hiber.status.OrganizationStatus.PublisherStatus>} value */
proto.hiber.status.OrganizationStatus.prototype.setRelevantPublishersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.hiber.status.OrganizationStatus.PublisherStatus=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hiber.status.OrganizationStatus.PublisherStatus}
 */
proto.hiber.status.OrganizationStatus.prototype.addRelevantPublishers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.hiber.status.OrganizationStatus.PublisherStatus, opt_index);
};


proto.hiber.status.OrganizationStatus.prototype.clearRelevantPublishersList = function() {
  this.setRelevantPublishersList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.status.StatusRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.status.StatusRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.status.StatusRequest.displayName = 'proto.hiber.status.StatusRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.status.StatusRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.status.StatusRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.status.StatusRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.status.StatusRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: jspb.Message.getFieldWithDefault(msg, 1, ""),
    includeModems: jspb.Message.getFieldWithDefault(msg, 2, false),
    includePublishers: jspb.Message.getFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.status.StatusRequest}
 */
proto.hiber.status.StatusRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.status.StatusRequest;
  return proto.hiber.status.StatusRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.status.StatusRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.status.StatusRequest}
 */
proto.hiber.status.StatusRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludeModems(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludePublishers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.status.StatusRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.status.StatusRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.status.StatusRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.status.StatusRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIncludeModems();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getIncludePublishers();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.status.StatusRequest.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.status.StatusRequest.Response.repeatedFields_, null);
};
goog.inherits(proto.hiber.status.StatusRequest.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.status.StatusRequest.Response.displayName = 'proto.hiber.status.StatusRequest.Response';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.status.StatusRequest.Response.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.status.StatusRequest.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.status.StatusRequest.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.status.StatusRequest.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.status.StatusRequest.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    request: (f = msg.getRequest()) && proto.hiber.status.StatusRequest.toObject(includeInstance, f),
    satellites: (f = msg.getSatellites()) && proto.hiber.status.NetworkStatus.toObject(includeInstance, f),
    groundStations: (f = msg.getGroundStations()) && proto.hiber.status.NetworkStatus.toObject(includeInstance, f),
    globalAreasList: jspb.Message.toObjectList(msg.getGlobalAreasList(),
    proto.hiber.status.AreaStatus.toObject, includeInstance),
    organization: (f = msg.getOrganization()) && proto.hiber.status.OrganizationStatus.toObject(includeInstance, f),
    server: (f = msg.getServer()) && proto.hiber.status.NetworkStatus.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.status.StatusRequest.Response}
 */
proto.hiber.status.StatusRequest.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.status.StatusRequest.Response;
  return proto.hiber.status.StatusRequest.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.status.StatusRequest.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.status.StatusRequest.Response}
 */
proto.hiber.status.StatusRequest.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.hiber.status.StatusRequest;
      reader.readMessage(value,proto.hiber.status.StatusRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    case 2:
      var value = new proto.hiber.status.NetworkStatus;
      reader.readMessage(value,proto.hiber.status.NetworkStatus.deserializeBinaryFromReader);
      msg.setSatellites(value);
      break;
    case 3:
      var value = new proto.hiber.status.NetworkStatus;
      reader.readMessage(value,proto.hiber.status.NetworkStatus.deserializeBinaryFromReader);
      msg.setGroundStations(value);
      break;
    case 4:
      var value = new proto.hiber.status.AreaStatus;
      reader.readMessage(value,proto.hiber.status.AreaStatus.deserializeBinaryFromReader);
      msg.addGlobalAreas(value);
      break;
    case 5:
      var value = new proto.hiber.status.OrganizationStatus;
      reader.readMessage(value,proto.hiber.status.OrganizationStatus.deserializeBinaryFromReader);
      msg.setOrganization(value);
      break;
    case 6:
      var value = new proto.hiber.status.NetworkStatus;
      reader.readMessage(value,proto.hiber.status.NetworkStatus.deserializeBinaryFromReader);
      msg.setServer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.status.StatusRequest.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.status.StatusRequest.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.status.StatusRequest.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.status.StatusRequest.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.hiber.status.StatusRequest.serializeBinaryToWriter
    );
  }
  f = message.getSatellites();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.hiber.status.NetworkStatus.serializeBinaryToWriter
    );
  }
  f = message.getGroundStations();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.hiber.status.NetworkStatus.serializeBinaryToWriter
    );
  }
  f = message.getGlobalAreasList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.hiber.status.AreaStatus.serializeBinaryToWriter
    );
  }
  f = message.getOrganization();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.hiber.status.OrganizationStatus.serializeBinaryToWriter
    );
  }
  f = message.getServer();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.hiber.status.NetworkStatus.serializeBinaryToWriter
    );
  }
};


/**
 * optional StatusRequest request = 1;
 * @return {?proto.hiber.status.StatusRequest}
 */
proto.hiber.status.StatusRequest.Response.prototype.getRequest = function() {
  return /** @type{?proto.hiber.status.StatusRequest} */ (
    jspb.Message.getWrapperField(this, proto.hiber.status.StatusRequest, 1));
};


/** @param {?proto.hiber.status.StatusRequest|undefined} value */
proto.hiber.status.StatusRequest.Response.prototype.setRequest = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.hiber.status.StatusRequest.Response.prototype.clearRequest = function() {
  this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.hiber.status.StatusRequest.Response.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional NetworkStatus satellites = 2;
 * @return {?proto.hiber.status.NetworkStatus}
 */
proto.hiber.status.StatusRequest.Response.prototype.getSatellites = function() {
  return /** @type{?proto.hiber.status.NetworkStatus} */ (
    jspb.Message.getWrapperField(this, proto.hiber.status.NetworkStatus, 2));
};


/** @param {?proto.hiber.status.NetworkStatus|undefined} value */
proto.hiber.status.StatusRequest.Response.prototype.setSatellites = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.status.StatusRequest.Response.prototype.clearSatellites = function() {
  this.setSatellites(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.hiber.status.StatusRequest.Response.prototype.hasSatellites = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional NetworkStatus ground_stations = 3;
 * @return {?proto.hiber.status.NetworkStatus}
 */
proto.hiber.status.StatusRequest.Response.prototype.getGroundStations = function() {
  return /** @type{?proto.hiber.status.NetworkStatus} */ (
    jspb.Message.getWrapperField(this, proto.hiber.status.NetworkStatus, 3));
};


/** @param {?proto.hiber.status.NetworkStatus|undefined} value */
proto.hiber.status.StatusRequest.Response.prototype.setGroundStations = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.status.StatusRequest.Response.prototype.clearGroundStations = function() {
  this.setGroundStations(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.hiber.status.StatusRequest.Response.prototype.hasGroundStations = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated AreaStatus global_areas = 4;
 * @return {!Array<!proto.hiber.status.AreaStatus>}
 */
proto.hiber.status.StatusRequest.Response.prototype.getGlobalAreasList = function() {
  return /** @type{!Array<!proto.hiber.status.AreaStatus>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.hiber.status.AreaStatus, 4));
};


/** @param {!Array<!proto.hiber.status.AreaStatus>} value */
proto.hiber.status.StatusRequest.Response.prototype.setGlobalAreasList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.hiber.status.AreaStatus=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hiber.status.AreaStatus}
 */
proto.hiber.status.StatusRequest.Response.prototype.addGlobalAreas = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.hiber.status.AreaStatus, opt_index);
};


proto.hiber.status.StatusRequest.Response.prototype.clearGlobalAreasList = function() {
  this.setGlobalAreasList([]);
};


/**
 * optional OrganizationStatus organization = 5;
 * @return {?proto.hiber.status.OrganizationStatus}
 */
proto.hiber.status.StatusRequest.Response.prototype.getOrganization = function() {
  return /** @type{?proto.hiber.status.OrganizationStatus} */ (
    jspb.Message.getWrapperField(this, proto.hiber.status.OrganizationStatus, 5));
};


/** @param {?proto.hiber.status.OrganizationStatus|undefined} value */
proto.hiber.status.StatusRequest.Response.prototype.setOrganization = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.hiber.status.StatusRequest.Response.prototype.clearOrganization = function() {
  this.setOrganization(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.hiber.status.StatusRequest.Response.prototype.hasOrganization = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional NetworkStatus server = 6;
 * @return {?proto.hiber.status.NetworkStatus}
 */
proto.hiber.status.StatusRequest.Response.prototype.getServer = function() {
  return /** @type{?proto.hiber.status.NetworkStatus} */ (
    jspb.Message.getWrapperField(this, proto.hiber.status.NetworkStatus, 6));
};


/** @param {?proto.hiber.status.NetworkStatus|undefined} value */
proto.hiber.status.StatusRequest.Response.prototype.setServer = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.hiber.status.StatusRequest.Response.prototype.clearServer = function() {
  this.setServer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.hiber.status.StatusRequest.Response.prototype.hasServer = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string organization = 1;
 * @return {string}
 */
proto.hiber.status.StatusRequest.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.status.StatusRequest.prototype.setOrganization = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool include_modems = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.hiber.status.StatusRequest.prototype.getIncludeModems = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.hiber.status.StatusRequest.prototype.setIncludeModems = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool include_publishers = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.hiber.status.StatusRequest.prototype.getIncludePublishers = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.hiber.status.StatusRequest.prototype.setIncludePublishers = function(value) {
  jspb.Message.setProto3BooleanField(this, 3, value);
};


goog.object.extend(exports, proto.hiber.status);
