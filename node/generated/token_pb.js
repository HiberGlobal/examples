/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var base_pb = require('./base_pb.js');
goog.object.extend(proto, base_pb);
var permission_pb = require('./permission_pb.js');
goog.object.extend(proto, permission_pb);
goog.exportSymbol('proto.hiber.token.CreateTokenRequest', null, global);
goog.exportSymbol('proto.hiber.token.CreateTokenRequest.Response', null, global);
goog.exportSymbol('proto.hiber.token.DeleteTokenRequest', null, global);
goog.exportSymbol('proto.hiber.token.DeleteTokenRequest.Response', null, global);
goog.exportSymbol('proto.hiber.token.ListTokensRequest', null, global);
goog.exportSymbol('proto.hiber.token.ListTokensRequest.Response', null, global);
goog.exportSymbol('proto.hiber.token.Token', null, global);
goog.exportSymbol('proto.hiber.token.TokenSelection', null, global);
goog.exportSymbol('proto.hiber.token.UpdateTokenOrganizationPermissionsRequest', null, global);
goog.exportSymbol('proto.hiber.token.UpdateTokenOrganizationPermissionsRequest.Response', null, global);
goog.exportSymbol('proto.hiber.token.UpdateTokenUserPermissionsRequest', null, global);
goog.exportSymbol('proto.hiber.token.UpdateTokenUserPermissionsRequest.Response', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.token.Token = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.token.Token.repeatedFields_, null);
};
goog.inherits(proto.hiber.token.Token, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.token.Token.displayName = 'proto.hiber.token.Token';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.token.Token.repeatedFields_ = [7,8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.token.Token.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.token.Token.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.token.Token} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.token.Token.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    organization: jspb.Message.getFieldWithDefault(msg, 4, ""),
    expiresAt: (f = msg.getExpiresAt()) && base_pb.Timestamp.toObject(includeInstance, f),
    userPermissionsList: jspb.Message.getRepeatedField(msg, 7),
    organizationPermissionsList: jspb.Message.getRepeatedField(msg, 8)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.token.Token}
 */
proto.hiber.token.Token.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.token.Token;
  return proto.hiber.token.Token.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.token.Token} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.token.Token}
 */
proto.hiber.token.Token.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 6:
      var value = new base_pb.Timestamp;
      reader.readMessage(value,base_pb.Timestamp.deserializeBinaryFromReader);
      msg.setExpiresAt(value);
      break;
    case 7:
      var value = /** @type {!Array<!proto.hiber.UserPermission>} */ (reader.readPackedEnum());
      msg.setUserPermissionsList(value);
      break;
    case 8:
      var value = /** @type {!Array<!proto.hiber.OrganizationPermission>} */ (reader.readPackedEnum());
      msg.setOrganizationPermissionsList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.token.Token.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.token.Token.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.token.Token} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.token.Token.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getExpiresAt();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      base_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUserPermissionsList();
  if (f.length > 0) {
    writer.writePackedEnum(
      7,
      f
    );
  }
  f = message.getOrganizationPermissionsList();
  if (f.length > 0) {
    writer.writePackedEnum(
      8,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.hiber.token.Token.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.hiber.token.Token.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.hiber.token.Token.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hiber.token.Token.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string user_id = 3;
 * @return {string}
 */
proto.hiber.token.Token.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.hiber.token.Token.prototype.setUserId = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string organization = 4;
 * @return {string}
 */
proto.hiber.token.Token.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.hiber.token.Token.prototype.setOrganization = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional hiber.Timestamp expires_at = 6;
 * @return {?proto.hiber.Timestamp}
 */
proto.hiber.token.Token.prototype.getExpiresAt = function() {
  return /** @type{?proto.hiber.Timestamp} */ (
    jspb.Message.getWrapperField(this, base_pb.Timestamp, 6));
};


/** @param {?proto.hiber.Timestamp|undefined} value */
proto.hiber.token.Token.prototype.setExpiresAt = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.hiber.token.Token.prototype.clearExpiresAt = function() {
  this.setExpiresAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.hiber.token.Token.prototype.hasExpiresAt = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * repeated hiber.UserPermission user_permissions = 7;
 * @return {!Array<!proto.hiber.UserPermission>}
 */
proto.hiber.token.Token.prototype.getUserPermissionsList = function() {
  return /** @type {!Array<!proto.hiber.UserPermission>} */ (jspb.Message.getRepeatedField(this, 7));
};


/** @param {!Array<!proto.hiber.UserPermission>} value */
proto.hiber.token.Token.prototype.setUserPermissionsList = function(value) {
  jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {!proto.hiber.UserPermission} value
 * @param {number=} opt_index
 */
proto.hiber.token.Token.prototype.addUserPermissions = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


proto.hiber.token.Token.prototype.clearUserPermissionsList = function() {
  this.setUserPermissionsList([]);
};


/**
 * repeated hiber.OrganizationPermission organization_permissions = 8;
 * @return {!Array<!proto.hiber.OrganizationPermission>}
 */
proto.hiber.token.Token.prototype.getOrganizationPermissionsList = function() {
  return /** @type {!Array<!proto.hiber.OrganizationPermission>} */ (jspb.Message.getRepeatedField(this, 8));
};


/** @param {!Array<!proto.hiber.OrganizationPermission>} value */
proto.hiber.token.Token.prototype.setOrganizationPermissionsList = function(value) {
  jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {!proto.hiber.OrganizationPermission} value
 * @param {number=} opt_index
 */
proto.hiber.token.Token.prototype.addOrganizationPermissions = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


proto.hiber.token.Token.prototype.clearOrganizationPermissionsList = function() {
  this.setOrganizationPermissionsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.token.TokenSelection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.token.TokenSelection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.token.TokenSelection.displayName = 'proto.hiber.token.TokenSelection';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.token.TokenSelection.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.token.TokenSelection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.token.TokenSelection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.token.TokenSelection.toObject = function(includeInstance, msg) {
  var f, obj = {
    users: (f = msg.getUsers()) && base_pb.Filter.Users.toObject(includeInstance, f),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    includeExpired: jspb.Message.getFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.token.TokenSelection}
 */
proto.hiber.token.TokenSelection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.token.TokenSelection;
  return proto.hiber.token.TokenSelection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.token.TokenSelection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.token.TokenSelection}
 */
proto.hiber.token.TokenSelection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new base_pb.Filter.Users;
      reader.readMessage(value,base_pb.Filter.Users.deserializeBinaryFromReader);
      msg.setUsers(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludeExpired(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.token.TokenSelection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.token.TokenSelection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.token.TokenSelection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.token.TokenSelection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsers();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      base_pb.Filter.Users.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIncludeExpired();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional hiber.Filter.Users users = 1;
 * @return {?proto.hiber.Filter.Users}
 */
proto.hiber.token.TokenSelection.prototype.getUsers = function() {
  return /** @type{?proto.hiber.Filter.Users} */ (
    jspb.Message.getWrapperField(this, base_pb.Filter.Users, 1));
};


/** @param {?proto.hiber.Filter.Users|undefined} value */
proto.hiber.token.TokenSelection.prototype.setUsers = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.hiber.token.TokenSelection.prototype.clearUsers = function() {
  this.setUsers(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.hiber.token.TokenSelection.prototype.hasUsers = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.hiber.token.TokenSelection.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.hiber.token.TokenSelection.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool include_expired = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.hiber.token.TokenSelection.prototype.getIncludeExpired = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.hiber.token.TokenSelection.prototype.setIncludeExpired = function(value) {
  jspb.Message.setProto3BooleanField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.token.ListTokensRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.token.ListTokensRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.token.ListTokensRequest.displayName = 'proto.hiber.token.ListTokensRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.token.ListTokensRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.token.ListTokensRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.token.ListTokensRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.token.ListTokensRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: jspb.Message.getFieldWithDefault(msg, 1, ""),
    selection: (f = msg.getSelection()) && proto.hiber.token.TokenSelection.toObject(includeInstance, f),
    pagination: (f = msg.getPagination()) && base_pb.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.token.ListTokensRequest}
 */
proto.hiber.token.ListTokensRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.token.ListTokensRequest;
  return proto.hiber.token.ListTokensRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.token.ListTokensRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.token.ListTokensRequest}
 */
proto.hiber.token.ListTokensRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 2:
      var value = new proto.hiber.token.TokenSelection;
      reader.readMessage(value,proto.hiber.token.TokenSelection.deserializeBinaryFromReader);
      msg.setSelection(value);
      break;
    case 3:
      var value = new base_pb.Pagination;
      reader.readMessage(value,base_pb.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.token.ListTokensRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.token.ListTokensRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.token.ListTokensRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.token.ListTokensRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSelection();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.hiber.token.TokenSelection.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      base_pb.Pagination.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.token.ListTokensRequest.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.token.ListTokensRequest.Response.repeatedFields_, null);
};
goog.inherits(proto.hiber.token.ListTokensRequest.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.token.ListTokensRequest.Response.displayName = 'proto.hiber.token.ListTokensRequest.Response';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.token.ListTokensRequest.Response.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.token.ListTokensRequest.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.token.ListTokensRequest.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.token.ListTokensRequest.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.token.ListTokensRequest.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    tokensList: jspb.Message.toObjectList(msg.getTokensList(),
    proto.hiber.token.Token.toObject, includeInstance),
    request: (f = msg.getRequest()) && proto.hiber.token.ListTokensRequest.toObject(includeInstance, f),
    pagination: (f = msg.getPagination()) && base_pb.Pagination.Result.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.token.ListTokensRequest.Response}
 */
proto.hiber.token.ListTokensRequest.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.token.ListTokensRequest.Response;
  return proto.hiber.token.ListTokensRequest.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.token.ListTokensRequest.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.token.ListTokensRequest.Response}
 */
proto.hiber.token.ListTokensRequest.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.hiber.token.Token;
      reader.readMessage(value,proto.hiber.token.Token.deserializeBinaryFromReader);
      msg.addTokens(value);
      break;
    case 2:
      var value = new proto.hiber.token.ListTokensRequest;
      reader.readMessage(value,proto.hiber.token.ListTokensRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    case 3:
      var value = new base_pb.Pagination.Result;
      reader.readMessage(value,base_pb.Pagination.Result.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.token.ListTokensRequest.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.token.ListTokensRequest.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.token.ListTokensRequest.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.token.ListTokensRequest.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTokensList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.hiber.token.Token.serializeBinaryToWriter
    );
  }
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.hiber.token.ListTokensRequest.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      base_pb.Pagination.Result.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Token tokens = 1;
 * @return {!Array<!proto.hiber.token.Token>}
 */
proto.hiber.token.ListTokensRequest.Response.prototype.getTokensList = function() {
  return /** @type{!Array<!proto.hiber.token.Token>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.hiber.token.Token, 1));
};


/** @param {!Array<!proto.hiber.token.Token>} value */
proto.hiber.token.ListTokensRequest.Response.prototype.setTokensList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.hiber.token.Token=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hiber.token.Token}
 */
proto.hiber.token.ListTokensRequest.Response.prototype.addTokens = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.hiber.token.Token, opt_index);
};


proto.hiber.token.ListTokensRequest.Response.prototype.clearTokensList = function() {
  this.setTokensList([]);
};


/**
 * optional ListTokensRequest request = 2;
 * @return {?proto.hiber.token.ListTokensRequest}
 */
proto.hiber.token.ListTokensRequest.Response.prototype.getRequest = function() {
  return /** @type{?proto.hiber.token.ListTokensRequest} */ (
    jspb.Message.getWrapperField(this, proto.hiber.token.ListTokensRequest, 2));
};


/** @param {?proto.hiber.token.ListTokensRequest|undefined} value */
proto.hiber.token.ListTokensRequest.Response.prototype.setRequest = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.token.ListTokensRequest.Response.prototype.clearRequest = function() {
  this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.hiber.token.ListTokensRequest.Response.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional hiber.Pagination.Result pagination = 3;
 * @return {?proto.hiber.Pagination.Result}
 */
proto.hiber.token.ListTokensRequest.Response.prototype.getPagination = function() {
  return /** @type{?proto.hiber.Pagination.Result} */ (
    jspb.Message.getWrapperField(this, base_pb.Pagination.Result, 3));
};


/** @param {?proto.hiber.Pagination.Result|undefined} value */
proto.hiber.token.ListTokensRequest.Response.prototype.setPagination = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.token.ListTokensRequest.Response.prototype.clearPagination = function() {
  this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.hiber.token.ListTokensRequest.Response.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string organization = 1;
 * @return {string}
 */
proto.hiber.token.ListTokensRequest.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.token.ListTokensRequest.prototype.setOrganization = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional TokenSelection selection = 2;
 * @return {?proto.hiber.token.TokenSelection}
 */
proto.hiber.token.ListTokensRequest.prototype.getSelection = function() {
  return /** @type{?proto.hiber.token.TokenSelection} */ (
    jspb.Message.getWrapperField(this, proto.hiber.token.TokenSelection, 2));
};


/** @param {?proto.hiber.token.TokenSelection|undefined} value */
proto.hiber.token.ListTokensRequest.prototype.setSelection = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.token.ListTokensRequest.prototype.clearSelection = function() {
  this.setSelection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.hiber.token.ListTokensRequest.prototype.hasSelection = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional hiber.Pagination pagination = 3;
 * @return {?proto.hiber.Pagination}
 */
proto.hiber.token.ListTokensRequest.prototype.getPagination = function() {
  return /** @type{?proto.hiber.Pagination} */ (
    jspb.Message.getWrapperField(this, base_pb.Pagination, 3));
};


/** @param {?proto.hiber.Pagination|undefined} value */
proto.hiber.token.ListTokensRequest.prototype.setPagination = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.token.ListTokensRequest.prototype.clearPagination = function() {
  this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.hiber.token.ListTokensRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.token.CreateTokenRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.token.CreateTokenRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.token.CreateTokenRequest.displayName = 'proto.hiber.token.CreateTokenRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.token.CreateTokenRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.token.CreateTokenRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.token.CreateTokenRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.token.CreateTokenRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    expiresAt: (f = msg.getExpiresAt()) && base_pb.Timestamp.toObject(includeInstance, f),
    userPermissions: (f = msg.getUserPermissions()) && base_pb.Filter.UserPermissions.toObject(includeInstance, f),
    organizationPermissions: (f = msg.getOrganizationPermissions()) && base_pb.Filter.OrganizationPermissions.toObject(includeInstance, f),
    overrideAllowNoPermissions: jspb.Message.getFieldWithDefault(msg, 7, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.token.CreateTokenRequest}
 */
proto.hiber.token.CreateTokenRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.token.CreateTokenRequest;
  return proto.hiber.token.CreateTokenRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.token.CreateTokenRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.token.CreateTokenRequest}
 */
proto.hiber.token.CreateTokenRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = new base_pb.Timestamp;
      reader.readMessage(value,base_pb.Timestamp.deserializeBinaryFromReader);
      msg.setExpiresAt(value);
      break;
    case 5:
      var value = new base_pb.Filter.UserPermissions;
      reader.readMessage(value,base_pb.Filter.UserPermissions.deserializeBinaryFromReader);
      msg.setUserPermissions(value);
      break;
    case 6:
      var value = new base_pb.Filter.OrganizationPermissions;
      reader.readMessage(value,base_pb.Filter.OrganizationPermissions.deserializeBinaryFromReader);
      msg.setOrganizationPermissions(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOverrideAllowNoPermissions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.token.CreateTokenRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.token.CreateTokenRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.token.CreateTokenRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.token.CreateTokenRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getExpiresAt();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      base_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUserPermissions();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      base_pb.Filter.UserPermissions.serializeBinaryToWriter
    );
  }
  f = message.getOrganizationPermissions();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      base_pb.Filter.OrganizationPermissions.serializeBinaryToWriter
    );
  }
  f = message.getOverrideAllowNoPermissions();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.token.CreateTokenRequest.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.token.CreateTokenRequest.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.token.CreateTokenRequest.Response.displayName = 'proto.hiber.token.CreateTokenRequest.Response';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.token.CreateTokenRequest.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.token.CreateTokenRequest.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.token.CreateTokenRequest.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.token.CreateTokenRequest.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.token.CreateTokenRequest.Response}
 */
proto.hiber.token.CreateTokenRequest.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.token.CreateTokenRequest.Response;
  return proto.hiber.token.CreateTokenRequest.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.token.CreateTokenRequest.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.token.CreateTokenRequest.Response}
 */
proto.hiber.token.CreateTokenRequest.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.token.CreateTokenRequest.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.token.CreateTokenRequest.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.token.CreateTokenRequest.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.token.CreateTokenRequest.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string token = 1;
 * @return {string}
 */
proto.hiber.token.CreateTokenRequest.Response.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.token.CreateTokenRequest.Response.prototype.setToken = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string organization = 1;
 * @return {string}
 */
proto.hiber.token.CreateTokenRequest.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.token.CreateTokenRequest.prototype.setOrganization = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.hiber.token.CreateTokenRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hiber.token.CreateTokenRequest.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional hiber.Timestamp expires_at = 4;
 * @return {?proto.hiber.Timestamp}
 */
proto.hiber.token.CreateTokenRequest.prototype.getExpiresAt = function() {
  return /** @type{?proto.hiber.Timestamp} */ (
    jspb.Message.getWrapperField(this, base_pb.Timestamp, 4));
};


/** @param {?proto.hiber.Timestamp|undefined} value */
proto.hiber.token.CreateTokenRequest.prototype.setExpiresAt = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.hiber.token.CreateTokenRequest.prototype.clearExpiresAt = function() {
  this.setExpiresAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.hiber.token.CreateTokenRequest.prototype.hasExpiresAt = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional hiber.Filter.UserPermissions user_permissions = 5;
 * @return {?proto.hiber.Filter.UserPermissions}
 */
proto.hiber.token.CreateTokenRequest.prototype.getUserPermissions = function() {
  return /** @type{?proto.hiber.Filter.UserPermissions} */ (
    jspb.Message.getWrapperField(this, base_pb.Filter.UserPermissions, 5));
};


/** @param {?proto.hiber.Filter.UserPermissions|undefined} value */
proto.hiber.token.CreateTokenRequest.prototype.setUserPermissions = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.hiber.token.CreateTokenRequest.prototype.clearUserPermissions = function() {
  this.setUserPermissions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.hiber.token.CreateTokenRequest.prototype.hasUserPermissions = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional hiber.Filter.OrganizationPermissions organization_permissions = 6;
 * @return {?proto.hiber.Filter.OrganizationPermissions}
 */
proto.hiber.token.CreateTokenRequest.prototype.getOrganizationPermissions = function() {
  return /** @type{?proto.hiber.Filter.OrganizationPermissions} */ (
    jspb.Message.getWrapperField(this, base_pb.Filter.OrganizationPermissions, 6));
};


/** @param {?proto.hiber.Filter.OrganizationPermissions|undefined} value */
proto.hiber.token.CreateTokenRequest.prototype.setOrganizationPermissions = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.hiber.token.CreateTokenRequest.prototype.clearOrganizationPermissions = function() {
  this.setOrganizationPermissions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.hiber.token.CreateTokenRequest.prototype.hasOrganizationPermissions = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool override_allow_no_permissions = 7;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.hiber.token.CreateTokenRequest.prototype.getOverrideAllowNoPermissions = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 7, false));
};


/** @param {boolean} value */
proto.hiber.token.CreateTokenRequest.prototype.setOverrideAllowNoPermissions = function(value) {
  jspb.Message.setProto3BooleanField(this, 7, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.token.DeleteTokenRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.token.DeleteTokenRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.token.DeleteTokenRequest.displayName = 'proto.hiber.token.DeleteTokenRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.token.DeleteTokenRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.token.DeleteTokenRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.token.DeleteTokenRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.token.DeleteTokenRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tokenId: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.token.DeleteTokenRequest}
 */
proto.hiber.token.DeleteTokenRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.token.DeleteTokenRequest;
  return proto.hiber.token.DeleteTokenRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.token.DeleteTokenRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.token.DeleteTokenRequest}
 */
proto.hiber.token.DeleteTokenRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTokenId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.token.DeleteTokenRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.token.DeleteTokenRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.token.DeleteTokenRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.token.DeleteTokenRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTokenId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.token.DeleteTokenRequest.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.token.DeleteTokenRequest.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.token.DeleteTokenRequest.Response.displayName = 'proto.hiber.token.DeleteTokenRequest.Response';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.token.DeleteTokenRequest.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.token.DeleteTokenRequest.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.token.DeleteTokenRequest.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.token.DeleteTokenRequest.Response.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.token.DeleteTokenRequest.Response}
 */
proto.hiber.token.DeleteTokenRequest.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.token.DeleteTokenRequest.Response;
  return proto.hiber.token.DeleteTokenRequest.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.token.DeleteTokenRequest.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.token.DeleteTokenRequest.Response}
 */
proto.hiber.token.DeleteTokenRequest.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.token.DeleteTokenRequest.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.token.DeleteTokenRequest.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.token.DeleteTokenRequest.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.token.DeleteTokenRequest.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * optional string organization = 1;
 * @return {string}
 */
proto.hiber.token.DeleteTokenRequest.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.token.DeleteTokenRequest.prototype.setOrganization = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 token_id = 2;
 * @return {number}
 */
proto.hiber.token.DeleteTokenRequest.prototype.getTokenId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.hiber.token.DeleteTokenRequest.prototype.setTokenId = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.token.UpdateTokenOrganizationPermissionsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.token.UpdateTokenOrganizationPermissionsRequest.repeatedFields_, null);
};
goog.inherits(proto.hiber.token.UpdateTokenOrganizationPermissionsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.token.UpdateTokenOrganizationPermissionsRequest.displayName = 'proto.hiber.token.UpdateTokenOrganizationPermissionsRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.token.UpdateTokenOrganizationPermissionsRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.token.UpdateTokenOrganizationPermissionsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.token.UpdateTokenOrganizationPermissionsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.token.UpdateTokenOrganizationPermissionsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.token.UpdateTokenOrganizationPermissionsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tokenIdsList: jspb.Message.getRepeatedField(msg, 2),
    newOrganizationPermissions: (f = msg.getNewOrganizationPermissions()) && base_pb.Filter.OrganizationPermissions.toObject(includeInstance, f),
    overrideAllowNoPermissions: jspb.Message.getFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.token.UpdateTokenOrganizationPermissionsRequest}
 */
proto.hiber.token.UpdateTokenOrganizationPermissionsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.token.UpdateTokenOrganizationPermissionsRequest;
  return proto.hiber.token.UpdateTokenOrganizationPermissionsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.token.UpdateTokenOrganizationPermissionsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.token.UpdateTokenOrganizationPermissionsRequest}
 */
proto.hiber.token.UpdateTokenOrganizationPermissionsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 2:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt64());
      msg.setTokenIdsList(value);
      break;
    case 3:
      var value = new base_pb.Filter.OrganizationPermissions;
      reader.readMessage(value,base_pb.Filter.OrganizationPermissions.deserializeBinaryFromReader);
      msg.setNewOrganizationPermissions(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOverrideAllowNoPermissions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.token.UpdateTokenOrganizationPermissionsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.token.UpdateTokenOrganizationPermissionsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.token.UpdateTokenOrganizationPermissionsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.token.UpdateTokenOrganizationPermissionsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTokenIdsList();
  if (f.length > 0) {
    writer.writePackedInt64(
      2,
      f
    );
  }
  f = message.getNewOrganizationPermissions();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      base_pb.Filter.OrganizationPermissions.serializeBinaryToWriter
    );
  }
  f = message.getOverrideAllowNoPermissions();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.token.UpdateTokenOrganizationPermissionsRequest.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.token.UpdateTokenOrganizationPermissionsRequest.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.token.UpdateTokenOrganizationPermissionsRequest.Response.displayName = 'proto.hiber.token.UpdateTokenOrganizationPermissionsRequest.Response';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.token.UpdateTokenOrganizationPermissionsRequest.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.token.UpdateTokenOrganizationPermissionsRequest.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.token.UpdateTokenOrganizationPermissionsRequest.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.token.UpdateTokenOrganizationPermissionsRequest.Response.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.token.UpdateTokenOrganizationPermissionsRequest.Response}
 */
proto.hiber.token.UpdateTokenOrganizationPermissionsRequest.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.token.UpdateTokenOrganizationPermissionsRequest.Response;
  return proto.hiber.token.UpdateTokenOrganizationPermissionsRequest.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.token.UpdateTokenOrganizationPermissionsRequest.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.token.UpdateTokenOrganizationPermissionsRequest.Response}
 */
proto.hiber.token.UpdateTokenOrganizationPermissionsRequest.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.token.UpdateTokenOrganizationPermissionsRequest.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.token.UpdateTokenOrganizationPermissionsRequest.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.token.UpdateTokenOrganizationPermissionsRequest.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.token.UpdateTokenOrganizationPermissionsRequest.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * optional string organization = 1;
 * @return {string}
 */
proto.hiber.token.UpdateTokenOrganizationPermissionsRequest.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.token.UpdateTokenOrganizationPermissionsRequest.prototype.setOrganization = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated int64 token_ids = 2;
 * @return {!Array<number>}
 */
proto.hiber.token.UpdateTokenOrganizationPermissionsRequest.prototype.getTokenIdsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array<number>} value */
proto.hiber.token.UpdateTokenOrganizationPermissionsRequest.prototype.setTokenIdsList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.hiber.token.UpdateTokenOrganizationPermissionsRequest.prototype.addTokenIds = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.hiber.token.UpdateTokenOrganizationPermissionsRequest.prototype.clearTokenIdsList = function() {
  this.setTokenIdsList([]);
};


/**
 * optional hiber.Filter.OrganizationPermissions new_organization_permissions = 3;
 * @return {?proto.hiber.Filter.OrganizationPermissions}
 */
proto.hiber.token.UpdateTokenOrganizationPermissionsRequest.prototype.getNewOrganizationPermissions = function() {
  return /** @type{?proto.hiber.Filter.OrganizationPermissions} */ (
    jspb.Message.getWrapperField(this, base_pb.Filter.OrganizationPermissions, 3));
};


/** @param {?proto.hiber.Filter.OrganizationPermissions|undefined} value */
proto.hiber.token.UpdateTokenOrganizationPermissionsRequest.prototype.setNewOrganizationPermissions = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.token.UpdateTokenOrganizationPermissionsRequest.prototype.clearNewOrganizationPermissions = function() {
  this.setNewOrganizationPermissions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.hiber.token.UpdateTokenOrganizationPermissionsRequest.prototype.hasNewOrganizationPermissions = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool override_allow_no_permissions = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.hiber.token.UpdateTokenOrganizationPermissionsRequest.prototype.getOverrideAllowNoPermissions = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.hiber.token.UpdateTokenOrganizationPermissionsRequest.prototype.setOverrideAllowNoPermissions = function(value) {
  jspb.Message.setProto3BooleanField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.token.UpdateTokenUserPermissionsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.token.UpdateTokenUserPermissionsRequest.repeatedFields_, null);
};
goog.inherits(proto.hiber.token.UpdateTokenUserPermissionsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.token.UpdateTokenUserPermissionsRequest.displayName = 'proto.hiber.token.UpdateTokenUserPermissionsRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.token.UpdateTokenUserPermissionsRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.token.UpdateTokenUserPermissionsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.token.UpdateTokenUserPermissionsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.token.UpdateTokenUserPermissionsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.token.UpdateTokenUserPermissionsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tokenIdsList: jspb.Message.getRepeatedField(msg, 2),
    newUserPermissions: (f = msg.getNewUserPermissions()) && base_pb.Filter.UserPermissions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.token.UpdateTokenUserPermissionsRequest}
 */
proto.hiber.token.UpdateTokenUserPermissionsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.token.UpdateTokenUserPermissionsRequest;
  return proto.hiber.token.UpdateTokenUserPermissionsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.token.UpdateTokenUserPermissionsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.token.UpdateTokenUserPermissionsRequest}
 */
proto.hiber.token.UpdateTokenUserPermissionsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 2:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt64());
      msg.setTokenIdsList(value);
      break;
    case 4:
      var value = new base_pb.Filter.UserPermissions;
      reader.readMessage(value,base_pb.Filter.UserPermissions.deserializeBinaryFromReader);
      msg.setNewUserPermissions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.token.UpdateTokenUserPermissionsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.token.UpdateTokenUserPermissionsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.token.UpdateTokenUserPermissionsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.token.UpdateTokenUserPermissionsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTokenIdsList();
  if (f.length > 0) {
    writer.writePackedInt64(
      2,
      f
    );
  }
  f = message.getNewUserPermissions();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      base_pb.Filter.UserPermissions.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.token.UpdateTokenUserPermissionsRequest.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.token.UpdateTokenUserPermissionsRequest.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.token.UpdateTokenUserPermissionsRequest.Response.displayName = 'proto.hiber.token.UpdateTokenUserPermissionsRequest.Response';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.token.UpdateTokenUserPermissionsRequest.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.token.UpdateTokenUserPermissionsRequest.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.token.UpdateTokenUserPermissionsRequest.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.token.UpdateTokenUserPermissionsRequest.Response.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.token.UpdateTokenUserPermissionsRequest.Response}
 */
proto.hiber.token.UpdateTokenUserPermissionsRequest.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.token.UpdateTokenUserPermissionsRequest.Response;
  return proto.hiber.token.UpdateTokenUserPermissionsRequest.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.token.UpdateTokenUserPermissionsRequest.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.token.UpdateTokenUserPermissionsRequest.Response}
 */
proto.hiber.token.UpdateTokenUserPermissionsRequest.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.token.UpdateTokenUserPermissionsRequest.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.token.UpdateTokenUserPermissionsRequest.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.token.UpdateTokenUserPermissionsRequest.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.token.UpdateTokenUserPermissionsRequest.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * optional string organization = 1;
 * @return {string}
 */
proto.hiber.token.UpdateTokenUserPermissionsRequest.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.token.UpdateTokenUserPermissionsRequest.prototype.setOrganization = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated int64 token_ids = 2;
 * @return {!Array<number>}
 */
proto.hiber.token.UpdateTokenUserPermissionsRequest.prototype.getTokenIdsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array<number>} value */
proto.hiber.token.UpdateTokenUserPermissionsRequest.prototype.setTokenIdsList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.hiber.token.UpdateTokenUserPermissionsRequest.prototype.addTokenIds = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.hiber.token.UpdateTokenUserPermissionsRequest.prototype.clearTokenIdsList = function() {
  this.setTokenIdsList([]);
};


/**
 * optional hiber.Filter.UserPermissions new_user_permissions = 4;
 * @return {?proto.hiber.Filter.UserPermissions}
 */
proto.hiber.token.UpdateTokenUserPermissionsRequest.prototype.getNewUserPermissions = function() {
  return /** @type{?proto.hiber.Filter.UserPermissions} */ (
    jspb.Message.getWrapperField(this, base_pb.Filter.UserPermissions, 4));
};


/** @param {?proto.hiber.Filter.UserPermissions|undefined} value */
proto.hiber.token.UpdateTokenUserPermissionsRequest.prototype.setNewUserPermissions = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.hiber.token.UpdateTokenUserPermissionsRequest.prototype.clearNewUserPermissions = function() {
  this.setNewUserPermissions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.hiber.token.UpdateTokenUserPermissionsRequest.prototype.hasNewUserPermissions = function() {
  return jspb.Message.getField(this, 4) != null;
};


goog.object.extend(exports, proto.hiber.token);
