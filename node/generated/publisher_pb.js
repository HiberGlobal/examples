/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var base_pb = require('./base_pb.js');
var tag_pb = require('./tag_pb.js');
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.exportSymbol('proto.hiber.publisher.CreatePublisherRequest', null, global);
goog.exportSymbol('proto.hiber.publisher.CreatePublisherRequest.Response', null, global);
goog.exportSymbol('proto.hiber.publisher.DeletePublisherRequest', null, global);
goog.exportSymbol('proto.hiber.publisher.DeletePublisherRequest.Response', null, global);
goog.exportSymbol('proto.hiber.publisher.DisablePublisherRequest', null, global);
goog.exportSymbol('proto.hiber.publisher.DisablePublisherRequest.Response', null, global);
goog.exportSymbol('proto.hiber.publisher.EnablePublisherRequest', null, global);
goog.exportSymbol('proto.hiber.publisher.EnablePublisherRequest.Response', null, global);
goog.exportSymbol('proto.hiber.publisher.ListPublishersRequest', null, global);
goog.exportSymbol('proto.hiber.publisher.ListPublishersRequest.Response', null, global);
goog.exportSymbol('proto.hiber.publisher.Publisher', null, global);
goog.exportSymbol('proto.hiber.publisher.Publisher.ContentType', null, global);
goog.exportSymbol('proto.hiber.publisher.Publisher.Data', null, global);
goog.exportSymbol('proto.hiber.publisher.Publisher.Data.HTTPConfig', null, global);
goog.exportSymbol('proto.hiber.publisher.Publisher.Data.MQTTConfig', null, global);
goog.exportSymbol('proto.hiber.publisher.Publisher.Data.MQTTConfig.QoS', null, global);
goog.exportSymbol('proto.hiber.publisher.Publisher.Filters', null, global);
goog.exportSymbol('proto.hiber.publisher.Publisher.Type', null, global);
goog.exportSymbol('proto.hiber.publisher.PublisherCall', null, global);
goog.exportSymbol('proto.hiber.publisher.PublisherHistoryRequest', null, global);
goog.exportSymbol('proto.hiber.publisher.PublisherHistoryRequest.Response', null, global);
goog.exportSymbol('proto.hiber.publisher.PublisherHistorySelection', null, global);
goog.exportSymbol('proto.hiber.publisher.PublisherSelection', null, global);
goog.exportSymbol('proto.hiber.publisher.UpdatePublisherRequest', null, global);
goog.exportSymbol('proto.hiber.publisher.UpdatePublisherRequest.Response', null, global);
goog.exportSymbol('proto.hiber.publisher.UpdatePublisherRequest.UpdateEvents', null, global);
goog.exportSymbol('proto.hiber.publisher.UpdatePublisherRequest.UpdateModems', null, global);
goog.exportSymbol('proto.hiber.publisher.UpdatePublisherRequest.UpdateTags', null, global);
goog.exportSymbol('proto.hiber.publisher.UpdatePublisherTagsRequest', null, global);
goog.exportSymbol('proto.hiber.publisher.UpdatePublisherTagsRequest.Response', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.publisher.Publisher = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.publisher.Publisher.repeatedFields_, null);
};
goog.inherits(proto.hiber.publisher.Publisher, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.publisher.Publisher.displayName = 'proto.hiber.publisher.Publisher';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.publisher.Publisher.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.publisher.Publisher.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.publisher.Publisher.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.publisher.Publisher} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.publisher.Publisher.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    data: (f = msg.getData()) && proto.hiber.publisher.Publisher.Data.toObject(includeInstance, f),
    filters: (f = msg.getFilters()) && proto.hiber.publisher.Publisher.Filters.toObject(includeInstance, f),
    tagsList: jspb.Message.toObjectList(msg.getTagsList(),
    tag_pb.Tag.toObject, includeInstance),
    health: jspb.Message.getFieldWithDefault(msg, 6, 0),
    type: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.publisher.Publisher}
 */
proto.hiber.publisher.Publisher.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.publisher.Publisher;
  return proto.hiber.publisher.Publisher.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.publisher.Publisher} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.publisher.Publisher}
 */
proto.hiber.publisher.Publisher.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = new proto.hiber.publisher.Publisher.Data;
      reader.readMessage(value,proto.hiber.publisher.Publisher.Data.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 4:
      var value = new proto.hiber.publisher.Publisher.Filters;
      reader.readMessage(value,proto.hiber.publisher.Publisher.Filters.deserializeBinaryFromReader);
      msg.setFilters(value);
      break;
    case 5:
      var value = new tag_pb.Tag;
      reader.readMessage(value,tag_pb.Tag.deserializeBinaryFromReader);
      msg.addTags(value);
      break;
    case 6:
      var value = /** @type {!proto.hiber.Health} */ (reader.readEnum());
      msg.setHealth(value);
      break;
    case 7:
      var value = /** @type {!proto.hiber.publisher.Publisher.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.publisher.Publisher.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.publisher.Publisher.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.publisher.Publisher} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.publisher.Publisher.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.hiber.publisher.Publisher.Data.serializeBinaryToWriter
    );
  }
  f = message.getFilters();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.hiber.publisher.Publisher.Filters.serializeBinaryToWriter
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      tag_pb.Tag.serializeBinaryToWriter
    );
  }
  f = message.getHealth();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.hiber.publisher.Publisher.ContentType = {
  DEFAULT: 0,
  JSON: 1,
  PROTO: 2
};

/**
 * @enum {number}
 */
proto.hiber.publisher.Publisher.Type = {
  HTTP: 0,
  MQTT: 1
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.publisher.Publisher.Data = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.hiber.publisher.Publisher.Data.oneofGroups_);
};
goog.inherits(proto.hiber.publisher.Publisher.Data, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.publisher.Publisher.Data.displayName = 'proto.hiber.publisher.Publisher.Data';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.hiber.publisher.Publisher.Data.oneofGroups_ = [[8,9]];

/**
 * @enum {number}
 */
proto.hiber.publisher.Publisher.Data.ConfigCase = {
  CONFIG_NOT_SET: 0,
  HTTP: 8,
  MQTT: 9
};

/**
 * @return {proto.hiber.publisher.Publisher.Data.ConfigCase}
 */
proto.hiber.publisher.Publisher.Data.prototype.getConfigCase = function() {
  return /** @type {proto.hiber.publisher.Publisher.Data.ConfigCase} */(jspb.Message.computeOneofCase(this, proto.hiber.publisher.Publisher.Data.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.publisher.Publisher.Data.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.publisher.Publisher.Data.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.publisher.Publisher.Data} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.publisher.Publisher.Data.toObject = function(includeInstance, msg) {
  var f, obj = {
    url: jspb.Message.getFieldWithDefault(msg, 1, ""),
    contentType: jspb.Message.getFieldWithDefault(msg, 2, 0),
    disabled: jspb.Message.getFieldWithDefault(msg, 3, false),
    certificateId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    certificateName: jspb.Message.getFieldWithDefault(msg, 5, ""),
    caCertificateId: jspb.Message.getFieldWithDefault(msg, 6, 0),
    caCertificateName: jspb.Message.getFieldWithDefault(msg, 7, ""),
    http: (f = msg.getHttp()) && proto.hiber.publisher.Publisher.Data.HTTPConfig.toObject(includeInstance, f),
    mqtt: (f = msg.getMqtt()) && proto.hiber.publisher.Publisher.Data.MQTTConfig.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.publisher.Publisher.Data}
 */
proto.hiber.publisher.Publisher.Data.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.publisher.Publisher.Data;
  return proto.hiber.publisher.Publisher.Data.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.publisher.Publisher.Data} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.publisher.Publisher.Data}
 */
proto.hiber.publisher.Publisher.Data.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 2:
      var value = /** @type {!proto.hiber.publisher.Publisher.ContentType} */ (reader.readEnum());
      msg.setContentType(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDisabled(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCertificateId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCertificateName(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCaCertificateId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCaCertificateName(value);
      break;
    case 8:
      var value = new proto.hiber.publisher.Publisher.Data.HTTPConfig;
      reader.readMessage(value,proto.hiber.publisher.Publisher.Data.HTTPConfig.deserializeBinaryFromReader);
      msg.setHttp(value);
      break;
    case 9:
      var value = new proto.hiber.publisher.Publisher.Data.MQTTConfig;
      reader.readMessage(value,proto.hiber.publisher.Publisher.Data.MQTTConfig.deserializeBinaryFromReader);
      msg.setMqtt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.publisher.Publisher.Data.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.publisher.Publisher.Data.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.publisher.Publisher.Data} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.publisher.Publisher.Data.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getContentType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getDisabled();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getCertificateId();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getCertificateName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCaCertificateId();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getCaCertificateName();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getHttp();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.hiber.publisher.Publisher.Data.HTTPConfig.serializeBinaryToWriter
    );
  }
  f = message.getMqtt();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.hiber.publisher.Publisher.Data.MQTTConfig.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.publisher.Publisher.Data.MQTTConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.publisher.Publisher.Data.MQTTConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.publisher.Publisher.Data.MQTTConfig.displayName = 'proto.hiber.publisher.Publisher.Data.MQTTConfig';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.publisher.Publisher.Data.MQTTConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.publisher.Publisher.Data.MQTTConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.publisher.Publisher.Data.MQTTConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.publisher.Publisher.Data.MQTTConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    topic: jspb.Message.getFieldWithDefault(msg, 1, ""),
    qos: jspb.Message.getFieldWithDefault(msg, 2, 0),
    username: jspb.Message.getFieldWithDefault(msg, 3, ""),
    password: jspb.Message.getFieldWithDefault(msg, 4, ""),
    identifier: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.publisher.Publisher.Data.MQTTConfig}
 */
proto.hiber.publisher.Publisher.Data.MQTTConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.publisher.Publisher.Data.MQTTConfig;
  return proto.hiber.publisher.Publisher.Data.MQTTConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.publisher.Publisher.Data.MQTTConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.publisher.Publisher.Data.MQTTConfig}
 */
proto.hiber.publisher.Publisher.Data.MQTTConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTopic(value);
      break;
    case 2:
      var value = /** @type {!proto.hiber.publisher.Publisher.Data.MQTTConfig.QoS} */ (reader.readEnum());
      msg.setQos(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentifier(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.publisher.Publisher.Data.MQTTConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.publisher.Publisher.Data.MQTTConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.publisher.Publisher.Data.MQTTConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.publisher.Publisher.Data.MQTTConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTopic();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getQos();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getIdentifier();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.hiber.publisher.Publisher.Data.MQTTConfig.QoS = {
  DEFAULT: 0,
  AT_MOST_ONCE: 1,
  AT_LEAST_ONCE: 2,
  EXACTLY_ONCE: 3
};

/**
 * optional string topic = 1;
 * @return {string}
 */
proto.hiber.publisher.Publisher.Data.MQTTConfig.prototype.getTopic = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.publisher.Publisher.Data.MQTTConfig.prototype.setTopic = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional QoS qos = 2;
 * @return {!proto.hiber.publisher.Publisher.Data.MQTTConfig.QoS}
 */
proto.hiber.publisher.Publisher.Data.MQTTConfig.prototype.getQos = function() {
  return /** @type {!proto.hiber.publisher.Publisher.Data.MQTTConfig.QoS} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.hiber.publisher.Publisher.Data.MQTTConfig.QoS} value */
proto.hiber.publisher.Publisher.Data.MQTTConfig.prototype.setQos = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string username = 3;
 * @return {string}
 */
proto.hiber.publisher.Publisher.Data.MQTTConfig.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.hiber.publisher.Publisher.Data.MQTTConfig.prototype.setUsername = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string password = 4;
 * @return {string}
 */
proto.hiber.publisher.Publisher.Data.MQTTConfig.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.hiber.publisher.Publisher.Data.MQTTConfig.prototype.setPassword = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string identifier = 5;
 * @return {string}
 */
proto.hiber.publisher.Publisher.Data.MQTTConfig.prototype.getIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.hiber.publisher.Publisher.Data.MQTTConfig.prototype.setIdentifier = function(value) {
  jspb.Message.setField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.publisher.Publisher.Data.HTTPConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.publisher.Publisher.Data.HTTPConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.publisher.Publisher.Data.HTTPConfig.displayName = 'proto.hiber.publisher.Publisher.Data.HTTPConfig';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.publisher.Publisher.Data.HTTPConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.publisher.Publisher.Data.HTTPConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.publisher.Publisher.Data.HTTPConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.publisher.Publisher.Data.HTTPConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    secret: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.publisher.Publisher.Data.HTTPConfig}
 */
proto.hiber.publisher.Publisher.Data.HTTPConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.publisher.Publisher.Data.HTTPConfig;
  return proto.hiber.publisher.Publisher.Data.HTTPConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.publisher.Publisher.Data.HTTPConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.publisher.Publisher.Data.HTTPConfig}
 */
proto.hiber.publisher.Publisher.Data.HTTPConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecret(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.publisher.Publisher.Data.HTTPConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.publisher.Publisher.Data.HTTPConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.publisher.Publisher.Data.HTTPConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.publisher.Publisher.Data.HTTPConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSecret();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string secret = 1;
 * @return {string}
 */
proto.hiber.publisher.Publisher.Data.HTTPConfig.prototype.getSecret = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.publisher.Publisher.Data.HTTPConfig.prototype.setSecret = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string url = 1;
 * @return {string}
 */
proto.hiber.publisher.Publisher.Data.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.publisher.Publisher.Data.prototype.setUrl = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional ContentType content_type = 2;
 * @return {!proto.hiber.publisher.Publisher.ContentType}
 */
proto.hiber.publisher.Publisher.Data.prototype.getContentType = function() {
  return /** @type {!proto.hiber.publisher.Publisher.ContentType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.hiber.publisher.Publisher.ContentType} value */
proto.hiber.publisher.Publisher.Data.prototype.setContentType = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional bool disabled = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.hiber.publisher.Publisher.Data.prototype.getDisabled = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.hiber.publisher.Publisher.Data.prototype.setDisabled = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional int64 certificate_id = 4;
 * @return {number}
 */
proto.hiber.publisher.Publisher.Data.prototype.getCertificateId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.hiber.publisher.Publisher.Data.prototype.setCertificateId = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string certificate_name = 5;
 * @return {string}
 */
proto.hiber.publisher.Publisher.Data.prototype.getCertificateName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.hiber.publisher.Publisher.Data.prototype.setCertificateName = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional int64 ca_certificate_id = 6;
 * @return {number}
 */
proto.hiber.publisher.Publisher.Data.prototype.getCaCertificateId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.hiber.publisher.Publisher.Data.prototype.setCaCertificateId = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional string ca_certificate_name = 7;
 * @return {string}
 */
proto.hiber.publisher.Publisher.Data.prototype.getCaCertificateName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.hiber.publisher.Publisher.Data.prototype.setCaCertificateName = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * optional HTTPConfig http = 8;
 * @return {?proto.hiber.publisher.Publisher.Data.HTTPConfig}
 */
proto.hiber.publisher.Publisher.Data.prototype.getHttp = function() {
  return /** @type{?proto.hiber.publisher.Publisher.Data.HTTPConfig} */ (
    jspb.Message.getWrapperField(this, proto.hiber.publisher.Publisher.Data.HTTPConfig, 8));
};


/** @param {?proto.hiber.publisher.Publisher.Data.HTTPConfig|undefined} value */
proto.hiber.publisher.Publisher.Data.prototype.setHttp = function(value) {
  jspb.Message.setOneofWrapperField(this, 8, proto.hiber.publisher.Publisher.Data.oneofGroups_[0], value);
};


proto.hiber.publisher.Publisher.Data.prototype.clearHttp = function() {
  this.setHttp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.publisher.Publisher.Data.prototype.hasHttp = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional MQTTConfig mqtt = 9;
 * @return {?proto.hiber.publisher.Publisher.Data.MQTTConfig}
 */
proto.hiber.publisher.Publisher.Data.prototype.getMqtt = function() {
  return /** @type{?proto.hiber.publisher.Publisher.Data.MQTTConfig} */ (
    jspb.Message.getWrapperField(this, proto.hiber.publisher.Publisher.Data.MQTTConfig, 9));
};


/** @param {?proto.hiber.publisher.Publisher.Data.MQTTConfig|undefined} value */
proto.hiber.publisher.Publisher.Data.prototype.setMqtt = function(value) {
  jspb.Message.setOneofWrapperField(this, 9, proto.hiber.publisher.Publisher.Data.oneofGroups_[0], value);
};


proto.hiber.publisher.Publisher.Data.prototype.clearMqtt = function() {
  this.setMqtt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.publisher.Publisher.Data.prototype.hasMqtt = function() {
  return jspb.Message.getField(this, 9) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.publisher.Publisher.Filters = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.publisher.Publisher.Filters, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.publisher.Publisher.Filters.displayName = 'proto.hiber.publisher.Publisher.Filters';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.publisher.Publisher.Filters.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.publisher.Publisher.Filters.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.publisher.Publisher.Filters} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.publisher.Publisher.Filters.toObject = function(includeInstance, msg) {
  var f, obj = {
    eventTypes: (f = msg.getEventTypes()) && base_pb.Filter.Events.toObject(includeInstance, f),
    modemNumbers: (f = msg.getModemNumbers()) && base_pb.Filter.Modems.toObject(includeInstance, f),
    tags: (f = msg.getTags()) && base_pb.Filter.Tags.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.publisher.Publisher.Filters}
 */
proto.hiber.publisher.Publisher.Filters.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.publisher.Publisher.Filters;
  return proto.hiber.publisher.Publisher.Filters.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.publisher.Publisher.Filters} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.publisher.Publisher.Filters}
 */
proto.hiber.publisher.Publisher.Filters.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new base_pb.Filter.Events;
      reader.readMessage(value,base_pb.Filter.Events.deserializeBinaryFromReader);
      msg.setEventTypes(value);
      break;
    case 2:
      var value = new base_pb.Filter.Modems;
      reader.readMessage(value,base_pb.Filter.Modems.deserializeBinaryFromReader);
      msg.setModemNumbers(value);
      break;
    case 3:
      var value = new base_pb.Filter.Tags;
      reader.readMessage(value,base_pb.Filter.Tags.deserializeBinaryFromReader);
      msg.setTags(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.publisher.Publisher.Filters.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.publisher.Publisher.Filters.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.publisher.Publisher.Filters} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.publisher.Publisher.Filters.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventTypes();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      base_pb.Filter.Events.serializeBinaryToWriter
    );
  }
  f = message.getModemNumbers();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      base_pb.Filter.Modems.serializeBinaryToWriter
    );
  }
  f = message.getTags();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      base_pb.Filter.Tags.serializeBinaryToWriter
    );
  }
};


/**
 * optional hiber.Filter.Events event_types = 1;
 * @return {?proto.hiber.Filter.Events}
 */
proto.hiber.publisher.Publisher.Filters.prototype.getEventTypes = function() {
  return /** @type{?proto.hiber.Filter.Events} */ (
    jspb.Message.getWrapperField(this, base_pb.Filter.Events, 1));
};


/** @param {?proto.hiber.Filter.Events|undefined} value */
proto.hiber.publisher.Publisher.Filters.prototype.setEventTypes = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.hiber.publisher.Publisher.Filters.prototype.clearEventTypes = function() {
  this.setEventTypes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.publisher.Publisher.Filters.prototype.hasEventTypes = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional hiber.Filter.Modems modem_numbers = 2;
 * @return {?proto.hiber.Filter.Modems}
 */
proto.hiber.publisher.Publisher.Filters.prototype.getModemNumbers = function() {
  return /** @type{?proto.hiber.Filter.Modems} */ (
    jspb.Message.getWrapperField(this, base_pb.Filter.Modems, 2));
};


/** @param {?proto.hiber.Filter.Modems|undefined} value */
proto.hiber.publisher.Publisher.Filters.prototype.setModemNumbers = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.publisher.Publisher.Filters.prototype.clearModemNumbers = function() {
  this.setModemNumbers(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.publisher.Publisher.Filters.prototype.hasModemNumbers = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional hiber.Filter.Tags tags = 3;
 * @return {?proto.hiber.Filter.Tags}
 */
proto.hiber.publisher.Publisher.Filters.prototype.getTags = function() {
  return /** @type{?proto.hiber.Filter.Tags} */ (
    jspb.Message.getWrapperField(this, base_pb.Filter.Tags, 3));
};


/** @param {?proto.hiber.Filter.Tags|undefined} value */
proto.hiber.publisher.Publisher.Filters.prototype.setTags = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.publisher.Publisher.Filters.prototype.clearTags = function() {
  this.setTags(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.publisher.Publisher.Filters.prototype.hasTags = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.hiber.publisher.Publisher.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.hiber.publisher.Publisher.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.hiber.publisher.Publisher.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hiber.publisher.Publisher.prototype.setDescription = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional Data data = 3;
 * @return {?proto.hiber.publisher.Publisher.Data}
 */
proto.hiber.publisher.Publisher.prototype.getData = function() {
  return /** @type{?proto.hiber.publisher.Publisher.Data} */ (
    jspb.Message.getWrapperField(this, proto.hiber.publisher.Publisher.Data, 3));
};


/** @param {?proto.hiber.publisher.Publisher.Data|undefined} value */
proto.hiber.publisher.Publisher.prototype.setData = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.publisher.Publisher.prototype.clearData = function() {
  this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.publisher.Publisher.prototype.hasData = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Filters filters = 4;
 * @return {?proto.hiber.publisher.Publisher.Filters}
 */
proto.hiber.publisher.Publisher.prototype.getFilters = function() {
  return /** @type{?proto.hiber.publisher.Publisher.Filters} */ (
    jspb.Message.getWrapperField(this, proto.hiber.publisher.Publisher.Filters, 4));
};


/** @param {?proto.hiber.publisher.Publisher.Filters|undefined} value */
proto.hiber.publisher.Publisher.prototype.setFilters = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.hiber.publisher.Publisher.prototype.clearFilters = function() {
  this.setFilters(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.publisher.Publisher.prototype.hasFilters = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated hiber.tag.Tag tags = 5;
 * @return {!Array.<!proto.hiber.tag.Tag>}
 */
proto.hiber.publisher.Publisher.prototype.getTagsList = function() {
  return /** @type{!Array.<!proto.hiber.tag.Tag>} */ (
    jspb.Message.getRepeatedWrapperField(this, tag_pb.Tag, 5));
};


/** @param {!Array.<!proto.hiber.tag.Tag>} value */
proto.hiber.publisher.Publisher.prototype.setTagsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.hiber.tag.Tag=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hiber.tag.Tag}
 */
proto.hiber.publisher.Publisher.prototype.addTags = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.hiber.tag.Tag, opt_index);
};


proto.hiber.publisher.Publisher.prototype.clearTagsList = function() {
  this.setTagsList([]);
};


/**
 * optional hiber.Health health = 6;
 * @return {!proto.hiber.Health}
 */
proto.hiber.publisher.Publisher.prototype.getHealth = function() {
  return /** @type {!proto.hiber.Health} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {!proto.hiber.Health} value */
proto.hiber.publisher.Publisher.prototype.setHealth = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional Type type = 7;
 * @return {!proto.hiber.publisher.Publisher.Type}
 */
proto.hiber.publisher.Publisher.prototype.getType = function() {
  return /** @type {!proto.hiber.publisher.Publisher.Type} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {!proto.hiber.publisher.Publisher.Type} value */
proto.hiber.publisher.Publisher.prototype.setType = function(value) {
  jspb.Message.setField(this, 7, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.publisher.PublisherSelection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.publisher.PublisherSelection.repeatedFields_, null);
};
goog.inherits(proto.hiber.publisher.PublisherSelection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.publisher.PublisherSelection.displayName = 'proto.hiber.publisher.PublisherSelection';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.publisher.PublisherSelection.repeatedFields_ = [4,5,8,9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.publisher.PublisherSelection.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.publisher.PublisherSelection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.publisher.PublisherSelection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.publisher.PublisherSelection.toObject = function(includeInstance, msg) {
  var f, obj = {
    publishers: (f = msg.getPublishers()) && base_pb.Filter.Publishers.toObject(includeInstance, f),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    searchUrl: jspb.Message.getFieldWithDefault(msg, 3, ""),
    contentTypesList: jspb.Message.getRepeatedField(msg, 4),
    certificateIdsList: jspb.Message.getRepeatedField(msg, 5),
    searchMqttTopic: jspb.Message.getFieldWithDefault(msg, 6, ""),
    tags: (f = msg.getTags()) && tag_pb.TagSelection.toObject(includeInstance, f),
    healthList: jspb.Message.getRepeatedField(msg, 8),
    typesList: jspb.Message.getRepeatedField(msg, 9)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.publisher.PublisherSelection}
 */
proto.hiber.publisher.PublisherSelection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.publisher.PublisherSelection;
  return proto.hiber.publisher.PublisherSelection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.publisher.PublisherSelection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.publisher.PublisherSelection}
 */
proto.hiber.publisher.PublisherSelection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new base_pb.Filter.Publishers;
      reader.readMessage(value,base_pb.Filter.Publishers.deserializeBinaryFromReader);
      msg.setPublishers(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSearchUrl(value);
      break;
    case 4:
      var value = /** @type {!Array.<!proto.hiber.publisher.Publisher.ContentType>} */ (reader.readPackedEnum());
      msg.setContentTypesList(value);
      break;
    case 5:
      var value = /** @type {!Array.<number>} */ (reader.readPackedInt64());
      msg.setCertificateIdsList(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSearchMqttTopic(value);
      break;
    case 7:
      var value = new tag_pb.TagSelection;
      reader.readMessage(value,tag_pb.TagSelection.deserializeBinaryFromReader);
      msg.setTags(value);
      break;
    case 8:
      var value = /** @type {!Array.<!proto.hiber.Health>} */ (reader.readPackedEnum());
      msg.setHealthList(value);
      break;
    case 9:
      var value = /** @type {!Array.<!proto.hiber.publisher.Publisher.Type>} */ (reader.readPackedEnum());
      msg.setTypesList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.publisher.PublisherSelection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.publisher.PublisherSelection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.publisher.PublisherSelection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.publisher.PublisherSelection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPublishers();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      base_pb.Filter.Publishers.serializeBinaryToWriter
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSearchUrl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getContentTypesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      4,
      f
    );
  }
  f = message.getCertificateIdsList();
  if (f.length > 0) {
    writer.writePackedInt64(
      5,
      f
    );
  }
  f = message.getSearchMqttTopic();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getTags();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      tag_pb.TagSelection.serializeBinaryToWriter
    );
  }
  f = message.getHealthList();
  if (f.length > 0) {
    writer.writePackedEnum(
      8,
      f
    );
  }
  f = message.getTypesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      9,
      f
    );
  }
};


/**
 * optional hiber.Filter.Publishers publishers = 1;
 * @return {?proto.hiber.Filter.Publishers}
 */
proto.hiber.publisher.PublisherSelection.prototype.getPublishers = function() {
  return /** @type{?proto.hiber.Filter.Publishers} */ (
    jspb.Message.getWrapperField(this, base_pb.Filter.Publishers, 1));
};


/** @param {?proto.hiber.Filter.Publishers|undefined} value */
proto.hiber.publisher.PublisherSelection.prototype.setPublishers = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.hiber.publisher.PublisherSelection.prototype.clearPublishers = function() {
  this.setPublishers(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.publisher.PublisherSelection.prototype.hasPublishers = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.hiber.publisher.PublisherSelection.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hiber.publisher.PublisherSelection.prototype.setDescription = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string search_url = 3;
 * @return {string}
 */
proto.hiber.publisher.PublisherSelection.prototype.getSearchUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.hiber.publisher.PublisherSelection.prototype.setSearchUrl = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * repeated Publisher.ContentType content_types = 4;
 * @return {!Array.<!proto.hiber.publisher.Publisher.ContentType>}
 */
proto.hiber.publisher.PublisherSelection.prototype.getContentTypesList = function() {
  return /** @type {!Array.<!proto.hiber.publisher.Publisher.ContentType>} */ (jspb.Message.getRepeatedField(this, 4));
};


/** @param {!Array.<!proto.hiber.publisher.Publisher.ContentType>} value */
proto.hiber.publisher.PublisherSelection.prototype.setContentTypesList = function(value) {
  jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!proto.hiber.publisher.Publisher.ContentType} value
 * @param {number=} opt_index
 */
proto.hiber.publisher.PublisherSelection.prototype.addContentTypes = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


proto.hiber.publisher.PublisherSelection.prototype.clearContentTypesList = function() {
  this.setContentTypesList([]);
};


/**
 * repeated int64 certificate_ids = 5;
 * @return {!Array.<number>}
 */
proto.hiber.publisher.PublisherSelection.prototype.getCertificateIdsList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedField(this, 5));
};


/** @param {!Array.<number>} value */
proto.hiber.publisher.PublisherSelection.prototype.setCertificateIdsList = function(value) {
  jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.hiber.publisher.PublisherSelection.prototype.addCertificateIds = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


proto.hiber.publisher.PublisherSelection.prototype.clearCertificateIdsList = function() {
  this.setCertificateIdsList([]);
};


/**
 * optional string search_mqtt_topic = 6;
 * @return {string}
 */
proto.hiber.publisher.PublisherSelection.prototype.getSearchMqttTopic = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.hiber.publisher.PublisherSelection.prototype.setSearchMqttTopic = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional hiber.tag.TagSelection tags = 7;
 * @return {?proto.hiber.tag.TagSelection}
 */
proto.hiber.publisher.PublisherSelection.prototype.getTags = function() {
  return /** @type{?proto.hiber.tag.TagSelection} */ (
    jspb.Message.getWrapperField(this, tag_pb.TagSelection, 7));
};


/** @param {?proto.hiber.tag.TagSelection|undefined} value */
proto.hiber.publisher.PublisherSelection.prototype.setTags = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.hiber.publisher.PublisherSelection.prototype.clearTags = function() {
  this.setTags(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.publisher.PublisherSelection.prototype.hasTags = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * repeated hiber.Health health = 8;
 * @return {!Array.<!proto.hiber.Health>}
 */
proto.hiber.publisher.PublisherSelection.prototype.getHealthList = function() {
  return /** @type {!Array.<!proto.hiber.Health>} */ (jspb.Message.getRepeatedField(this, 8));
};


/** @param {!Array.<!proto.hiber.Health>} value */
proto.hiber.publisher.PublisherSelection.prototype.setHealthList = function(value) {
  jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {!proto.hiber.Health} value
 * @param {number=} opt_index
 */
proto.hiber.publisher.PublisherSelection.prototype.addHealth = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


proto.hiber.publisher.PublisherSelection.prototype.clearHealthList = function() {
  this.setHealthList([]);
};


/**
 * repeated Publisher.Type types = 9;
 * @return {!Array.<!proto.hiber.publisher.Publisher.Type>}
 */
proto.hiber.publisher.PublisherSelection.prototype.getTypesList = function() {
  return /** @type {!Array.<!proto.hiber.publisher.Publisher.Type>} */ (jspb.Message.getRepeatedField(this, 9));
};


/** @param {!Array.<!proto.hiber.publisher.Publisher.Type>} value */
proto.hiber.publisher.PublisherSelection.prototype.setTypesList = function(value) {
  jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {!proto.hiber.publisher.Publisher.Type} value
 * @param {number=} opt_index
 */
proto.hiber.publisher.PublisherSelection.prototype.addTypes = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


proto.hiber.publisher.PublisherSelection.prototype.clearTypesList = function() {
  this.setTypesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.publisher.PublisherCall = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.publisher.PublisherCall, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.publisher.PublisherCall.displayName = 'proto.hiber.publisher.PublisherCall';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.publisher.PublisherCall.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.publisher.PublisherCall.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.publisher.PublisherCall} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.publisher.PublisherCall.toObject = function(includeInstance, msg) {
  var f, obj = {
    time: (f = msg.getTime()) && base_pb.Timestamp.toObject(includeInstance, f),
    publisherData: (f = msg.getPublisherData()) && proto.hiber.publisher.Publisher.Data.toObject(includeInstance, f),
    body: msg.getBody_asB64(),
    successful: jspb.Message.getFieldWithDefault(msg, 4, false),
    error: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.publisher.PublisherCall}
 */
proto.hiber.publisher.PublisherCall.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.publisher.PublisherCall;
  return proto.hiber.publisher.PublisherCall.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.publisher.PublisherCall} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.publisher.PublisherCall}
 */
proto.hiber.publisher.PublisherCall.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new base_pb.Timestamp;
      reader.readMessage(value,base_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTime(value);
      break;
    case 2:
      var value = new proto.hiber.publisher.Publisher.Data;
      reader.readMessage(value,proto.hiber.publisher.Publisher.Data.deserializeBinaryFromReader);
      msg.setPublisherData(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBody(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccessful(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.publisher.PublisherCall.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.publisher.PublisherCall.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.publisher.PublisherCall} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.publisher.PublisherCall.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTime();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      base_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getPublisherData();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.hiber.publisher.Publisher.Data.serializeBinaryToWriter
    );
  }
  f = message.getBody_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getSuccessful();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional hiber.Timestamp time = 1;
 * @return {?proto.hiber.Timestamp}
 */
proto.hiber.publisher.PublisherCall.prototype.getTime = function() {
  return /** @type{?proto.hiber.Timestamp} */ (
    jspb.Message.getWrapperField(this, base_pb.Timestamp, 1));
};


/** @param {?proto.hiber.Timestamp|undefined} value */
proto.hiber.publisher.PublisherCall.prototype.setTime = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.hiber.publisher.PublisherCall.prototype.clearTime = function() {
  this.setTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.publisher.PublisherCall.prototype.hasTime = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Publisher.Data publisher_data = 2;
 * @return {?proto.hiber.publisher.Publisher.Data}
 */
proto.hiber.publisher.PublisherCall.prototype.getPublisherData = function() {
  return /** @type{?proto.hiber.publisher.Publisher.Data} */ (
    jspb.Message.getWrapperField(this, proto.hiber.publisher.Publisher.Data, 2));
};


/** @param {?proto.hiber.publisher.Publisher.Data|undefined} value */
proto.hiber.publisher.PublisherCall.prototype.setPublisherData = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.publisher.PublisherCall.prototype.clearPublisherData = function() {
  this.setPublisherData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.publisher.PublisherCall.prototype.hasPublisherData = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bytes body = 3;
 * @return {!(string|Uint8Array)}
 */
proto.hiber.publisher.PublisherCall.prototype.getBody = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes body = 3;
 * This is a type-conversion wrapper around `getBody()`
 * @return {string}
 */
proto.hiber.publisher.PublisherCall.prototype.getBody_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBody()));
};


/**
 * optional bytes body = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBody()`
 * @return {!Uint8Array}
 */
proto.hiber.publisher.PublisherCall.prototype.getBody_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBody()));
};


/** @param {!(string|Uint8Array)} value */
proto.hiber.publisher.PublisherCall.prototype.setBody = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional bool successful = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.hiber.publisher.PublisherCall.prototype.getSuccessful = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.hiber.publisher.PublisherCall.prototype.setSuccessful = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string error = 5;
 * @return {string}
 */
proto.hiber.publisher.PublisherCall.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.hiber.publisher.PublisherCall.prototype.setError = function(value) {
  jspb.Message.setField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.publisher.PublisherHistorySelection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.publisher.PublisherHistorySelection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.publisher.PublisherHistorySelection.displayName = 'proto.hiber.publisher.PublisherHistorySelection';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.publisher.PublisherHistorySelection.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.publisher.PublisherHistorySelection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.publisher.PublisherHistorySelection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.publisher.PublisherHistorySelection.toObject = function(includeInstance, msg) {
  var f, obj = {
    onlyFailures: jspb.Message.getFieldWithDefault(msg, 2, false),
    timeRange: (f = msg.getTimeRange()) && base_pb.TimeRange.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.publisher.PublisherHistorySelection}
 */
proto.hiber.publisher.PublisherHistorySelection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.publisher.PublisherHistorySelection;
  return proto.hiber.publisher.PublisherHistorySelection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.publisher.PublisherHistorySelection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.publisher.PublisherHistorySelection}
 */
proto.hiber.publisher.PublisherHistorySelection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOnlyFailures(value);
      break;
    case 3:
      var value = new base_pb.TimeRange;
      reader.readMessage(value,base_pb.TimeRange.deserializeBinaryFromReader);
      msg.setTimeRange(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.publisher.PublisherHistorySelection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.publisher.PublisherHistorySelection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.publisher.PublisherHistorySelection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.publisher.PublisherHistorySelection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOnlyFailures();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getTimeRange();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      base_pb.TimeRange.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool only_failures = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.hiber.publisher.PublisherHistorySelection.prototype.getOnlyFailures = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.hiber.publisher.PublisherHistorySelection.prototype.setOnlyFailures = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional hiber.TimeRange time_range = 3;
 * @return {?proto.hiber.TimeRange}
 */
proto.hiber.publisher.PublisherHistorySelection.prototype.getTimeRange = function() {
  return /** @type{?proto.hiber.TimeRange} */ (
    jspb.Message.getWrapperField(this, base_pb.TimeRange, 3));
};


/** @param {?proto.hiber.TimeRange|undefined} value */
proto.hiber.publisher.PublisherHistorySelection.prototype.setTimeRange = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.publisher.PublisherHistorySelection.prototype.clearTimeRange = function() {
  this.setTimeRange(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.publisher.PublisherHistorySelection.prototype.hasTimeRange = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.publisher.ListPublishersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.publisher.ListPublishersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.publisher.ListPublishersRequest.displayName = 'proto.hiber.publisher.ListPublishersRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.publisher.ListPublishersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.publisher.ListPublishersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.publisher.ListPublishersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.publisher.ListPublishersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: jspb.Message.getFieldWithDefault(msg, 1, ""),
    selection: (f = msg.getSelection()) && proto.hiber.publisher.PublisherSelection.toObject(includeInstance, f),
    pagination: (f = msg.getPagination()) && base_pb.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.publisher.ListPublishersRequest}
 */
proto.hiber.publisher.ListPublishersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.publisher.ListPublishersRequest;
  return proto.hiber.publisher.ListPublishersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.publisher.ListPublishersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.publisher.ListPublishersRequest}
 */
proto.hiber.publisher.ListPublishersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 2:
      var value = new proto.hiber.publisher.PublisherSelection;
      reader.readMessage(value,proto.hiber.publisher.PublisherSelection.deserializeBinaryFromReader);
      msg.setSelection(value);
      break;
    case 3:
      var value = new base_pb.Pagination;
      reader.readMessage(value,base_pb.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.publisher.ListPublishersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.publisher.ListPublishersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.publisher.ListPublishersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.publisher.ListPublishersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSelection();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.hiber.publisher.PublisherSelection.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      base_pb.Pagination.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.publisher.ListPublishersRequest.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.publisher.ListPublishersRequest.Response.repeatedFields_, null);
};
goog.inherits(proto.hiber.publisher.ListPublishersRequest.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.publisher.ListPublishersRequest.Response.displayName = 'proto.hiber.publisher.ListPublishersRequest.Response';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.publisher.ListPublishersRequest.Response.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.publisher.ListPublishersRequest.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.publisher.ListPublishersRequest.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.publisher.ListPublishersRequest.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.publisher.ListPublishersRequest.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    publishersList: jspb.Message.toObjectList(msg.getPublishersList(),
    proto.hiber.publisher.Publisher.toObject, includeInstance),
    request: (f = msg.getRequest()) && proto.hiber.publisher.ListPublishersRequest.toObject(includeInstance, f),
    pagination: (f = msg.getPagination()) && base_pb.Pagination.Result.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.publisher.ListPublishersRequest.Response}
 */
proto.hiber.publisher.ListPublishersRequest.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.publisher.ListPublishersRequest.Response;
  return proto.hiber.publisher.ListPublishersRequest.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.publisher.ListPublishersRequest.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.publisher.ListPublishersRequest.Response}
 */
proto.hiber.publisher.ListPublishersRequest.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.hiber.publisher.Publisher;
      reader.readMessage(value,proto.hiber.publisher.Publisher.deserializeBinaryFromReader);
      msg.addPublishers(value);
      break;
    case 2:
      var value = new proto.hiber.publisher.ListPublishersRequest;
      reader.readMessage(value,proto.hiber.publisher.ListPublishersRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    case 3:
      var value = new base_pb.Pagination.Result;
      reader.readMessage(value,base_pb.Pagination.Result.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.publisher.ListPublishersRequest.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.publisher.ListPublishersRequest.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.publisher.ListPublishersRequest.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.publisher.ListPublishersRequest.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPublishersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.hiber.publisher.Publisher.serializeBinaryToWriter
    );
  }
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.hiber.publisher.ListPublishersRequest.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      base_pb.Pagination.Result.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Publisher publishers = 1;
 * @return {!Array.<!proto.hiber.publisher.Publisher>}
 */
proto.hiber.publisher.ListPublishersRequest.Response.prototype.getPublishersList = function() {
  return /** @type{!Array.<!proto.hiber.publisher.Publisher>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.hiber.publisher.Publisher, 1));
};


/** @param {!Array.<!proto.hiber.publisher.Publisher>} value */
proto.hiber.publisher.ListPublishersRequest.Response.prototype.setPublishersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.hiber.publisher.Publisher=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hiber.publisher.Publisher}
 */
proto.hiber.publisher.ListPublishersRequest.Response.prototype.addPublishers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.hiber.publisher.Publisher, opt_index);
};


proto.hiber.publisher.ListPublishersRequest.Response.prototype.clearPublishersList = function() {
  this.setPublishersList([]);
};


/**
 * optional ListPublishersRequest request = 2;
 * @return {?proto.hiber.publisher.ListPublishersRequest}
 */
proto.hiber.publisher.ListPublishersRequest.Response.prototype.getRequest = function() {
  return /** @type{?proto.hiber.publisher.ListPublishersRequest} */ (
    jspb.Message.getWrapperField(this, proto.hiber.publisher.ListPublishersRequest, 2));
};


/** @param {?proto.hiber.publisher.ListPublishersRequest|undefined} value */
proto.hiber.publisher.ListPublishersRequest.Response.prototype.setRequest = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.publisher.ListPublishersRequest.Response.prototype.clearRequest = function() {
  this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.publisher.ListPublishersRequest.Response.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional hiber.Pagination.Result pagination = 3;
 * @return {?proto.hiber.Pagination.Result}
 */
proto.hiber.publisher.ListPublishersRequest.Response.prototype.getPagination = function() {
  return /** @type{?proto.hiber.Pagination.Result} */ (
    jspb.Message.getWrapperField(this, base_pb.Pagination.Result, 3));
};


/** @param {?proto.hiber.Pagination.Result|undefined} value */
proto.hiber.publisher.ListPublishersRequest.Response.prototype.setPagination = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.publisher.ListPublishersRequest.Response.prototype.clearPagination = function() {
  this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.publisher.ListPublishersRequest.Response.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string organization = 1;
 * @return {string}
 */
proto.hiber.publisher.ListPublishersRequest.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.publisher.ListPublishersRequest.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional PublisherSelection selection = 2;
 * @return {?proto.hiber.publisher.PublisherSelection}
 */
proto.hiber.publisher.ListPublishersRequest.prototype.getSelection = function() {
  return /** @type{?proto.hiber.publisher.PublisherSelection} */ (
    jspb.Message.getWrapperField(this, proto.hiber.publisher.PublisherSelection, 2));
};


/** @param {?proto.hiber.publisher.PublisherSelection|undefined} value */
proto.hiber.publisher.ListPublishersRequest.prototype.setSelection = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.publisher.ListPublishersRequest.prototype.clearSelection = function() {
  this.setSelection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.publisher.ListPublishersRequest.prototype.hasSelection = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional hiber.Pagination pagination = 3;
 * @return {?proto.hiber.Pagination}
 */
proto.hiber.publisher.ListPublishersRequest.prototype.getPagination = function() {
  return /** @type{?proto.hiber.Pagination} */ (
    jspb.Message.getWrapperField(this, base_pb.Pagination, 3));
};


/** @param {?proto.hiber.Pagination|undefined} value */
proto.hiber.publisher.ListPublishersRequest.prototype.setPagination = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.publisher.ListPublishersRequest.prototype.clearPagination = function() {
  this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.publisher.ListPublishersRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.publisher.PublisherHistoryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.publisher.PublisherHistoryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.publisher.PublisherHistoryRequest.displayName = 'proto.hiber.publisher.PublisherHistoryRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.publisher.PublisherHistoryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.publisher.PublisherHistoryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.publisher.PublisherHistoryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.publisher.PublisherHistoryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: jspb.Message.getFieldWithDefault(msg, 1, ""),
    publisherId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    selection: (f = msg.getSelection()) && proto.hiber.publisher.PublisherHistorySelection.toObject(includeInstance, f),
    pagination: (f = msg.getPagination()) && base_pb.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.publisher.PublisherHistoryRequest}
 */
proto.hiber.publisher.PublisherHistoryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.publisher.PublisherHistoryRequest;
  return proto.hiber.publisher.PublisherHistoryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.publisher.PublisherHistoryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.publisher.PublisherHistoryRequest}
 */
proto.hiber.publisher.PublisherHistoryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPublisherId(value);
      break;
    case 3:
      var value = new proto.hiber.publisher.PublisherHistorySelection;
      reader.readMessage(value,proto.hiber.publisher.PublisherHistorySelection.deserializeBinaryFromReader);
      msg.setSelection(value);
      break;
    case 4:
      var value = new base_pb.Pagination;
      reader.readMessage(value,base_pb.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.publisher.PublisherHistoryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.publisher.PublisherHistoryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.publisher.PublisherHistoryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.publisher.PublisherHistoryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPublisherId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getSelection();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.hiber.publisher.PublisherHistorySelection.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      base_pb.Pagination.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.publisher.PublisherHistoryRequest.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.publisher.PublisherHistoryRequest.Response.repeatedFields_, null);
};
goog.inherits(proto.hiber.publisher.PublisherHistoryRequest.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.publisher.PublisherHistoryRequest.Response.displayName = 'proto.hiber.publisher.PublisherHistoryRequest.Response';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.publisher.PublisherHistoryRequest.Response.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.publisher.PublisherHistoryRequest.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.publisher.PublisherHistoryRequest.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.publisher.PublisherHistoryRequest.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.publisher.PublisherHistoryRequest.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    callsList: jspb.Message.toObjectList(msg.getCallsList(),
    proto.hiber.publisher.PublisherCall.toObject, includeInstance),
    request: (f = msg.getRequest()) && proto.hiber.publisher.PublisherHistoryRequest.toObject(includeInstance, f),
    pagination: (f = msg.getPagination()) && base_pb.Pagination.Result.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.publisher.PublisherHistoryRequest.Response}
 */
proto.hiber.publisher.PublisherHistoryRequest.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.publisher.PublisherHistoryRequest.Response;
  return proto.hiber.publisher.PublisherHistoryRequest.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.publisher.PublisherHistoryRequest.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.publisher.PublisherHistoryRequest.Response}
 */
proto.hiber.publisher.PublisherHistoryRequest.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.hiber.publisher.PublisherCall;
      reader.readMessage(value,proto.hiber.publisher.PublisherCall.deserializeBinaryFromReader);
      msg.addCalls(value);
      break;
    case 2:
      var value = new proto.hiber.publisher.PublisherHistoryRequest;
      reader.readMessage(value,proto.hiber.publisher.PublisherHistoryRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    case 3:
      var value = new base_pb.Pagination.Result;
      reader.readMessage(value,base_pb.Pagination.Result.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.publisher.PublisherHistoryRequest.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.publisher.PublisherHistoryRequest.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.publisher.PublisherHistoryRequest.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.publisher.PublisherHistoryRequest.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCallsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.hiber.publisher.PublisherCall.serializeBinaryToWriter
    );
  }
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.hiber.publisher.PublisherHistoryRequest.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      base_pb.Pagination.Result.serializeBinaryToWriter
    );
  }
};


/**
 * repeated PublisherCall calls = 1;
 * @return {!Array.<!proto.hiber.publisher.PublisherCall>}
 */
proto.hiber.publisher.PublisherHistoryRequest.Response.prototype.getCallsList = function() {
  return /** @type{!Array.<!proto.hiber.publisher.PublisherCall>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.hiber.publisher.PublisherCall, 1));
};


/** @param {!Array.<!proto.hiber.publisher.PublisherCall>} value */
proto.hiber.publisher.PublisherHistoryRequest.Response.prototype.setCallsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.hiber.publisher.PublisherCall=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hiber.publisher.PublisherCall}
 */
proto.hiber.publisher.PublisherHistoryRequest.Response.prototype.addCalls = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.hiber.publisher.PublisherCall, opt_index);
};


proto.hiber.publisher.PublisherHistoryRequest.Response.prototype.clearCallsList = function() {
  this.setCallsList([]);
};


/**
 * optional PublisherHistoryRequest request = 2;
 * @return {?proto.hiber.publisher.PublisherHistoryRequest}
 */
proto.hiber.publisher.PublisherHistoryRequest.Response.prototype.getRequest = function() {
  return /** @type{?proto.hiber.publisher.PublisherHistoryRequest} */ (
    jspb.Message.getWrapperField(this, proto.hiber.publisher.PublisherHistoryRequest, 2));
};


/** @param {?proto.hiber.publisher.PublisherHistoryRequest|undefined} value */
proto.hiber.publisher.PublisherHistoryRequest.Response.prototype.setRequest = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.publisher.PublisherHistoryRequest.Response.prototype.clearRequest = function() {
  this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.publisher.PublisherHistoryRequest.Response.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional hiber.Pagination.Result pagination = 3;
 * @return {?proto.hiber.Pagination.Result}
 */
proto.hiber.publisher.PublisherHistoryRequest.Response.prototype.getPagination = function() {
  return /** @type{?proto.hiber.Pagination.Result} */ (
    jspb.Message.getWrapperField(this, base_pb.Pagination.Result, 3));
};


/** @param {?proto.hiber.Pagination.Result|undefined} value */
proto.hiber.publisher.PublisherHistoryRequest.Response.prototype.setPagination = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.publisher.PublisherHistoryRequest.Response.prototype.clearPagination = function() {
  this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.publisher.PublisherHistoryRequest.Response.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string organization = 1;
 * @return {string}
 */
proto.hiber.publisher.PublisherHistoryRequest.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.publisher.PublisherHistoryRequest.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int64 publisher_id = 2;
 * @return {number}
 */
proto.hiber.publisher.PublisherHistoryRequest.prototype.getPublisherId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.hiber.publisher.PublisherHistoryRequest.prototype.setPublisherId = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional PublisherHistorySelection selection = 3;
 * @return {?proto.hiber.publisher.PublisherHistorySelection}
 */
proto.hiber.publisher.PublisherHistoryRequest.prototype.getSelection = function() {
  return /** @type{?proto.hiber.publisher.PublisherHistorySelection} */ (
    jspb.Message.getWrapperField(this, proto.hiber.publisher.PublisherHistorySelection, 3));
};


/** @param {?proto.hiber.publisher.PublisherHistorySelection|undefined} value */
proto.hiber.publisher.PublisherHistoryRequest.prototype.setSelection = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.publisher.PublisherHistoryRequest.prototype.clearSelection = function() {
  this.setSelection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.publisher.PublisherHistoryRequest.prototype.hasSelection = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional hiber.Pagination pagination = 4;
 * @return {?proto.hiber.Pagination}
 */
proto.hiber.publisher.PublisherHistoryRequest.prototype.getPagination = function() {
  return /** @type{?proto.hiber.Pagination} */ (
    jspb.Message.getWrapperField(this, base_pb.Pagination, 4));
};


/** @param {?proto.hiber.Pagination|undefined} value */
proto.hiber.publisher.PublisherHistoryRequest.prototype.setPagination = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.hiber.publisher.PublisherHistoryRequest.prototype.clearPagination = function() {
  this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.publisher.PublisherHistoryRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.publisher.CreatePublisherRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.publisher.CreatePublisherRequest.repeatedFields_, proto.hiber.publisher.CreatePublisherRequest.oneofGroups_);
};
goog.inherits(proto.hiber.publisher.CreatePublisherRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.publisher.CreatePublisherRequest.displayName = 'proto.hiber.publisher.CreatePublisherRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.publisher.CreatePublisherRequest.repeatedFields_ = [7];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.hiber.publisher.CreatePublisherRequest.oneofGroups_ = [[9,10]];

/**
 * @enum {number}
 */
proto.hiber.publisher.CreatePublisherRequest.ConfigCase = {
  CONFIG_NOT_SET: 0,
  HTTP: 9,
  MQTT: 10
};

/**
 * @return {proto.hiber.publisher.CreatePublisherRequest.ConfigCase}
 */
proto.hiber.publisher.CreatePublisherRequest.prototype.getConfigCase = function() {
  return /** @type {proto.hiber.publisher.CreatePublisherRequest.ConfigCase} */(jspb.Message.computeOneofCase(this, proto.hiber.publisher.CreatePublisherRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.publisher.CreatePublisherRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.publisher.CreatePublisherRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.publisher.CreatePublisherRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.publisher.CreatePublisherRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    url: jspb.Message.getFieldWithDefault(msg, 3, ""),
    contentType: jspb.Message.getFieldWithDefault(msg, 4, 0),
    certificateId: jspb.Message.getFieldWithDefault(msg, 5, 0),
    filters: (f = msg.getFilters()) && proto.hiber.publisher.Publisher.Filters.toObject(includeInstance, f),
    tagsList: jspb.Message.getRepeatedField(msg, 7),
    type: jspb.Message.getFieldWithDefault(msg, 8, 0),
    http: (f = msg.getHttp()) && proto.hiber.publisher.Publisher.Data.HTTPConfig.toObject(includeInstance, f),
    mqtt: (f = msg.getMqtt()) && proto.hiber.publisher.Publisher.Data.MQTTConfig.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.publisher.CreatePublisherRequest}
 */
proto.hiber.publisher.CreatePublisherRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.publisher.CreatePublisherRequest;
  return proto.hiber.publisher.CreatePublisherRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.publisher.CreatePublisherRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.publisher.CreatePublisherRequest}
 */
proto.hiber.publisher.CreatePublisherRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 4:
      var value = /** @type {!proto.hiber.publisher.Publisher.ContentType} */ (reader.readEnum());
      msg.setContentType(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCertificateId(value);
      break;
    case 6:
      var value = new proto.hiber.publisher.Publisher.Filters;
      reader.readMessage(value,proto.hiber.publisher.Publisher.Filters.deserializeBinaryFromReader);
      msg.setFilters(value);
      break;
    case 7:
      var value = /** @type {!Array.<number>} */ (reader.readPackedInt64());
      msg.setTagsList(value);
      break;
    case 8:
      var value = /** @type {!proto.hiber.publisher.Publisher.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 9:
      var value = new proto.hiber.publisher.Publisher.Data.HTTPConfig;
      reader.readMessage(value,proto.hiber.publisher.Publisher.Data.HTTPConfig.deserializeBinaryFromReader);
      msg.setHttp(value);
      break;
    case 10:
      var value = new proto.hiber.publisher.Publisher.Data.MQTTConfig;
      reader.readMessage(value,proto.hiber.publisher.Publisher.Data.MQTTConfig.deserializeBinaryFromReader);
      msg.setMqtt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.publisher.CreatePublisherRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.publisher.CreatePublisherRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.publisher.CreatePublisherRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.publisher.CreatePublisherRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getContentType();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getCertificateId();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getFilters();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.hiber.publisher.Publisher.Filters.serializeBinaryToWriter
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writePackedInt64(
      7,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getHttp();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.hiber.publisher.Publisher.Data.HTTPConfig.serializeBinaryToWriter
    );
  }
  f = message.getMqtt();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.hiber.publisher.Publisher.Data.MQTTConfig.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.publisher.CreatePublisherRequest.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.publisher.CreatePublisherRequest.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.publisher.CreatePublisherRequest.Response.displayName = 'proto.hiber.publisher.CreatePublisherRequest.Response';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.publisher.CreatePublisherRequest.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.publisher.CreatePublisherRequest.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.publisher.CreatePublisherRequest.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.publisher.CreatePublisherRequest.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    created: (f = msg.getCreated()) && proto.hiber.publisher.Publisher.toObject(includeInstance, f),
    request: (f = msg.getRequest()) && proto.hiber.publisher.CreatePublisherRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.publisher.CreatePublisherRequest.Response}
 */
proto.hiber.publisher.CreatePublisherRequest.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.publisher.CreatePublisherRequest.Response;
  return proto.hiber.publisher.CreatePublisherRequest.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.publisher.CreatePublisherRequest.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.publisher.CreatePublisherRequest.Response}
 */
proto.hiber.publisher.CreatePublisherRequest.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.hiber.publisher.Publisher;
      reader.readMessage(value,proto.hiber.publisher.Publisher.deserializeBinaryFromReader);
      msg.setCreated(value);
      break;
    case 2:
      var value = new proto.hiber.publisher.CreatePublisherRequest;
      reader.readMessage(value,proto.hiber.publisher.CreatePublisherRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.publisher.CreatePublisherRequest.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.publisher.CreatePublisherRequest.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.publisher.CreatePublisherRequest.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.publisher.CreatePublisherRequest.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCreated();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.hiber.publisher.Publisher.serializeBinaryToWriter
    );
  }
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.hiber.publisher.CreatePublisherRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional Publisher created = 1;
 * @return {?proto.hiber.publisher.Publisher}
 */
proto.hiber.publisher.CreatePublisherRequest.Response.prototype.getCreated = function() {
  return /** @type{?proto.hiber.publisher.Publisher} */ (
    jspb.Message.getWrapperField(this, proto.hiber.publisher.Publisher, 1));
};


/** @param {?proto.hiber.publisher.Publisher|undefined} value */
proto.hiber.publisher.CreatePublisherRequest.Response.prototype.setCreated = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.hiber.publisher.CreatePublisherRequest.Response.prototype.clearCreated = function() {
  this.setCreated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.publisher.CreatePublisherRequest.Response.prototype.hasCreated = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional CreatePublisherRequest request = 2;
 * @return {?proto.hiber.publisher.CreatePublisherRequest}
 */
proto.hiber.publisher.CreatePublisherRequest.Response.prototype.getRequest = function() {
  return /** @type{?proto.hiber.publisher.CreatePublisherRequest} */ (
    jspb.Message.getWrapperField(this, proto.hiber.publisher.CreatePublisherRequest, 2));
};


/** @param {?proto.hiber.publisher.CreatePublisherRequest|undefined} value */
proto.hiber.publisher.CreatePublisherRequest.Response.prototype.setRequest = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.publisher.CreatePublisherRequest.Response.prototype.clearRequest = function() {
  this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.publisher.CreatePublisherRequest.Response.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string organization = 1;
 * @return {string}
 */
proto.hiber.publisher.CreatePublisherRequest.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.publisher.CreatePublisherRequest.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.hiber.publisher.CreatePublisherRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hiber.publisher.CreatePublisherRequest.prototype.setDescription = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string url = 3;
 * @return {string}
 */
proto.hiber.publisher.CreatePublisherRequest.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.hiber.publisher.CreatePublisherRequest.prototype.setUrl = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional Publisher.ContentType content_type = 4;
 * @return {!proto.hiber.publisher.Publisher.ContentType}
 */
proto.hiber.publisher.CreatePublisherRequest.prototype.getContentType = function() {
  return /** @type {!proto.hiber.publisher.Publisher.ContentType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {!proto.hiber.publisher.Publisher.ContentType} value */
proto.hiber.publisher.CreatePublisherRequest.prototype.setContentType = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional int64 certificate_id = 5;
 * @return {number}
 */
proto.hiber.publisher.CreatePublisherRequest.prototype.getCertificateId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.hiber.publisher.CreatePublisherRequest.prototype.setCertificateId = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional Publisher.Filters filters = 6;
 * @return {?proto.hiber.publisher.Publisher.Filters}
 */
proto.hiber.publisher.CreatePublisherRequest.prototype.getFilters = function() {
  return /** @type{?proto.hiber.publisher.Publisher.Filters} */ (
    jspb.Message.getWrapperField(this, proto.hiber.publisher.Publisher.Filters, 6));
};


/** @param {?proto.hiber.publisher.Publisher.Filters|undefined} value */
proto.hiber.publisher.CreatePublisherRequest.prototype.setFilters = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.hiber.publisher.CreatePublisherRequest.prototype.clearFilters = function() {
  this.setFilters(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.publisher.CreatePublisherRequest.prototype.hasFilters = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * repeated int64 tags = 7;
 * @return {!Array.<number>}
 */
proto.hiber.publisher.CreatePublisherRequest.prototype.getTagsList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedField(this, 7));
};


/** @param {!Array.<number>} value */
proto.hiber.publisher.CreatePublisherRequest.prototype.setTagsList = function(value) {
  jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.hiber.publisher.CreatePublisherRequest.prototype.addTags = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


proto.hiber.publisher.CreatePublisherRequest.prototype.clearTagsList = function() {
  this.setTagsList([]);
};


/**
 * optional Publisher.Type type = 8;
 * @return {!proto.hiber.publisher.Publisher.Type}
 */
proto.hiber.publisher.CreatePublisherRequest.prototype.getType = function() {
  return /** @type {!proto.hiber.publisher.Publisher.Type} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {!proto.hiber.publisher.Publisher.Type} value */
proto.hiber.publisher.CreatePublisherRequest.prototype.setType = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * optional Publisher.Data.HTTPConfig http = 9;
 * @return {?proto.hiber.publisher.Publisher.Data.HTTPConfig}
 */
proto.hiber.publisher.CreatePublisherRequest.prototype.getHttp = function() {
  return /** @type{?proto.hiber.publisher.Publisher.Data.HTTPConfig} */ (
    jspb.Message.getWrapperField(this, proto.hiber.publisher.Publisher.Data.HTTPConfig, 9));
};


/** @param {?proto.hiber.publisher.Publisher.Data.HTTPConfig|undefined} value */
proto.hiber.publisher.CreatePublisherRequest.prototype.setHttp = function(value) {
  jspb.Message.setOneofWrapperField(this, 9, proto.hiber.publisher.CreatePublisherRequest.oneofGroups_[0], value);
};


proto.hiber.publisher.CreatePublisherRequest.prototype.clearHttp = function() {
  this.setHttp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.publisher.CreatePublisherRequest.prototype.hasHttp = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Publisher.Data.MQTTConfig mqtt = 10;
 * @return {?proto.hiber.publisher.Publisher.Data.MQTTConfig}
 */
proto.hiber.publisher.CreatePublisherRequest.prototype.getMqtt = function() {
  return /** @type{?proto.hiber.publisher.Publisher.Data.MQTTConfig} */ (
    jspb.Message.getWrapperField(this, proto.hiber.publisher.Publisher.Data.MQTTConfig, 10));
};


/** @param {?proto.hiber.publisher.Publisher.Data.MQTTConfig|undefined} value */
proto.hiber.publisher.CreatePublisherRequest.prototype.setMqtt = function(value) {
  jspb.Message.setOneofWrapperField(this, 10, proto.hiber.publisher.CreatePublisherRequest.oneofGroups_[0], value);
};


proto.hiber.publisher.CreatePublisherRequest.prototype.clearMqtt = function() {
  this.setMqtt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.publisher.CreatePublisherRequest.prototype.hasMqtt = function() {
  return jspb.Message.getField(this, 10) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.publisher.EnablePublisherRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.publisher.EnablePublisherRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.publisher.EnablePublisherRequest.displayName = 'proto.hiber.publisher.EnablePublisherRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.publisher.EnablePublisherRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.publisher.EnablePublisherRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.publisher.EnablePublisherRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.publisher.EnablePublisherRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: jspb.Message.getFieldWithDefault(msg, 1, ""),
    selection: (f = msg.getSelection()) && proto.hiber.publisher.PublisherSelection.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.publisher.EnablePublisherRequest}
 */
proto.hiber.publisher.EnablePublisherRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.publisher.EnablePublisherRequest;
  return proto.hiber.publisher.EnablePublisherRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.publisher.EnablePublisherRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.publisher.EnablePublisherRequest}
 */
proto.hiber.publisher.EnablePublisherRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 2:
      var value = new proto.hiber.publisher.PublisherSelection;
      reader.readMessage(value,proto.hiber.publisher.PublisherSelection.deserializeBinaryFromReader);
      msg.setSelection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.publisher.EnablePublisherRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.publisher.EnablePublisherRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.publisher.EnablePublisherRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.publisher.EnablePublisherRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSelection();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.hiber.publisher.PublisherSelection.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.publisher.EnablePublisherRequest.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.publisher.EnablePublisherRequest.Response.repeatedFields_, null);
};
goog.inherits(proto.hiber.publisher.EnablePublisherRequest.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.publisher.EnablePublisherRequest.Response.displayName = 'proto.hiber.publisher.EnablePublisherRequest.Response';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.publisher.EnablePublisherRequest.Response.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.publisher.EnablePublisherRequest.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.publisher.EnablePublisherRequest.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.publisher.EnablePublisherRequest.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.publisher.EnablePublisherRequest.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    publishersList: jspb.Message.toObjectList(msg.getPublishersList(),
    proto.hiber.publisher.Publisher.toObject, includeInstance),
    request: (f = msg.getRequest()) && proto.hiber.publisher.EnablePublisherRequest.toObject(includeInstance, f),
    pagination: (f = msg.getPagination()) && base_pb.Pagination.Result.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.publisher.EnablePublisherRequest.Response}
 */
proto.hiber.publisher.EnablePublisherRequest.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.publisher.EnablePublisherRequest.Response;
  return proto.hiber.publisher.EnablePublisherRequest.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.publisher.EnablePublisherRequest.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.publisher.EnablePublisherRequest.Response}
 */
proto.hiber.publisher.EnablePublisherRequest.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.hiber.publisher.Publisher;
      reader.readMessage(value,proto.hiber.publisher.Publisher.deserializeBinaryFromReader);
      msg.addPublishers(value);
      break;
    case 2:
      var value = new proto.hiber.publisher.EnablePublisherRequest;
      reader.readMessage(value,proto.hiber.publisher.EnablePublisherRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    case 3:
      var value = new base_pb.Pagination.Result;
      reader.readMessage(value,base_pb.Pagination.Result.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.publisher.EnablePublisherRequest.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.publisher.EnablePublisherRequest.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.publisher.EnablePublisherRequest.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.publisher.EnablePublisherRequest.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPublishersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.hiber.publisher.Publisher.serializeBinaryToWriter
    );
  }
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.hiber.publisher.EnablePublisherRequest.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      base_pb.Pagination.Result.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Publisher publishers = 1;
 * @return {!Array.<!proto.hiber.publisher.Publisher>}
 */
proto.hiber.publisher.EnablePublisherRequest.Response.prototype.getPublishersList = function() {
  return /** @type{!Array.<!proto.hiber.publisher.Publisher>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.hiber.publisher.Publisher, 1));
};


/** @param {!Array.<!proto.hiber.publisher.Publisher>} value */
proto.hiber.publisher.EnablePublisherRequest.Response.prototype.setPublishersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.hiber.publisher.Publisher=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hiber.publisher.Publisher}
 */
proto.hiber.publisher.EnablePublisherRequest.Response.prototype.addPublishers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.hiber.publisher.Publisher, opt_index);
};


proto.hiber.publisher.EnablePublisherRequest.Response.prototype.clearPublishersList = function() {
  this.setPublishersList([]);
};


/**
 * optional EnablePublisherRequest request = 2;
 * @return {?proto.hiber.publisher.EnablePublisherRequest}
 */
proto.hiber.publisher.EnablePublisherRequest.Response.prototype.getRequest = function() {
  return /** @type{?proto.hiber.publisher.EnablePublisherRequest} */ (
    jspb.Message.getWrapperField(this, proto.hiber.publisher.EnablePublisherRequest, 2));
};


/** @param {?proto.hiber.publisher.EnablePublisherRequest|undefined} value */
proto.hiber.publisher.EnablePublisherRequest.Response.prototype.setRequest = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.publisher.EnablePublisherRequest.Response.prototype.clearRequest = function() {
  this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.publisher.EnablePublisherRequest.Response.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional hiber.Pagination.Result pagination = 3;
 * @return {?proto.hiber.Pagination.Result}
 */
proto.hiber.publisher.EnablePublisherRequest.Response.prototype.getPagination = function() {
  return /** @type{?proto.hiber.Pagination.Result} */ (
    jspb.Message.getWrapperField(this, base_pb.Pagination.Result, 3));
};


/** @param {?proto.hiber.Pagination.Result|undefined} value */
proto.hiber.publisher.EnablePublisherRequest.Response.prototype.setPagination = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.publisher.EnablePublisherRequest.Response.prototype.clearPagination = function() {
  this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.publisher.EnablePublisherRequest.Response.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string organization = 1;
 * @return {string}
 */
proto.hiber.publisher.EnablePublisherRequest.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.publisher.EnablePublisherRequest.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional PublisherSelection selection = 2;
 * @return {?proto.hiber.publisher.PublisherSelection}
 */
proto.hiber.publisher.EnablePublisherRequest.prototype.getSelection = function() {
  return /** @type{?proto.hiber.publisher.PublisherSelection} */ (
    jspb.Message.getWrapperField(this, proto.hiber.publisher.PublisherSelection, 2));
};


/** @param {?proto.hiber.publisher.PublisherSelection|undefined} value */
proto.hiber.publisher.EnablePublisherRequest.prototype.setSelection = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.publisher.EnablePublisherRequest.prototype.clearSelection = function() {
  this.setSelection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.publisher.EnablePublisherRequest.prototype.hasSelection = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.publisher.DisablePublisherRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.publisher.DisablePublisherRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.publisher.DisablePublisherRequest.displayName = 'proto.hiber.publisher.DisablePublisherRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.publisher.DisablePublisherRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.publisher.DisablePublisherRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.publisher.DisablePublisherRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.publisher.DisablePublisherRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: jspb.Message.getFieldWithDefault(msg, 1, ""),
    selection: (f = msg.getSelection()) && proto.hiber.publisher.PublisherSelection.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.publisher.DisablePublisherRequest}
 */
proto.hiber.publisher.DisablePublisherRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.publisher.DisablePublisherRequest;
  return proto.hiber.publisher.DisablePublisherRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.publisher.DisablePublisherRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.publisher.DisablePublisherRequest}
 */
proto.hiber.publisher.DisablePublisherRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 2:
      var value = new proto.hiber.publisher.PublisherSelection;
      reader.readMessage(value,proto.hiber.publisher.PublisherSelection.deserializeBinaryFromReader);
      msg.setSelection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.publisher.DisablePublisherRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.publisher.DisablePublisherRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.publisher.DisablePublisherRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.publisher.DisablePublisherRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSelection();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.hiber.publisher.PublisherSelection.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.publisher.DisablePublisherRequest.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.publisher.DisablePublisherRequest.Response.repeatedFields_, null);
};
goog.inherits(proto.hiber.publisher.DisablePublisherRequest.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.publisher.DisablePublisherRequest.Response.displayName = 'proto.hiber.publisher.DisablePublisherRequest.Response';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.publisher.DisablePublisherRequest.Response.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.publisher.DisablePublisherRequest.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.publisher.DisablePublisherRequest.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.publisher.DisablePublisherRequest.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.publisher.DisablePublisherRequest.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    publishersList: jspb.Message.toObjectList(msg.getPublishersList(),
    proto.hiber.publisher.Publisher.toObject, includeInstance),
    request: (f = msg.getRequest()) && proto.hiber.publisher.DisablePublisherRequest.toObject(includeInstance, f),
    pagination: (f = msg.getPagination()) && base_pb.Pagination.Result.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.publisher.DisablePublisherRequest.Response}
 */
proto.hiber.publisher.DisablePublisherRequest.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.publisher.DisablePublisherRequest.Response;
  return proto.hiber.publisher.DisablePublisherRequest.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.publisher.DisablePublisherRequest.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.publisher.DisablePublisherRequest.Response}
 */
proto.hiber.publisher.DisablePublisherRequest.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.hiber.publisher.Publisher;
      reader.readMessage(value,proto.hiber.publisher.Publisher.deserializeBinaryFromReader);
      msg.addPublishers(value);
      break;
    case 2:
      var value = new proto.hiber.publisher.DisablePublisherRequest;
      reader.readMessage(value,proto.hiber.publisher.DisablePublisherRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    case 3:
      var value = new base_pb.Pagination.Result;
      reader.readMessage(value,base_pb.Pagination.Result.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.publisher.DisablePublisherRequest.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.publisher.DisablePublisherRequest.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.publisher.DisablePublisherRequest.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.publisher.DisablePublisherRequest.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPublishersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.hiber.publisher.Publisher.serializeBinaryToWriter
    );
  }
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.hiber.publisher.DisablePublisherRequest.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      base_pb.Pagination.Result.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Publisher publishers = 1;
 * @return {!Array.<!proto.hiber.publisher.Publisher>}
 */
proto.hiber.publisher.DisablePublisherRequest.Response.prototype.getPublishersList = function() {
  return /** @type{!Array.<!proto.hiber.publisher.Publisher>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.hiber.publisher.Publisher, 1));
};


/** @param {!Array.<!proto.hiber.publisher.Publisher>} value */
proto.hiber.publisher.DisablePublisherRequest.Response.prototype.setPublishersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.hiber.publisher.Publisher=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hiber.publisher.Publisher}
 */
proto.hiber.publisher.DisablePublisherRequest.Response.prototype.addPublishers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.hiber.publisher.Publisher, opt_index);
};


proto.hiber.publisher.DisablePublisherRequest.Response.prototype.clearPublishersList = function() {
  this.setPublishersList([]);
};


/**
 * optional DisablePublisherRequest request = 2;
 * @return {?proto.hiber.publisher.DisablePublisherRequest}
 */
proto.hiber.publisher.DisablePublisherRequest.Response.prototype.getRequest = function() {
  return /** @type{?proto.hiber.publisher.DisablePublisherRequest} */ (
    jspb.Message.getWrapperField(this, proto.hiber.publisher.DisablePublisherRequest, 2));
};


/** @param {?proto.hiber.publisher.DisablePublisherRequest|undefined} value */
proto.hiber.publisher.DisablePublisherRequest.Response.prototype.setRequest = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.publisher.DisablePublisherRequest.Response.prototype.clearRequest = function() {
  this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.publisher.DisablePublisherRequest.Response.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional hiber.Pagination.Result pagination = 3;
 * @return {?proto.hiber.Pagination.Result}
 */
proto.hiber.publisher.DisablePublisherRequest.Response.prototype.getPagination = function() {
  return /** @type{?proto.hiber.Pagination.Result} */ (
    jspb.Message.getWrapperField(this, base_pb.Pagination.Result, 3));
};


/** @param {?proto.hiber.Pagination.Result|undefined} value */
proto.hiber.publisher.DisablePublisherRequest.Response.prototype.setPagination = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.publisher.DisablePublisherRequest.Response.prototype.clearPagination = function() {
  this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.publisher.DisablePublisherRequest.Response.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string organization = 1;
 * @return {string}
 */
proto.hiber.publisher.DisablePublisherRequest.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.publisher.DisablePublisherRequest.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional PublisherSelection selection = 2;
 * @return {?proto.hiber.publisher.PublisherSelection}
 */
proto.hiber.publisher.DisablePublisherRequest.prototype.getSelection = function() {
  return /** @type{?proto.hiber.publisher.PublisherSelection} */ (
    jspb.Message.getWrapperField(this, proto.hiber.publisher.PublisherSelection, 2));
};


/** @param {?proto.hiber.publisher.PublisherSelection|undefined} value */
proto.hiber.publisher.DisablePublisherRequest.prototype.setSelection = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.publisher.DisablePublisherRequest.prototype.clearSelection = function() {
  this.setSelection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.publisher.DisablePublisherRequest.prototype.hasSelection = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.publisher.UpdatePublisherRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.hiber.publisher.UpdatePublisherRequest.oneofGroups_);
};
goog.inherits(proto.hiber.publisher.UpdatePublisherRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.publisher.UpdatePublisherRequest.displayName = 'proto.hiber.publisher.UpdatePublisherRequest';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.hiber.publisher.UpdatePublisherRequest.oneofGroups_ = [[11,12]];

/**
 * @enum {number}
 */
proto.hiber.publisher.UpdatePublisherRequest.ConfigCase = {
  CONFIG_NOT_SET: 0,
  HTTP: 11,
  MQTT: 12
};

/**
 * @return {proto.hiber.publisher.UpdatePublisherRequest.ConfigCase}
 */
proto.hiber.publisher.UpdatePublisherRequest.prototype.getConfigCase = function() {
  return /** @type {proto.hiber.publisher.UpdatePublisherRequest.ConfigCase} */(jspb.Message.computeOneofCase(this, proto.hiber.publisher.UpdatePublisherRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.publisher.UpdatePublisherRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.publisher.UpdatePublisherRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.publisher.UpdatePublisherRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.publisher.UpdatePublisherRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: jspb.Message.getFieldWithDefault(msg, 1, ""),
    selection: (f = msg.getSelection()) && proto.hiber.publisher.PublisherSelection.toObject(includeInstance, f),
    description: (f = msg.getDescription()) && base_pb.UpdateClearableString.toObject(includeInstance, f),
    url: jspb.Message.getFieldWithDefault(msg, 4, ""),
    contentType: jspb.Message.getFieldWithDefault(msg, 5, 0),
    certificateId: (f = msg.getCertificateId()) && base_pb.UpdateOptionalId.toObject(includeInstance, f),
    eventFilter: (f = msg.getEventFilter()) && proto.hiber.publisher.UpdatePublisherRequest.UpdateEvents.toObject(includeInstance, f),
    modemFilter: (f = msg.getModemFilter()) && proto.hiber.publisher.UpdatePublisherRequest.UpdateModems.toObject(includeInstance, f),
    tagFilter: (f = msg.getTagFilter()) && proto.hiber.publisher.UpdatePublisherRequest.UpdateTags.toObject(includeInstance, f),
    active: (f = msg.getActive()) && base_pb.UpdateBoolean.toObject(includeInstance, f),
    http: (f = msg.getHttp()) && proto.hiber.publisher.Publisher.Data.HTTPConfig.toObject(includeInstance, f),
    mqtt: (f = msg.getMqtt()) && proto.hiber.publisher.Publisher.Data.MQTTConfig.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.publisher.UpdatePublisherRequest}
 */
proto.hiber.publisher.UpdatePublisherRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.publisher.UpdatePublisherRequest;
  return proto.hiber.publisher.UpdatePublisherRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.publisher.UpdatePublisherRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.publisher.UpdatePublisherRequest}
 */
proto.hiber.publisher.UpdatePublisherRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 2:
      var value = new proto.hiber.publisher.PublisherSelection;
      reader.readMessage(value,proto.hiber.publisher.PublisherSelection.deserializeBinaryFromReader);
      msg.setSelection(value);
      break;
    case 3:
      var value = new base_pb.UpdateClearableString;
      reader.readMessage(value,base_pb.UpdateClearableString.deserializeBinaryFromReader);
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 5:
      var value = /** @type {!proto.hiber.publisher.Publisher.ContentType} */ (reader.readEnum());
      msg.setContentType(value);
      break;
    case 6:
      var value = new base_pb.UpdateOptionalId;
      reader.readMessage(value,base_pb.UpdateOptionalId.deserializeBinaryFromReader);
      msg.setCertificateId(value);
      break;
    case 7:
      var value = new proto.hiber.publisher.UpdatePublisherRequest.UpdateEvents;
      reader.readMessage(value,proto.hiber.publisher.UpdatePublisherRequest.UpdateEvents.deserializeBinaryFromReader);
      msg.setEventFilter(value);
      break;
    case 8:
      var value = new proto.hiber.publisher.UpdatePublisherRequest.UpdateModems;
      reader.readMessage(value,proto.hiber.publisher.UpdatePublisherRequest.UpdateModems.deserializeBinaryFromReader);
      msg.setModemFilter(value);
      break;
    case 9:
      var value = new proto.hiber.publisher.UpdatePublisherRequest.UpdateTags;
      reader.readMessage(value,proto.hiber.publisher.UpdatePublisherRequest.UpdateTags.deserializeBinaryFromReader);
      msg.setTagFilter(value);
      break;
    case 10:
      var value = new base_pb.UpdateBoolean;
      reader.readMessage(value,base_pb.UpdateBoolean.deserializeBinaryFromReader);
      msg.setActive(value);
      break;
    case 11:
      var value = new proto.hiber.publisher.Publisher.Data.HTTPConfig;
      reader.readMessage(value,proto.hiber.publisher.Publisher.Data.HTTPConfig.deserializeBinaryFromReader);
      msg.setHttp(value);
      break;
    case 12:
      var value = new proto.hiber.publisher.Publisher.Data.MQTTConfig;
      reader.readMessage(value,proto.hiber.publisher.Publisher.Data.MQTTConfig.deserializeBinaryFromReader);
      msg.setMqtt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.publisher.UpdatePublisherRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.publisher.UpdatePublisherRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.publisher.UpdatePublisherRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.publisher.UpdatePublisherRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSelection();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.hiber.publisher.PublisherSelection.serializeBinaryToWriter
    );
  }
  f = message.getDescription();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      base_pb.UpdateClearableString.serializeBinaryToWriter
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getContentType();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getCertificateId();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      base_pb.UpdateOptionalId.serializeBinaryToWriter
    );
  }
  f = message.getEventFilter();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.hiber.publisher.UpdatePublisherRequest.UpdateEvents.serializeBinaryToWriter
    );
  }
  f = message.getModemFilter();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.hiber.publisher.UpdatePublisherRequest.UpdateModems.serializeBinaryToWriter
    );
  }
  f = message.getTagFilter();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.hiber.publisher.UpdatePublisherRequest.UpdateTags.serializeBinaryToWriter
    );
  }
  f = message.getActive();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      base_pb.UpdateBoolean.serializeBinaryToWriter
    );
  }
  f = message.getHttp();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.hiber.publisher.Publisher.Data.HTTPConfig.serializeBinaryToWriter
    );
  }
  f = message.getMqtt();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.hiber.publisher.Publisher.Data.MQTTConfig.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.publisher.UpdatePublisherRequest.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.publisher.UpdatePublisherRequest.Response.repeatedFields_, null);
};
goog.inherits(proto.hiber.publisher.UpdatePublisherRequest.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.publisher.UpdatePublisherRequest.Response.displayName = 'proto.hiber.publisher.UpdatePublisherRequest.Response';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.publisher.UpdatePublisherRequest.Response.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.publisher.UpdatePublisherRequest.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.publisher.UpdatePublisherRequest.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.publisher.UpdatePublisherRequest.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.publisher.UpdatePublisherRequest.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    updatedList: jspb.Message.toObjectList(msg.getUpdatedList(),
    proto.hiber.publisher.Publisher.toObject, includeInstance),
    request: (f = msg.getRequest()) && proto.hiber.publisher.UpdatePublisherRequest.toObject(includeInstance, f),
    pagination: (f = msg.getPagination()) && base_pb.Pagination.Result.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.publisher.UpdatePublisherRequest.Response}
 */
proto.hiber.publisher.UpdatePublisherRequest.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.publisher.UpdatePublisherRequest.Response;
  return proto.hiber.publisher.UpdatePublisherRequest.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.publisher.UpdatePublisherRequest.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.publisher.UpdatePublisherRequest.Response}
 */
proto.hiber.publisher.UpdatePublisherRequest.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.hiber.publisher.Publisher;
      reader.readMessage(value,proto.hiber.publisher.Publisher.deserializeBinaryFromReader);
      msg.addUpdated(value);
      break;
    case 2:
      var value = new proto.hiber.publisher.UpdatePublisherRequest;
      reader.readMessage(value,proto.hiber.publisher.UpdatePublisherRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    case 3:
      var value = new base_pb.Pagination.Result;
      reader.readMessage(value,base_pb.Pagination.Result.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.publisher.UpdatePublisherRequest.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.publisher.UpdatePublisherRequest.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.publisher.UpdatePublisherRequest.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.publisher.UpdatePublisherRequest.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUpdatedList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.hiber.publisher.Publisher.serializeBinaryToWriter
    );
  }
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.hiber.publisher.UpdatePublisherRequest.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      base_pb.Pagination.Result.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Publisher updated = 1;
 * @return {!Array.<!proto.hiber.publisher.Publisher>}
 */
proto.hiber.publisher.UpdatePublisherRequest.Response.prototype.getUpdatedList = function() {
  return /** @type{!Array.<!proto.hiber.publisher.Publisher>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.hiber.publisher.Publisher, 1));
};


/** @param {!Array.<!proto.hiber.publisher.Publisher>} value */
proto.hiber.publisher.UpdatePublisherRequest.Response.prototype.setUpdatedList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.hiber.publisher.Publisher=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hiber.publisher.Publisher}
 */
proto.hiber.publisher.UpdatePublisherRequest.Response.prototype.addUpdated = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.hiber.publisher.Publisher, opt_index);
};


proto.hiber.publisher.UpdatePublisherRequest.Response.prototype.clearUpdatedList = function() {
  this.setUpdatedList([]);
};


/**
 * optional UpdatePublisherRequest request = 2;
 * @return {?proto.hiber.publisher.UpdatePublisherRequest}
 */
proto.hiber.publisher.UpdatePublisherRequest.Response.prototype.getRequest = function() {
  return /** @type{?proto.hiber.publisher.UpdatePublisherRequest} */ (
    jspb.Message.getWrapperField(this, proto.hiber.publisher.UpdatePublisherRequest, 2));
};


/** @param {?proto.hiber.publisher.UpdatePublisherRequest|undefined} value */
proto.hiber.publisher.UpdatePublisherRequest.Response.prototype.setRequest = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.publisher.UpdatePublisherRequest.Response.prototype.clearRequest = function() {
  this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.publisher.UpdatePublisherRequest.Response.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional hiber.Pagination.Result pagination = 3;
 * @return {?proto.hiber.Pagination.Result}
 */
proto.hiber.publisher.UpdatePublisherRequest.Response.prototype.getPagination = function() {
  return /** @type{?proto.hiber.Pagination.Result} */ (
    jspb.Message.getWrapperField(this, base_pb.Pagination.Result, 3));
};


/** @param {?proto.hiber.Pagination.Result|undefined} value */
proto.hiber.publisher.UpdatePublisherRequest.Response.prototype.setPagination = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.publisher.UpdatePublisherRequest.Response.prototype.clearPagination = function() {
  this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.publisher.UpdatePublisherRequest.Response.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.publisher.UpdatePublisherRequest.UpdateEvents = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.publisher.UpdatePublisherRequest.UpdateEvents, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.publisher.UpdatePublisherRequest.UpdateEvents.displayName = 'proto.hiber.publisher.UpdatePublisherRequest.UpdateEvents';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.publisher.UpdatePublisherRequest.UpdateEvents.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.publisher.UpdatePublisherRequest.UpdateEvents.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.publisher.UpdatePublisherRequest.UpdateEvents} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.publisher.UpdatePublisherRequest.UpdateEvents.toObject = function(includeInstance, msg) {
  var f, obj = {
    updated: jspb.Message.getFieldWithDefault(msg, 1, false),
    value: (f = msg.getValue()) && base_pb.Filter.Events.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.publisher.UpdatePublisherRequest.UpdateEvents}
 */
proto.hiber.publisher.UpdatePublisherRequest.UpdateEvents.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.publisher.UpdatePublisherRequest.UpdateEvents;
  return proto.hiber.publisher.UpdatePublisherRequest.UpdateEvents.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.publisher.UpdatePublisherRequest.UpdateEvents} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.publisher.UpdatePublisherRequest.UpdateEvents}
 */
proto.hiber.publisher.UpdatePublisherRequest.UpdateEvents.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUpdated(value);
      break;
    case 2:
      var value = new base_pb.Filter.Events;
      reader.readMessage(value,base_pb.Filter.Events.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.publisher.UpdatePublisherRequest.UpdateEvents.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.publisher.UpdatePublisherRequest.UpdateEvents.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.publisher.UpdatePublisherRequest.UpdateEvents} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.publisher.UpdatePublisherRequest.UpdateEvents.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUpdated();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      base_pb.Filter.Events.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool updated = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.hiber.publisher.UpdatePublisherRequest.UpdateEvents.prototype.getUpdated = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.hiber.publisher.UpdatePublisherRequest.UpdateEvents.prototype.setUpdated = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional hiber.Filter.Events value = 2;
 * @return {?proto.hiber.Filter.Events}
 */
proto.hiber.publisher.UpdatePublisherRequest.UpdateEvents.prototype.getValue = function() {
  return /** @type{?proto.hiber.Filter.Events} */ (
    jspb.Message.getWrapperField(this, base_pb.Filter.Events, 2));
};


/** @param {?proto.hiber.Filter.Events|undefined} value */
proto.hiber.publisher.UpdatePublisherRequest.UpdateEvents.prototype.setValue = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.publisher.UpdatePublisherRequest.UpdateEvents.prototype.clearValue = function() {
  this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.publisher.UpdatePublisherRequest.UpdateEvents.prototype.hasValue = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.publisher.UpdatePublisherRequest.UpdateModems = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.publisher.UpdatePublisherRequest.UpdateModems, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.publisher.UpdatePublisherRequest.UpdateModems.displayName = 'proto.hiber.publisher.UpdatePublisherRequest.UpdateModems';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.publisher.UpdatePublisherRequest.UpdateModems.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.publisher.UpdatePublisherRequest.UpdateModems.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.publisher.UpdatePublisherRequest.UpdateModems} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.publisher.UpdatePublisherRequest.UpdateModems.toObject = function(includeInstance, msg) {
  var f, obj = {
    updated: jspb.Message.getFieldWithDefault(msg, 1, false),
    value: (f = msg.getValue()) && base_pb.Filter.Modems.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.publisher.UpdatePublisherRequest.UpdateModems}
 */
proto.hiber.publisher.UpdatePublisherRequest.UpdateModems.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.publisher.UpdatePublisherRequest.UpdateModems;
  return proto.hiber.publisher.UpdatePublisherRequest.UpdateModems.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.publisher.UpdatePublisherRequest.UpdateModems} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.publisher.UpdatePublisherRequest.UpdateModems}
 */
proto.hiber.publisher.UpdatePublisherRequest.UpdateModems.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUpdated(value);
      break;
    case 2:
      var value = new base_pb.Filter.Modems;
      reader.readMessage(value,base_pb.Filter.Modems.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.publisher.UpdatePublisherRequest.UpdateModems.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.publisher.UpdatePublisherRequest.UpdateModems.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.publisher.UpdatePublisherRequest.UpdateModems} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.publisher.UpdatePublisherRequest.UpdateModems.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUpdated();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      base_pb.Filter.Modems.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool updated = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.hiber.publisher.UpdatePublisherRequest.UpdateModems.prototype.getUpdated = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.hiber.publisher.UpdatePublisherRequest.UpdateModems.prototype.setUpdated = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional hiber.Filter.Modems value = 2;
 * @return {?proto.hiber.Filter.Modems}
 */
proto.hiber.publisher.UpdatePublisherRequest.UpdateModems.prototype.getValue = function() {
  return /** @type{?proto.hiber.Filter.Modems} */ (
    jspb.Message.getWrapperField(this, base_pb.Filter.Modems, 2));
};


/** @param {?proto.hiber.Filter.Modems|undefined} value */
proto.hiber.publisher.UpdatePublisherRequest.UpdateModems.prototype.setValue = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.publisher.UpdatePublisherRequest.UpdateModems.prototype.clearValue = function() {
  this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.publisher.UpdatePublisherRequest.UpdateModems.prototype.hasValue = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.publisher.UpdatePublisherRequest.UpdateTags = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.publisher.UpdatePublisherRequest.UpdateTags, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.publisher.UpdatePublisherRequest.UpdateTags.displayName = 'proto.hiber.publisher.UpdatePublisherRequest.UpdateTags';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.publisher.UpdatePublisherRequest.UpdateTags.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.publisher.UpdatePublisherRequest.UpdateTags.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.publisher.UpdatePublisherRequest.UpdateTags} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.publisher.UpdatePublisherRequest.UpdateTags.toObject = function(includeInstance, msg) {
  var f, obj = {
    updated: jspb.Message.getFieldWithDefault(msg, 1, false),
    value: (f = msg.getValue()) && base_pb.Filter.Tags.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.publisher.UpdatePublisherRequest.UpdateTags}
 */
proto.hiber.publisher.UpdatePublisherRequest.UpdateTags.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.publisher.UpdatePublisherRequest.UpdateTags;
  return proto.hiber.publisher.UpdatePublisherRequest.UpdateTags.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.publisher.UpdatePublisherRequest.UpdateTags} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.publisher.UpdatePublisherRequest.UpdateTags}
 */
proto.hiber.publisher.UpdatePublisherRequest.UpdateTags.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUpdated(value);
      break;
    case 2:
      var value = new base_pb.Filter.Tags;
      reader.readMessage(value,base_pb.Filter.Tags.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.publisher.UpdatePublisherRequest.UpdateTags.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.publisher.UpdatePublisherRequest.UpdateTags.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.publisher.UpdatePublisherRequest.UpdateTags} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.publisher.UpdatePublisherRequest.UpdateTags.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUpdated();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      base_pb.Filter.Tags.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool updated = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.hiber.publisher.UpdatePublisherRequest.UpdateTags.prototype.getUpdated = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.hiber.publisher.UpdatePublisherRequest.UpdateTags.prototype.setUpdated = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional hiber.Filter.Tags value = 2;
 * @return {?proto.hiber.Filter.Tags}
 */
proto.hiber.publisher.UpdatePublisherRequest.UpdateTags.prototype.getValue = function() {
  return /** @type{?proto.hiber.Filter.Tags} */ (
    jspb.Message.getWrapperField(this, base_pb.Filter.Tags, 2));
};


/** @param {?proto.hiber.Filter.Tags|undefined} value */
proto.hiber.publisher.UpdatePublisherRequest.UpdateTags.prototype.setValue = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.publisher.UpdatePublisherRequest.UpdateTags.prototype.clearValue = function() {
  this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.publisher.UpdatePublisherRequest.UpdateTags.prototype.hasValue = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string organization = 1;
 * @return {string}
 */
proto.hiber.publisher.UpdatePublisherRequest.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.publisher.UpdatePublisherRequest.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional PublisherSelection selection = 2;
 * @return {?proto.hiber.publisher.PublisherSelection}
 */
proto.hiber.publisher.UpdatePublisherRequest.prototype.getSelection = function() {
  return /** @type{?proto.hiber.publisher.PublisherSelection} */ (
    jspb.Message.getWrapperField(this, proto.hiber.publisher.PublisherSelection, 2));
};


/** @param {?proto.hiber.publisher.PublisherSelection|undefined} value */
proto.hiber.publisher.UpdatePublisherRequest.prototype.setSelection = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.publisher.UpdatePublisherRequest.prototype.clearSelection = function() {
  this.setSelection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.publisher.UpdatePublisherRequest.prototype.hasSelection = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional hiber.UpdateClearableString description = 3;
 * @return {?proto.hiber.UpdateClearableString}
 */
proto.hiber.publisher.UpdatePublisherRequest.prototype.getDescription = function() {
  return /** @type{?proto.hiber.UpdateClearableString} */ (
    jspb.Message.getWrapperField(this, base_pb.UpdateClearableString, 3));
};


/** @param {?proto.hiber.UpdateClearableString|undefined} value */
proto.hiber.publisher.UpdatePublisherRequest.prototype.setDescription = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.publisher.UpdatePublisherRequest.prototype.clearDescription = function() {
  this.setDescription(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.publisher.UpdatePublisherRequest.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string url = 4;
 * @return {string}
 */
proto.hiber.publisher.UpdatePublisherRequest.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.hiber.publisher.UpdatePublisherRequest.prototype.setUrl = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional Publisher.ContentType content_type = 5;
 * @return {!proto.hiber.publisher.Publisher.ContentType}
 */
proto.hiber.publisher.UpdatePublisherRequest.prototype.getContentType = function() {
  return /** @type {!proto.hiber.publisher.Publisher.ContentType} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {!proto.hiber.publisher.Publisher.ContentType} value */
proto.hiber.publisher.UpdatePublisherRequest.prototype.setContentType = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional hiber.UpdateOptionalId certificate_id = 6;
 * @return {?proto.hiber.UpdateOptionalId}
 */
proto.hiber.publisher.UpdatePublisherRequest.prototype.getCertificateId = function() {
  return /** @type{?proto.hiber.UpdateOptionalId} */ (
    jspb.Message.getWrapperField(this, base_pb.UpdateOptionalId, 6));
};


/** @param {?proto.hiber.UpdateOptionalId|undefined} value */
proto.hiber.publisher.UpdatePublisherRequest.prototype.setCertificateId = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.hiber.publisher.UpdatePublisherRequest.prototype.clearCertificateId = function() {
  this.setCertificateId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.publisher.UpdatePublisherRequest.prototype.hasCertificateId = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional UpdateEvents event_filter = 7;
 * @return {?proto.hiber.publisher.UpdatePublisherRequest.UpdateEvents}
 */
proto.hiber.publisher.UpdatePublisherRequest.prototype.getEventFilter = function() {
  return /** @type{?proto.hiber.publisher.UpdatePublisherRequest.UpdateEvents} */ (
    jspb.Message.getWrapperField(this, proto.hiber.publisher.UpdatePublisherRequest.UpdateEvents, 7));
};


/** @param {?proto.hiber.publisher.UpdatePublisherRequest.UpdateEvents|undefined} value */
proto.hiber.publisher.UpdatePublisherRequest.prototype.setEventFilter = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.hiber.publisher.UpdatePublisherRequest.prototype.clearEventFilter = function() {
  this.setEventFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.publisher.UpdatePublisherRequest.prototype.hasEventFilter = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional UpdateModems modem_filter = 8;
 * @return {?proto.hiber.publisher.UpdatePublisherRequest.UpdateModems}
 */
proto.hiber.publisher.UpdatePublisherRequest.prototype.getModemFilter = function() {
  return /** @type{?proto.hiber.publisher.UpdatePublisherRequest.UpdateModems} */ (
    jspb.Message.getWrapperField(this, proto.hiber.publisher.UpdatePublisherRequest.UpdateModems, 8));
};


/** @param {?proto.hiber.publisher.UpdatePublisherRequest.UpdateModems|undefined} value */
proto.hiber.publisher.UpdatePublisherRequest.prototype.setModemFilter = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.hiber.publisher.UpdatePublisherRequest.prototype.clearModemFilter = function() {
  this.setModemFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.publisher.UpdatePublisherRequest.prototype.hasModemFilter = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional UpdateTags tag_filter = 9;
 * @return {?proto.hiber.publisher.UpdatePublisherRequest.UpdateTags}
 */
proto.hiber.publisher.UpdatePublisherRequest.prototype.getTagFilter = function() {
  return /** @type{?proto.hiber.publisher.UpdatePublisherRequest.UpdateTags} */ (
    jspb.Message.getWrapperField(this, proto.hiber.publisher.UpdatePublisherRequest.UpdateTags, 9));
};


/** @param {?proto.hiber.publisher.UpdatePublisherRequest.UpdateTags|undefined} value */
proto.hiber.publisher.UpdatePublisherRequest.prototype.setTagFilter = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


proto.hiber.publisher.UpdatePublisherRequest.prototype.clearTagFilter = function() {
  this.setTagFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.publisher.UpdatePublisherRequest.prototype.hasTagFilter = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional hiber.UpdateBoolean active = 10;
 * @return {?proto.hiber.UpdateBoolean}
 */
proto.hiber.publisher.UpdatePublisherRequest.prototype.getActive = function() {
  return /** @type{?proto.hiber.UpdateBoolean} */ (
    jspb.Message.getWrapperField(this, base_pb.UpdateBoolean, 10));
};


/** @param {?proto.hiber.UpdateBoolean|undefined} value */
proto.hiber.publisher.UpdatePublisherRequest.prototype.setActive = function(value) {
  jspb.Message.setWrapperField(this, 10, value);
};


proto.hiber.publisher.UpdatePublisherRequest.prototype.clearActive = function() {
  this.setActive(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.publisher.UpdatePublisherRequest.prototype.hasActive = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional Publisher.Data.HTTPConfig http = 11;
 * @return {?proto.hiber.publisher.Publisher.Data.HTTPConfig}
 */
proto.hiber.publisher.UpdatePublisherRequest.prototype.getHttp = function() {
  return /** @type{?proto.hiber.publisher.Publisher.Data.HTTPConfig} */ (
    jspb.Message.getWrapperField(this, proto.hiber.publisher.Publisher.Data.HTTPConfig, 11));
};


/** @param {?proto.hiber.publisher.Publisher.Data.HTTPConfig|undefined} value */
proto.hiber.publisher.UpdatePublisherRequest.prototype.setHttp = function(value) {
  jspb.Message.setOneofWrapperField(this, 11, proto.hiber.publisher.UpdatePublisherRequest.oneofGroups_[0], value);
};


proto.hiber.publisher.UpdatePublisherRequest.prototype.clearHttp = function() {
  this.setHttp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.publisher.UpdatePublisherRequest.prototype.hasHttp = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional Publisher.Data.MQTTConfig mqtt = 12;
 * @return {?proto.hiber.publisher.Publisher.Data.MQTTConfig}
 */
proto.hiber.publisher.UpdatePublisherRequest.prototype.getMqtt = function() {
  return /** @type{?proto.hiber.publisher.Publisher.Data.MQTTConfig} */ (
    jspb.Message.getWrapperField(this, proto.hiber.publisher.Publisher.Data.MQTTConfig, 12));
};


/** @param {?proto.hiber.publisher.Publisher.Data.MQTTConfig|undefined} value */
proto.hiber.publisher.UpdatePublisherRequest.prototype.setMqtt = function(value) {
  jspb.Message.setOneofWrapperField(this, 12, proto.hiber.publisher.UpdatePublisherRequest.oneofGroups_[0], value);
};


proto.hiber.publisher.UpdatePublisherRequest.prototype.clearMqtt = function() {
  this.setMqtt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.publisher.UpdatePublisherRequest.prototype.hasMqtt = function() {
  return jspb.Message.getField(this, 12) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.publisher.UpdatePublisherTagsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.publisher.UpdatePublisherTagsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.publisher.UpdatePublisherTagsRequest.displayName = 'proto.hiber.publisher.UpdatePublisherTagsRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.publisher.UpdatePublisherTagsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.publisher.UpdatePublisherTagsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.publisher.UpdatePublisherTagsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.publisher.UpdatePublisherTagsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: jspb.Message.getFieldWithDefault(msg, 1, ""),
    selection: (f = msg.getSelection()) && proto.hiber.publisher.PublisherSelection.toObject(includeInstance, f),
    update: (f = msg.getUpdate()) && tag_pb.UpdateTagsForItem.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.publisher.UpdatePublisherTagsRequest}
 */
proto.hiber.publisher.UpdatePublisherTagsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.publisher.UpdatePublisherTagsRequest;
  return proto.hiber.publisher.UpdatePublisherTagsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.publisher.UpdatePublisherTagsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.publisher.UpdatePublisherTagsRequest}
 */
proto.hiber.publisher.UpdatePublisherTagsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 2:
      var value = new proto.hiber.publisher.PublisherSelection;
      reader.readMessage(value,proto.hiber.publisher.PublisherSelection.deserializeBinaryFromReader);
      msg.setSelection(value);
      break;
    case 3:
      var value = new tag_pb.UpdateTagsForItem;
      reader.readMessage(value,tag_pb.UpdateTagsForItem.deserializeBinaryFromReader);
      msg.setUpdate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.publisher.UpdatePublisherTagsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.publisher.UpdatePublisherTagsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.publisher.UpdatePublisherTagsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.publisher.UpdatePublisherTagsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSelection();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.hiber.publisher.PublisherSelection.serializeBinaryToWriter
    );
  }
  f = message.getUpdate();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      tag_pb.UpdateTagsForItem.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.publisher.UpdatePublisherTagsRequest.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.publisher.UpdatePublisherTagsRequest.Response.repeatedFields_, null);
};
goog.inherits(proto.hiber.publisher.UpdatePublisherTagsRequest.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.publisher.UpdatePublisherTagsRequest.Response.displayName = 'proto.hiber.publisher.UpdatePublisherTagsRequest.Response';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.publisher.UpdatePublisherTagsRequest.Response.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.publisher.UpdatePublisherTagsRequest.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.publisher.UpdatePublisherTagsRequest.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.publisher.UpdatePublisherTagsRequest.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.publisher.UpdatePublisherTagsRequest.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    publishersList: jspb.Message.toObjectList(msg.getPublishersList(),
    proto.hiber.publisher.Publisher.toObject, includeInstance),
    request: (f = msg.getRequest()) && proto.hiber.publisher.UpdatePublisherTagsRequest.toObject(includeInstance, f),
    pagination: (f = msg.getPagination()) && base_pb.Pagination.Result.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.publisher.UpdatePublisherTagsRequest.Response}
 */
proto.hiber.publisher.UpdatePublisherTagsRequest.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.publisher.UpdatePublisherTagsRequest.Response;
  return proto.hiber.publisher.UpdatePublisherTagsRequest.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.publisher.UpdatePublisherTagsRequest.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.publisher.UpdatePublisherTagsRequest.Response}
 */
proto.hiber.publisher.UpdatePublisherTagsRequest.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.hiber.publisher.Publisher;
      reader.readMessage(value,proto.hiber.publisher.Publisher.deserializeBinaryFromReader);
      msg.addPublishers(value);
      break;
    case 2:
      var value = new proto.hiber.publisher.UpdatePublisherTagsRequest;
      reader.readMessage(value,proto.hiber.publisher.UpdatePublisherTagsRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    case 3:
      var value = new base_pb.Pagination.Result;
      reader.readMessage(value,base_pb.Pagination.Result.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.publisher.UpdatePublisherTagsRequest.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.publisher.UpdatePublisherTagsRequest.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.publisher.UpdatePublisherTagsRequest.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.publisher.UpdatePublisherTagsRequest.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPublishersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.hiber.publisher.Publisher.serializeBinaryToWriter
    );
  }
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.hiber.publisher.UpdatePublisherTagsRequest.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      base_pb.Pagination.Result.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Publisher publishers = 1;
 * @return {!Array.<!proto.hiber.publisher.Publisher>}
 */
proto.hiber.publisher.UpdatePublisherTagsRequest.Response.prototype.getPublishersList = function() {
  return /** @type{!Array.<!proto.hiber.publisher.Publisher>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.hiber.publisher.Publisher, 1));
};


/** @param {!Array.<!proto.hiber.publisher.Publisher>} value */
proto.hiber.publisher.UpdatePublisherTagsRequest.Response.prototype.setPublishersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.hiber.publisher.Publisher=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hiber.publisher.Publisher}
 */
proto.hiber.publisher.UpdatePublisherTagsRequest.Response.prototype.addPublishers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.hiber.publisher.Publisher, opt_index);
};


proto.hiber.publisher.UpdatePublisherTagsRequest.Response.prototype.clearPublishersList = function() {
  this.setPublishersList([]);
};


/**
 * optional UpdatePublisherTagsRequest request = 2;
 * @return {?proto.hiber.publisher.UpdatePublisherTagsRequest}
 */
proto.hiber.publisher.UpdatePublisherTagsRequest.Response.prototype.getRequest = function() {
  return /** @type{?proto.hiber.publisher.UpdatePublisherTagsRequest} */ (
    jspb.Message.getWrapperField(this, proto.hiber.publisher.UpdatePublisherTagsRequest, 2));
};


/** @param {?proto.hiber.publisher.UpdatePublisherTagsRequest|undefined} value */
proto.hiber.publisher.UpdatePublisherTagsRequest.Response.prototype.setRequest = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.publisher.UpdatePublisherTagsRequest.Response.prototype.clearRequest = function() {
  this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.publisher.UpdatePublisherTagsRequest.Response.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional hiber.Pagination.Result pagination = 3;
 * @return {?proto.hiber.Pagination.Result}
 */
proto.hiber.publisher.UpdatePublisherTagsRequest.Response.prototype.getPagination = function() {
  return /** @type{?proto.hiber.Pagination.Result} */ (
    jspb.Message.getWrapperField(this, base_pb.Pagination.Result, 3));
};


/** @param {?proto.hiber.Pagination.Result|undefined} value */
proto.hiber.publisher.UpdatePublisherTagsRequest.Response.prototype.setPagination = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.publisher.UpdatePublisherTagsRequest.Response.prototype.clearPagination = function() {
  this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.publisher.UpdatePublisherTagsRequest.Response.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string organization = 1;
 * @return {string}
 */
proto.hiber.publisher.UpdatePublisherTagsRequest.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.publisher.UpdatePublisherTagsRequest.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional PublisherSelection selection = 2;
 * @return {?proto.hiber.publisher.PublisherSelection}
 */
proto.hiber.publisher.UpdatePublisherTagsRequest.prototype.getSelection = function() {
  return /** @type{?proto.hiber.publisher.PublisherSelection} */ (
    jspb.Message.getWrapperField(this, proto.hiber.publisher.PublisherSelection, 2));
};


/** @param {?proto.hiber.publisher.PublisherSelection|undefined} value */
proto.hiber.publisher.UpdatePublisherTagsRequest.prototype.setSelection = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.publisher.UpdatePublisherTagsRequest.prototype.clearSelection = function() {
  this.setSelection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.publisher.UpdatePublisherTagsRequest.prototype.hasSelection = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional hiber.tag.UpdateTagsForItem update = 3;
 * @return {?proto.hiber.tag.UpdateTagsForItem}
 */
proto.hiber.publisher.UpdatePublisherTagsRequest.prototype.getUpdate = function() {
  return /** @type{?proto.hiber.tag.UpdateTagsForItem} */ (
    jspb.Message.getWrapperField(this, tag_pb.UpdateTagsForItem, 3));
};


/** @param {?proto.hiber.tag.UpdateTagsForItem|undefined} value */
proto.hiber.publisher.UpdatePublisherTagsRequest.prototype.setUpdate = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.publisher.UpdatePublisherTagsRequest.prototype.clearUpdate = function() {
  this.setUpdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.publisher.UpdatePublisherTagsRequest.prototype.hasUpdate = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.publisher.DeletePublisherRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.publisher.DeletePublisherRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.publisher.DeletePublisherRequest.displayName = 'proto.hiber.publisher.DeletePublisherRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.publisher.DeletePublisherRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.publisher.DeletePublisherRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.publisher.DeletePublisherRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.publisher.DeletePublisherRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: jspb.Message.getFieldWithDefault(msg, 1, ""),
    id: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.publisher.DeletePublisherRequest}
 */
proto.hiber.publisher.DeletePublisherRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.publisher.DeletePublisherRequest;
  return proto.hiber.publisher.DeletePublisherRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.publisher.DeletePublisherRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.publisher.DeletePublisherRequest}
 */
proto.hiber.publisher.DeletePublisherRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.publisher.DeletePublisherRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.publisher.DeletePublisherRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.publisher.DeletePublisherRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.publisher.DeletePublisherRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.publisher.DeletePublisherRequest.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.publisher.DeletePublisherRequest.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.publisher.DeletePublisherRequest.Response.displayName = 'proto.hiber.publisher.DeletePublisherRequest.Response';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.publisher.DeletePublisherRequest.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.publisher.DeletePublisherRequest.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.publisher.DeletePublisherRequest.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.publisher.DeletePublisherRequest.Response.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.publisher.DeletePublisherRequest.Response}
 */
proto.hiber.publisher.DeletePublisherRequest.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.publisher.DeletePublisherRequest.Response;
  return proto.hiber.publisher.DeletePublisherRequest.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.publisher.DeletePublisherRequest.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.publisher.DeletePublisherRequest.Response}
 */
proto.hiber.publisher.DeletePublisherRequest.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.publisher.DeletePublisherRequest.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.publisher.DeletePublisherRequest.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.publisher.DeletePublisherRequest.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.publisher.DeletePublisherRequest.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * optional string organization = 1;
 * @return {string}
 */
proto.hiber.publisher.DeletePublisherRequest.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.publisher.DeletePublisherRequest.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int64 id = 2;
 * @return {number}
 */
proto.hiber.publisher.DeletePublisherRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.hiber.publisher.DeletePublisherRequest.prototype.setId = function(value) {
  jspb.Message.setField(this, 2, value);
};


goog.object.extend(exports, proto.hiber.publisher);
