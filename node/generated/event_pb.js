/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var base_pb = require('./base_pb.js');
var modem_pb = require('./modem_pb.js');
var modem_transfer_pb = require('./modem_transfer_pb.js');
var modem_claim_pb = require('./modem_claim_pb.js');
var tag_pb = require('./tag_pb.js');
var user_pb = require('./user_pb.js');
var webhook_pb = require('./webhook_pb.js');
goog.exportSymbol('proto.hiber.event.Event', null, global);
goog.exportSymbol('proto.hiber.event.Event.ModemEvent', null, global);
goog.exportSymbol('proto.hiber.event.Event.ModemEvent.ClaimEvent', null, global);
goog.exportSymbol('proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimAcceptedEvent', null, global);
goog.exportSymbol('proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimRejectedEvent', null, global);
goog.exportSymbol('proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimedEvent', null, global);
goog.exportSymbol('proto.hiber.event.Event.ModemEvent.MessageEvent', null, global);
goog.exportSymbol('proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageCannotBeParsedEvent', null, global);
goog.exportSymbol('proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDelayedEvent', null, global);
goog.exportSymbol('proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDroppedEvent', null, global);
goog.exportSymbol('proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageReceivedEvent', null, global);
goog.exportSymbol('proto.hiber.event.Event.ModemEvent.ModemLocationUpdatedEvent', null, global);
goog.exportSymbol('proto.hiber.event.Event.ModemEvent.ModemStaleEvent', null, global);
goog.exportSymbol('proto.hiber.event.Event.ModemTransferEvent', null, global);
goog.exportSymbol('proto.hiber.event.Event.ModemTransferEvent.ModemTransferCancelledEvent', null, global);
goog.exportSymbol('proto.hiber.event.Event.ModemTransferEvent.ModemTransferNotReceivedEvent', null, global);
goog.exportSymbol('proto.hiber.event.Event.ModemTransferEvent.ModemTransferReceivedEvent', null, global);
goog.exportSymbol('proto.hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent', null, global);
goog.exportSymbol('proto.hiber.event.Event.ModemTransferEvent.ModemTransferStartedEvent', null, global);
goog.exportSymbol('proto.hiber.event.Event.UserEvent', null, global);
goog.exportSymbol('proto.hiber.event.Event.UserEvent.UserAccessRequestEvent', null, global);
goog.exportSymbol('proto.hiber.event.Event.UserEvent.UserAddedEvent', null, global);
goog.exportSymbol('proto.hiber.event.Event.UserEvent.UserRemovedEvent', null, global);
goog.exportSymbol('proto.hiber.event.Event.WebhookEvent', null, global);
goog.exportSymbol('proto.hiber.event.Event.WebhookEvent.CreatedEvent', null, global);
goog.exportSymbol('proto.hiber.event.Event.WebhookEvent.DeletedEvent', null, global);
goog.exportSymbol('proto.hiber.event.Event.WebhookEvent.FailedEvent', null, global);
goog.exportSymbol('proto.hiber.event.Event.WebhookEvent.UpdatedEvent', null, global);
goog.exportSymbol('proto.hiber.event.EventSelection', null, global);
goog.exportSymbol('proto.hiber.event.EventStreamRequest', null, global);
goog.exportSymbol('proto.hiber.event.ListEventsRequest', null, global);
goog.exportSymbol('proto.hiber.event.ListEventsRequest.Response', null, global);
goog.exportSymbol('proto.hiber.event.ListEventsRequest.Sort', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.event.Event = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.hiber.event.Event.oneofGroups_);
};
goog.inherits(proto.hiber.event.Event, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.event.Event.displayName = 'proto.hiber.event.Event';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.hiber.event.Event.oneofGroups_ = [[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22]];

/**
 * @enum {number}
 */
proto.hiber.event.Event.EventCase = {
  EVENT_NOT_SET: 0,
  MODEM_LOCATION_UPDATED: 2,
  MODEM_STALE: 3,
  MODEM_MESSAGE_RECEIVED: 4,
  MODEM_MESSAGE_DROPPED: 5,
  MODEM_MESSAGE_DELAYED: 6,
  MODEM_MESSAGE_CANNOT_BE_PARSED: 7,
  USER_ADDED: 8,
  USER_REMOVED: 9,
  USER_ACCESS_REQUEST: 10,
  WEBHOOK_CREATED: 11,
  WEBHOOK_UPDATED: 12,
  WEBHOOK_DELETED: 13,
  WEBHOOK_FAILED: 14,
  MODEM_TRANSFER_STARTED: 15,
  MODEM_TRANSFER_CANCELLED: 16,
  MODEM_TRANSFER_RECEIVED: 17,
  MODEM_TRANSFER_NOT_RECEIVED: 18,
  MODEM_TRANSFER_RETURN_TRANSFER_STARTED: 19,
  MODEM_CLAIMED_EVENT: 20,
  MODEM_CLAIM_ACCEPTED_EVENT: 21,
  MODEM_CLAIM_REJECTED_EVENT: 22
};

/**
 * @return {proto.hiber.event.Event.EventCase}
 */
proto.hiber.event.Event.prototype.getEventCase = function() {
  return /** @type {proto.hiber.event.Event.EventCase} */(jspb.Message.computeOneofCase(this, proto.hiber.event.Event.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.event.Event.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.event.Event.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.event.Event} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.Event.toObject = function(includeInstance, msg) {
  var f, obj = {
    modemLocationUpdated: (f = msg.getModemLocationUpdated()) && proto.hiber.event.Event.ModemEvent.ModemLocationUpdatedEvent.toObject(includeInstance, f),
    modemStale: (f = msg.getModemStale()) && proto.hiber.event.Event.ModemEvent.ModemStaleEvent.toObject(includeInstance, f),
    modemMessageReceived: (f = msg.getModemMessageReceived()) && proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageReceivedEvent.toObject(includeInstance, f),
    modemMessageDropped: (f = msg.getModemMessageDropped()) && proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDroppedEvent.toObject(includeInstance, f),
    modemMessageDelayed: (f = msg.getModemMessageDelayed()) && proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDelayedEvent.toObject(includeInstance, f),
    modemMessageCannotBeParsed: (f = msg.getModemMessageCannotBeParsed()) && proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageCannotBeParsedEvent.toObject(includeInstance, f),
    userAdded: (f = msg.getUserAdded()) && proto.hiber.event.Event.UserEvent.UserAddedEvent.toObject(includeInstance, f),
    userRemoved: (f = msg.getUserRemoved()) && proto.hiber.event.Event.UserEvent.UserRemovedEvent.toObject(includeInstance, f),
    userAccessRequest: (f = msg.getUserAccessRequest()) && proto.hiber.event.Event.UserEvent.UserAccessRequestEvent.toObject(includeInstance, f),
    webhookCreated: (f = msg.getWebhookCreated()) && proto.hiber.event.Event.WebhookEvent.CreatedEvent.toObject(includeInstance, f),
    webhookUpdated: (f = msg.getWebhookUpdated()) && proto.hiber.event.Event.WebhookEvent.UpdatedEvent.toObject(includeInstance, f),
    webhookDeleted: (f = msg.getWebhookDeleted()) && proto.hiber.event.Event.WebhookEvent.DeletedEvent.toObject(includeInstance, f),
    webhookFailed: (f = msg.getWebhookFailed()) && proto.hiber.event.Event.WebhookEvent.FailedEvent.toObject(includeInstance, f),
    modemTransferStarted: (f = msg.getModemTransferStarted()) && proto.hiber.event.Event.ModemTransferEvent.ModemTransferStartedEvent.toObject(includeInstance, f),
    modemTransferCancelled: (f = msg.getModemTransferCancelled()) && proto.hiber.event.Event.ModemTransferEvent.ModemTransferCancelledEvent.toObject(includeInstance, f),
    modemTransferReceived: (f = msg.getModemTransferReceived()) && proto.hiber.event.Event.ModemTransferEvent.ModemTransferReceivedEvent.toObject(includeInstance, f),
    modemTransferNotReceived: (f = msg.getModemTransferNotReceived()) && proto.hiber.event.Event.ModemTransferEvent.ModemTransferNotReceivedEvent.toObject(includeInstance, f),
    modemTransferReturnTransferStarted: (f = msg.getModemTransferReturnTransferStarted()) && proto.hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent.toObject(includeInstance, f),
    modemClaimedEvent: (f = msg.getModemClaimedEvent()) && proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimedEvent.toObject(includeInstance, f),
    modemClaimAcceptedEvent: (f = msg.getModemClaimAcceptedEvent()) && proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimAcceptedEvent.toObject(includeInstance, f),
    modemClaimRejectedEvent: (f = msg.getModemClaimRejectedEvent()) && proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimRejectedEvent.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.event.Event}
 */
proto.hiber.event.Event.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.event.Event;
  return proto.hiber.event.Event.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.event.Event} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.event.Event}
 */
proto.hiber.event.Event.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new proto.hiber.event.Event.ModemEvent.ModemLocationUpdatedEvent;
      reader.readMessage(value,proto.hiber.event.Event.ModemEvent.ModemLocationUpdatedEvent.deserializeBinaryFromReader);
      msg.setModemLocationUpdated(value);
      break;
    case 3:
      var value = new proto.hiber.event.Event.ModemEvent.ModemStaleEvent;
      reader.readMessage(value,proto.hiber.event.Event.ModemEvent.ModemStaleEvent.deserializeBinaryFromReader);
      msg.setModemStale(value);
      break;
    case 4:
      var value = new proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageReceivedEvent;
      reader.readMessage(value,proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageReceivedEvent.deserializeBinaryFromReader);
      msg.setModemMessageReceived(value);
      break;
    case 5:
      var value = new proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDroppedEvent;
      reader.readMessage(value,proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDroppedEvent.deserializeBinaryFromReader);
      msg.setModemMessageDropped(value);
      break;
    case 6:
      var value = new proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDelayedEvent;
      reader.readMessage(value,proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDelayedEvent.deserializeBinaryFromReader);
      msg.setModemMessageDelayed(value);
      break;
    case 7:
      var value = new proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageCannotBeParsedEvent;
      reader.readMessage(value,proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageCannotBeParsedEvent.deserializeBinaryFromReader);
      msg.setModemMessageCannotBeParsed(value);
      break;
    case 8:
      var value = new proto.hiber.event.Event.UserEvent.UserAddedEvent;
      reader.readMessage(value,proto.hiber.event.Event.UserEvent.UserAddedEvent.deserializeBinaryFromReader);
      msg.setUserAdded(value);
      break;
    case 9:
      var value = new proto.hiber.event.Event.UserEvent.UserRemovedEvent;
      reader.readMessage(value,proto.hiber.event.Event.UserEvent.UserRemovedEvent.deserializeBinaryFromReader);
      msg.setUserRemoved(value);
      break;
    case 10:
      var value = new proto.hiber.event.Event.UserEvent.UserAccessRequestEvent;
      reader.readMessage(value,proto.hiber.event.Event.UserEvent.UserAccessRequestEvent.deserializeBinaryFromReader);
      msg.setUserAccessRequest(value);
      break;
    case 11:
      var value = new proto.hiber.event.Event.WebhookEvent.CreatedEvent;
      reader.readMessage(value,proto.hiber.event.Event.WebhookEvent.CreatedEvent.deserializeBinaryFromReader);
      msg.setWebhookCreated(value);
      break;
    case 12:
      var value = new proto.hiber.event.Event.WebhookEvent.UpdatedEvent;
      reader.readMessage(value,proto.hiber.event.Event.WebhookEvent.UpdatedEvent.deserializeBinaryFromReader);
      msg.setWebhookUpdated(value);
      break;
    case 13:
      var value = new proto.hiber.event.Event.WebhookEvent.DeletedEvent;
      reader.readMessage(value,proto.hiber.event.Event.WebhookEvent.DeletedEvent.deserializeBinaryFromReader);
      msg.setWebhookDeleted(value);
      break;
    case 14:
      var value = new proto.hiber.event.Event.WebhookEvent.FailedEvent;
      reader.readMessage(value,proto.hiber.event.Event.WebhookEvent.FailedEvent.deserializeBinaryFromReader);
      msg.setWebhookFailed(value);
      break;
    case 15:
      var value = new proto.hiber.event.Event.ModemTransferEvent.ModemTransferStartedEvent;
      reader.readMessage(value,proto.hiber.event.Event.ModemTransferEvent.ModemTransferStartedEvent.deserializeBinaryFromReader);
      msg.setModemTransferStarted(value);
      break;
    case 16:
      var value = new proto.hiber.event.Event.ModemTransferEvent.ModemTransferCancelledEvent;
      reader.readMessage(value,proto.hiber.event.Event.ModemTransferEvent.ModemTransferCancelledEvent.deserializeBinaryFromReader);
      msg.setModemTransferCancelled(value);
      break;
    case 17:
      var value = new proto.hiber.event.Event.ModemTransferEvent.ModemTransferReceivedEvent;
      reader.readMessage(value,proto.hiber.event.Event.ModemTransferEvent.ModemTransferReceivedEvent.deserializeBinaryFromReader);
      msg.setModemTransferReceived(value);
      break;
    case 18:
      var value = new proto.hiber.event.Event.ModemTransferEvent.ModemTransferNotReceivedEvent;
      reader.readMessage(value,proto.hiber.event.Event.ModemTransferEvent.ModemTransferNotReceivedEvent.deserializeBinaryFromReader);
      msg.setModemTransferNotReceived(value);
      break;
    case 19:
      var value = new proto.hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent;
      reader.readMessage(value,proto.hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent.deserializeBinaryFromReader);
      msg.setModemTransferReturnTransferStarted(value);
      break;
    case 20:
      var value = new proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimedEvent;
      reader.readMessage(value,proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimedEvent.deserializeBinaryFromReader);
      msg.setModemClaimedEvent(value);
      break;
    case 21:
      var value = new proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimAcceptedEvent;
      reader.readMessage(value,proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimAcceptedEvent.deserializeBinaryFromReader);
      msg.setModemClaimAcceptedEvent(value);
      break;
    case 22:
      var value = new proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimRejectedEvent;
      reader.readMessage(value,proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimRejectedEvent.deserializeBinaryFromReader);
      msg.setModemClaimRejectedEvent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.event.Event.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.event.Event.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.event.Event} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.Event.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModemLocationUpdated();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.hiber.event.Event.ModemEvent.ModemLocationUpdatedEvent.serializeBinaryToWriter
    );
  }
  f = message.getModemStale();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.hiber.event.Event.ModemEvent.ModemStaleEvent.serializeBinaryToWriter
    );
  }
  f = message.getModemMessageReceived();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageReceivedEvent.serializeBinaryToWriter
    );
  }
  f = message.getModemMessageDropped();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDroppedEvent.serializeBinaryToWriter
    );
  }
  f = message.getModemMessageDelayed();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDelayedEvent.serializeBinaryToWriter
    );
  }
  f = message.getModemMessageCannotBeParsed();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageCannotBeParsedEvent.serializeBinaryToWriter
    );
  }
  f = message.getUserAdded();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.hiber.event.Event.UserEvent.UserAddedEvent.serializeBinaryToWriter
    );
  }
  f = message.getUserRemoved();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.hiber.event.Event.UserEvent.UserRemovedEvent.serializeBinaryToWriter
    );
  }
  f = message.getUserAccessRequest();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.hiber.event.Event.UserEvent.UserAccessRequestEvent.serializeBinaryToWriter
    );
  }
  f = message.getWebhookCreated();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.hiber.event.Event.WebhookEvent.CreatedEvent.serializeBinaryToWriter
    );
  }
  f = message.getWebhookUpdated();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.hiber.event.Event.WebhookEvent.UpdatedEvent.serializeBinaryToWriter
    );
  }
  f = message.getWebhookDeleted();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.hiber.event.Event.WebhookEvent.DeletedEvent.serializeBinaryToWriter
    );
  }
  f = message.getWebhookFailed();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.hiber.event.Event.WebhookEvent.FailedEvent.serializeBinaryToWriter
    );
  }
  f = message.getModemTransferStarted();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.hiber.event.Event.ModemTransferEvent.ModemTransferStartedEvent.serializeBinaryToWriter
    );
  }
  f = message.getModemTransferCancelled();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.hiber.event.Event.ModemTransferEvent.ModemTransferCancelledEvent.serializeBinaryToWriter
    );
  }
  f = message.getModemTransferReceived();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.hiber.event.Event.ModemTransferEvent.ModemTransferReceivedEvent.serializeBinaryToWriter
    );
  }
  f = message.getModemTransferNotReceived();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto.hiber.event.Event.ModemTransferEvent.ModemTransferNotReceivedEvent.serializeBinaryToWriter
    );
  }
  f = message.getModemTransferReturnTransferStarted();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      proto.hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent.serializeBinaryToWriter
    );
  }
  f = message.getModemClaimedEvent();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimedEvent.serializeBinaryToWriter
    );
  }
  f = message.getModemClaimAcceptedEvent();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimAcceptedEvent.serializeBinaryToWriter
    );
  }
  f = message.getModemClaimRejectedEvent();
  if (f != null) {
    writer.writeMessage(
      22,
      f,
      proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimRejectedEvent.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.event.Event.ModemEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.event.Event.ModemEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.event.Event.ModemEvent.displayName = 'proto.hiber.event.Event.ModemEvent';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.event.Event.ModemEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.event.Event.ModemEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.event.Event.ModemEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.Event.ModemEvent.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.event.Event.ModemEvent}
 */
proto.hiber.event.Event.ModemEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.event.Event.ModemEvent;
  return proto.hiber.event.Event.ModemEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.event.Event.ModemEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.event.Event.ModemEvent}
 */
proto.hiber.event.Event.ModemEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.event.Event.ModemEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.event.Event.ModemEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.event.Event.ModemEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.Event.ModemEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.event.Event.ModemEvent.ModemLocationUpdatedEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.event.Event.ModemEvent.ModemLocationUpdatedEvent.repeatedFields_, null);
};
goog.inherits(proto.hiber.event.Event.ModemEvent.ModemLocationUpdatedEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.event.Event.ModemEvent.ModemLocationUpdatedEvent.displayName = 'proto.hiber.event.Event.ModemEvent.ModemLocationUpdatedEvent';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.event.Event.ModemEvent.ModemLocationUpdatedEvent.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.event.Event.ModemEvent.ModemLocationUpdatedEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.event.Event.ModemEvent.ModemLocationUpdatedEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.event.Event.ModemEvent.ModemLocationUpdatedEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.Event.ModemEvent.ModemLocationUpdatedEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: jspb.Message.getFieldWithDefault(msg, 1, ""),
    modemNumber: jspb.Message.getFieldWithDefault(msg, 2, ""),
    location: (f = msg.getLocation()) && base_pb.Location.toObject(includeInstance, f),
    time: (f = msg.getTime()) && base_pb.Timestamp.toObject(includeInstance, f),
    tagsList: jspb.Message.toObjectList(msg.getTagsList(),
    tag_pb.Tag.toObject, includeInstance),
    title: jspb.Message.getFieldWithDefault(msg, 6, ""),
    description: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.event.Event.ModemEvent.ModemLocationUpdatedEvent}
 */
proto.hiber.event.Event.ModemEvent.ModemLocationUpdatedEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.event.Event.ModemEvent.ModemLocationUpdatedEvent;
  return proto.hiber.event.Event.ModemEvent.ModemLocationUpdatedEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.event.Event.ModemEvent.ModemLocationUpdatedEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.event.Event.ModemEvent.ModemLocationUpdatedEvent}
 */
proto.hiber.event.Event.ModemEvent.ModemLocationUpdatedEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setModemNumber(value);
      break;
    case 3:
      var value = new base_pb.Location;
      reader.readMessage(value,base_pb.Location.deserializeBinaryFromReader);
      msg.setLocation(value);
      break;
    case 4:
      var value = new base_pb.Timestamp;
      reader.readMessage(value,base_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTime(value);
      break;
    case 5:
      var value = new tag_pb.Tag;
      reader.readMessage(value,tag_pb.Tag.deserializeBinaryFromReader);
      msg.addTags(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.event.Event.ModemEvent.ModemLocationUpdatedEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.event.Event.ModemEvent.ModemLocationUpdatedEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.event.Event.ModemEvent.ModemLocationUpdatedEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.Event.ModemEvent.ModemLocationUpdatedEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getModemNumber();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLocation();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      base_pb.Location.serializeBinaryToWriter
    );
  }
  f = message.getTime();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      base_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      tag_pb.Tag.serializeBinaryToWriter
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string organization = 1;
 * @return {string}
 */
proto.hiber.event.Event.ModemEvent.ModemLocationUpdatedEvent.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.event.Event.ModemEvent.ModemLocationUpdatedEvent.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string modem_number = 2;
 * @return {string}
 */
proto.hiber.event.Event.ModemEvent.ModemLocationUpdatedEvent.prototype.getModemNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hiber.event.Event.ModemEvent.ModemLocationUpdatedEvent.prototype.setModemNumber = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional hiber.Location location = 3;
 * @return {?proto.hiber.Location}
 */
proto.hiber.event.Event.ModemEvent.ModemLocationUpdatedEvent.prototype.getLocation = function() {
  return /** @type{?proto.hiber.Location} */ (
    jspb.Message.getWrapperField(this, base_pb.Location, 3));
};


/** @param {?proto.hiber.Location|undefined} value */
proto.hiber.event.Event.ModemEvent.ModemLocationUpdatedEvent.prototype.setLocation = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.event.Event.ModemEvent.ModemLocationUpdatedEvent.prototype.clearLocation = function() {
  this.setLocation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.ModemEvent.ModemLocationUpdatedEvent.prototype.hasLocation = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional hiber.Timestamp time = 4;
 * @return {?proto.hiber.Timestamp}
 */
proto.hiber.event.Event.ModemEvent.ModemLocationUpdatedEvent.prototype.getTime = function() {
  return /** @type{?proto.hiber.Timestamp} */ (
    jspb.Message.getWrapperField(this, base_pb.Timestamp, 4));
};


/** @param {?proto.hiber.Timestamp|undefined} value */
proto.hiber.event.Event.ModemEvent.ModemLocationUpdatedEvent.prototype.setTime = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.hiber.event.Event.ModemEvent.ModemLocationUpdatedEvent.prototype.clearTime = function() {
  this.setTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.ModemEvent.ModemLocationUpdatedEvent.prototype.hasTime = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated hiber.tag.Tag tags = 5;
 * @return {!Array.<!proto.hiber.tag.Tag>}
 */
proto.hiber.event.Event.ModemEvent.ModemLocationUpdatedEvent.prototype.getTagsList = function() {
  return /** @type{!Array.<!proto.hiber.tag.Tag>} */ (
    jspb.Message.getRepeatedWrapperField(this, tag_pb.Tag, 5));
};


/** @param {!Array.<!proto.hiber.tag.Tag>} value */
proto.hiber.event.Event.ModemEvent.ModemLocationUpdatedEvent.prototype.setTagsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.hiber.tag.Tag=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hiber.tag.Tag}
 */
proto.hiber.event.Event.ModemEvent.ModemLocationUpdatedEvent.prototype.addTags = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.hiber.tag.Tag, opt_index);
};


proto.hiber.event.Event.ModemEvent.ModemLocationUpdatedEvent.prototype.clearTagsList = function() {
  this.setTagsList([]);
};


/**
 * optional string title = 6;
 * @return {string}
 */
proto.hiber.event.Event.ModemEvent.ModemLocationUpdatedEvent.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.hiber.event.Event.ModemEvent.ModemLocationUpdatedEvent.prototype.setTitle = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional string description = 7;
 * @return {string}
 */
proto.hiber.event.Event.ModemEvent.ModemLocationUpdatedEvent.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.hiber.event.Event.ModemEvent.ModemLocationUpdatedEvent.prototype.setDescription = function(value) {
  jspb.Message.setField(this, 7, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.event.Event.ModemEvent.ModemStaleEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.event.Event.ModemEvent.ModemStaleEvent.repeatedFields_, null);
};
goog.inherits(proto.hiber.event.Event.ModemEvent.ModemStaleEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.event.Event.ModemEvent.ModemStaleEvent.displayName = 'proto.hiber.event.Event.ModemEvent.ModemStaleEvent';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.event.Event.ModemEvent.ModemStaleEvent.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.event.Event.ModemEvent.ModemStaleEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.event.Event.ModemEvent.ModemStaleEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.event.Event.ModemEvent.ModemStaleEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.Event.ModemEvent.ModemStaleEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: jspb.Message.getFieldWithDefault(msg, 1, ""),
    modemNumber: jspb.Message.getFieldWithDefault(msg, 2, ""),
    maximumInactivityPeriod: jspb.Message.getFieldWithDefault(msg, 3, 0),
    time: (f = msg.getTime()) && base_pb.Timestamp.toObject(includeInstance, f),
    lastMessage: (f = msg.getLastMessage()) && base_pb.Timestamp.toObject(includeInstance, f),
    tagsList: jspb.Message.toObjectList(msg.getTagsList(),
    tag_pb.Tag.toObject, includeInstance),
    title: jspb.Message.getFieldWithDefault(msg, 7, ""),
    description: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.event.Event.ModemEvent.ModemStaleEvent}
 */
proto.hiber.event.Event.ModemEvent.ModemStaleEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.event.Event.ModemEvent.ModemStaleEvent;
  return proto.hiber.event.Event.ModemEvent.ModemStaleEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.event.Event.ModemEvent.ModemStaleEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.event.Event.ModemEvent.ModemStaleEvent}
 */
proto.hiber.event.Event.ModemEvent.ModemStaleEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setModemNumber(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaximumInactivityPeriod(value);
      break;
    case 4:
      var value = new base_pb.Timestamp;
      reader.readMessage(value,base_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTime(value);
      break;
    case 5:
      var value = new base_pb.Timestamp;
      reader.readMessage(value,base_pb.Timestamp.deserializeBinaryFromReader);
      msg.setLastMessage(value);
      break;
    case 6:
      var value = new tag_pb.Tag;
      reader.readMessage(value,tag_pb.Tag.deserializeBinaryFromReader);
      msg.addTags(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.event.Event.ModemEvent.ModemStaleEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.event.Event.ModemEvent.ModemStaleEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.event.Event.ModemEvent.ModemStaleEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.Event.ModemEvent.ModemStaleEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getModemNumber();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMaximumInactivityPeriod();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getTime();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      base_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getLastMessage();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      base_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      tag_pb.Tag.serializeBinaryToWriter
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string organization = 1;
 * @return {string}
 */
proto.hiber.event.Event.ModemEvent.ModemStaleEvent.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.event.Event.ModemEvent.ModemStaleEvent.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string modem_number = 2;
 * @return {string}
 */
proto.hiber.event.Event.ModemEvent.ModemStaleEvent.prototype.getModemNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hiber.event.Event.ModemEvent.ModemStaleEvent.prototype.setModemNumber = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional int32 maximum_inactivity_period = 3;
 * @return {number}
 */
proto.hiber.event.Event.ModemEvent.ModemStaleEvent.prototype.getMaximumInactivityPeriod = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.hiber.event.Event.ModemEvent.ModemStaleEvent.prototype.setMaximumInactivityPeriod = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional hiber.Timestamp time = 4;
 * @return {?proto.hiber.Timestamp}
 */
proto.hiber.event.Event.ModemEvent.ModemStaleEvent.prototype.getTime = function() {
  return /** @type{?proto.hiber.Timestamp} */ (
    jspb.Message.getWrapperField(this, base_pb.Timestamp, 4));
};


/** @param {?proto.hiber.Timestamp|undefined} value */
proto.hiber.event.Event.ModemEvent.ModemStaleEvent.prototype.setTime = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.hiber.event.Event.ModemEvent.ModemStaleEvent.prototype.clearTime = function() {
  this.setTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.ModemEvent.ModemStaleEvent.prototype.hasTime = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional hiber.Timestamp last_message = 5;
 * @return {?proto.hiber.Timestamp}
 */
proto.hiber.event.Event.ModemEvent.ModemStaleEvent.prototype.getLastMessage = function() {
  return /** @type{?proto.hiber.Timestamp} */ (
    jspb.Message.getWrapperField(this, base_pb.Timestamp, 5));
};


/** @param {?proto.hiber.Timestamp|undefined} value */
proto.hiber.event.Event.ModemEvent.ModemStaleEvent.prototype.setLastMessage = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.hiber.event.Event.ModemEvent.ModemStaleEvent.prototype.clearLastMessage = function() {
  this.setLastMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.ModemEvent.ModemStaleEvent.prototype.hasLastMessage = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated hiber.tag.Tag tags = 6;
 * @return {!Array.<!proto.hiber.tag.Tag>}
 */
proto.hiber.event.Event.ModemEvent.ModemStaleEvent.prototype.getTagsList = function() {
  return /** @type{!Array.<!proto.hiber.tag.Tag>} */ (
    jspb.Message.getRepeatedWrapperField(this, tag_pb.Tag, 6));
};


/** @param {!Array.<!proto.hiber.tag.Tag>} value */
proto.hiber.event.Event.ModemEvent.ModemStaleEvent.prototype.setTagsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.hiber.tag.Tag=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hiber.tag.Tag}
 */
proto.hiber.event.Event.ModemEvent.ModemStaleEvent.prototype.addTags = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.hiber.tag.Tag, opt_index);
};


proto.hiber.event.Event.ModemEvent.ModemStaleEvent.prototype.clearTagsList = function() {
  this.setTagsList([]);
};


/**
 * optional string title = 7;
 * @return {string}
 */
proto.hiber.event.Event.ModemEvent.ModemStaleEvent.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.hiber.event.Event.ModemEvent.ModemStaleEvent.prototype.setTitle = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * optional string description = 8;
 * @return {string}
 */
proto.hiber.event.Event.ModemEvent.ModemStaleEvent.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.hiber.event.Event.ModemEvent.ModemStaleEvent.prototype.setDescription = function(value) {
  jspb.Message.setField(this, 8, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.event.Event.ModemEvent.MessageEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.event.Event.ModemEvent.MessageEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.event.Event.ModemEvent.MessageEvent.displayName = 'proto.hiber.event.Event.ModemEvent.MessageEvent';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.event.Event.ModemEvent.MessageEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.event.Event.ModemEvent.MessageEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.event.Event.ModemEvent.MessageEvent}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.event.Event.ModemEvent.MessageEvent;
  return proto.hiber.event.Event.ModemEvent.MessageEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.event.Event.ModemEvent.MessageEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.event.Event.ModemEvent.MessageEvent}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.event.Event.ModemEvent.MessageEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.event.Event.ModemEvent.MessageEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageReceivedEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageReceivedEvent.repeatedFields_, null);
};
goog.inherits(proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageReceivedEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageReceivedEvent.displayName = 'proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageReceivedEvent';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageReceivedEvent.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageReceivedEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageReceivedEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageReceivedEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageReceivedEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: jspb.Message.getFieldWithDefault(msg, 1, ""),
    modemNumber: jspb.Message.getFieldWithDefault(msg, 2, ""),
    message: (f = msg.getMessage()) && modem_pb.ModemMessage.toObject(includeInstance, f),
    tagsList: jspb.Message.toObjectList(msg.getTagsList(),
    tag_pb.Tag.toObject, includeInstance),
    title: jspb.Message.getFieldWithDefault(msg, 5, ""),
    description: jspb.Message.getFieldWithDefault(msg, 6, ""),
    time: (f = msg.getTime()) && base_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageReceivedEvent}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageReceivedEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageReceivedEvent;
  return proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageReceivedEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageReceivedEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageReceivedEvent}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageReceivedEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setModemNumber(value);
      break;
    case 3:
      var value = new modem_pb.ModemMessage;
      reader.readMessage(value,modem_pb.ModemMessage.deserializeBinaryFromReader);
      msg.setMessage(value);
      break;
    case 4:
      var value = new tag_pb.Tag;
      reader.readMessage(value,tag_pb.Tag.deserializeBinaryFromReader);
      msg.addTags(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 7:
      var value = new base_pb.Timestamp;
      reader.readMessage(value,base_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageReceivedEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageReceivedEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageReceivedEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageReceivedEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getModemNumber();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMessage();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      modem_pb.ModemMessage.serializeBinaryToWriter
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      tag_pb.Tag.serializeBinaryToWriter
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getTime();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      base_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string organization = 1;
 * @return {string}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageReceivedEvent.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageReceivedEvent.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string modem_number = 2;
 * @return {string}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageReceivedEvent.prototype.getModemNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageReceivedEvent.prototype.setModemNumber = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional hiber.modem.ModemMessage message = 3;
 * @return {?proto.hiber.modem.ModemMessage}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageReceivedEvent.prototype.getMessage = function() {
  return /** @type{?proto.hiber.modem.ModemMessage} */ (
    jspb.Message.getWrapperField(this, modem_pb.ModemMessage, 3));
};


/** @param {?proto.hiber.modem.ModemMessage|undefined} value */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageReceivedEvent.prototype.setMessage = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageReceivedEvent.prototype.clearMessage = function() {
  this.setMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageReceivedEvent.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated hiber.tag.Tag tags = 4;
 * @return {!Array.<!proto.hiber.tag.Tag>}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageReceivedEvent.prototype.getTagsList = function() {
  return /** @type{!Array.<!proto.hiber.tag.Tag>} */ (
    jspb.Message.getRepeatedWrapperField(this, tag_pb.Tag, 4));
};


/** @param {!Array.<!proto.hiber.tag.Tag>} value */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageReceivedEvent.prototype.setTagsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.hiber.tag.Tag=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hiber.tag.Tag}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageReceivedEvent.prototype.addTags = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.hiber.tag.Tag, opt_index);
};


proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageReceivedEvent.prototype.clearTagsList = function() {
  this.setTagsList([]);
};


/**
 * optional string title = 5;
 * @return {string}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageReceivedEvent.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageReceivedEvent.prototype.setTitle = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional string description = 6;
 * @return {string}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageReceivedEvent.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageReceivedEvent.prototype.setDescription = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional hiber.Timestamp time = 7;
 * @return {?proto.hiber.Timestamp}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageReceivedEvent.prototype.getTime = function() {
  return /** @type{?proto.hiber.Timestamp} */ (
    jspb.Message.getWrapperField(this, base_pb.Timestamp, 7));
};


/** @param {?proto.hiber.Timestamp|undefined} value */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageReceivedEvent.prototype.setTime = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageReceivedEvent.prototype.clearTime = function() {
  this.setTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageReceivedEvent.prototype.hasTime = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDroppedEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDroppedEvent.repeatedFields_, null);
};
goog.inherits(proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDroppedEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDroppedEvent.displayName = 'proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDroppedEvent';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDroppedEvent.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDroppedEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDroppedEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDroppedEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDroppedEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: jspb.Message.getFieldWithDefault(msg, 1, ""),
    modemNumber: jspb.Message.getFieldWithDefault(msg, 2, ""),
    droppedMessages: jspb.Message.getFieldWithDefault(msg, 3, 0),
    message: (f = msg.getMessage()) && modem_pb.ModemMessage.toObject(includeInstance, f),
    tagsList: jspb.Message.toObjectList(msg.getTagsList(),
    tag_pb.Tag.toObject, includeInstance),
    modemHealth: jspb.Message.getFieldWithDefault(msg, 6, 0),
    title: jspb.Message.getFieldWithDefault(msg, 7, ""),
    description: jspb.Message.getFieldWithDefault(msg, 8, ""),
    time: (f = msg.getTime()) && base_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDroppedEvent}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDroppedEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDroppedEvent;
  return proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDroppedEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDroppedEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDroppedEvent}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDroppedEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setModemNumber(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDroppedMessages(value);
      break;
    case 4:
      var value = new modem_pb.ModemMessage;
      reader.readMessage(value,modem_pb.ModemMessage.deserializeBinaryFromReader);
      msg.setMessage(value);
      break;
    case 5:
      var value = new tag_pb.Tag;
      reader.readMessage(value,tag_pb.Tag.deserializeBinaryFromReader);
      msg.addTags(value);
      break;
    case 6:
      var value = /** @type {!proto.hiber.Health} */ (reader.readEnum());
      msg.setModemHealth(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 9:
      var value = new base_pb.Timestamp;
      reader.readMessage(value,base_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDroppedEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDroppedEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDroppedEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDroppedEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getModemNumber();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDroppedMessages();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getMessage();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      modem_pb.ModemMessage.serializeBinaryToWriter
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      tag_pb.Tag.serializeBinaryToWriter
    );
  }
  f = message.getModemHealth();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getTime();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      base_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string organization = 1;
 * @return {string}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDroppedEvent.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDroppedEvent.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string modem_number = 2;
 * @return {string}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDroppedEvent.prototype.getModemNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDroppedEvent.prototype.setModemNumber = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional int32 dropped_messages = 3;
 * @return {number}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDroppedEvent.prototype.getDroppedMessages = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDroppedEvent.prototype.setDroppedMessages = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional hiber.modem.ModemMessage message = 4;
 * @return {?proto.hiber.modem.ModemMessage}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDroppedEvent.prototype.getMessage = function() {
  return /** @type{?proto.hiber.modem.ModemMessage} */ (
    jspb.Message.getWrapperField(this, modem_pb.ModemMessage, 4));
};


/** @param {?proto.hiber.modem.ModemMessage|undefined} value */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDroppedEvent.prototype.setMessage = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDroppedEvent.prototype.clearMessage = function() {
  this.setMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDroppedEvent.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated hiber.tag.Tag tags = 5;
 * @return {!Array.<!proto.hiber.tag.Tag>}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDroppedEvent.prototype.getTagsList = function() {
  return /** @type{!Array.<!proto.hiber.tag.Tag>} */ (
    jspb.Message.getRepeatedWrapperField(this, tag_pb.Tag, 5));
};


/** @param {!Array.<!proto.hiber.tag.Tag>} value */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDroppedEvent.prototype.setTagsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.hiber.tag.Tag=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hiber.tag.Tag}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDroppedEvent.prototype.addTags = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.hiber.tag.Tag, opt_index);
};


proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDroppedEvent.prototype.clearTagsList = function() {
  this.setTagsList([]);
};


/**
 * optional hiber.Health modem_health = 6;
 * @return {!proto.hiber.Health}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDroppedEvent.prototype.getModemHealth = function() {
  return /** @type {!proto.hiber.Health} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {!proto.hiber.Health} value */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDroppedEvent.prototype.setModemHealth = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional string title = 7;
 * @return {string}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDroppedEvent.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDroppedEvent.prototype.setTitle = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * optional string description = 8;
 * @return {string}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDroppedEvent.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDroppedEvent.prototype.setDescription = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * optional hiber.Timestamp time = 9;
 * @return {?proto.hiber.Timestamp}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDroppedEvent.prototype.getTime = function() {
  return /** @type{?proto.hiber.Timestamp} */ (
    jspb.Message.getWrapperField(this, base_pb.Timestamp, 9));
};


/** @param {?proto.hiber.Timestamp|undefined} value */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDroppedEvent.prototype.setTime = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDroppedEvent.prototype.clearTime = function() {
  this.setTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDroppedEvent.prototype.hasTime = function() {
  return jspb.Message.getField(this, 9) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDelayedEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDelayedEvent.repeatedFields_, null);
};
goog.inherits(proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDelayedEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDelayedEvent.displayName = 'proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDelayedEvent';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDelayedEvent.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDelayedEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDelayedEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDelayedEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDelayedEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: jspb.Message.getFieldWithDefault(msg, 1, ""),
    modemNumber: jspb.Message.getFieldWithDefault(msg, 2, ""),
    message: (f = msg.getMessage()) && modem_pb.ModemMessage.toObject(includeInstance, f),
    delaySeconds: jspb.Message.getFieldWithDefault(msg, 4, 0),
    tagsList: jspb.Message.toObjectList(msg.getTagsList(),
    tag_pb.Tag.toObject, includeInstance),
    modemHealth: jspb.Message.getFieldWithDefault(msg, 6, 0),
    title: jspb.Message.getFieldWithDefault(msg, 7, ""),
    description: jspb.Message.getFieldWithDefault(msg, 8, ""),
    time: (f = msg.getTime()) && base_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDelayedEvent}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDelayedEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDelayedEvent;
  return proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDelayedEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDelayedEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDelayedEvent}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDelayedEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setModemNumber(value);
      break;
    case 3:
      var value = new modem_pb.ModemMessage;
      reader.readMessage(value,modem_pb.ModemMessage.deserializeBinaryFromReader);
      msg.setMessage(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDelaySeconds(value);
      break;
    case 5:
      var value = new tag_pb.Tag;
      reader.readMessage(value,tag_pb.Tag.deserializeBinaryFromReader);
      msg.addTags(value);
      break;
    case 6:
      var value = /** @type {!proto.hiber.Health} */ (reader.readEnum());
      msg.setModemHealth(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 9:
      var value = new base_pb.Timestamp;
      reader.readMessage(value,base_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDelayedEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDelayedEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDelayedEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDelayedEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getModemNumber();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMessage();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      modem_pb.ModemMessage.serializeBinaryToWriter
    );
  }
  f = message.getDelaySeconds();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      tag_pb.Tag.serializeBinaryToWriter
    );
  }
  f = message.getModemHealth();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getTime();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      base_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string organization = 1;
 * @return {string}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDelayedEvent.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDelayedEvent.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string modem_number = 2;
 * @return {string}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDelayedEvent.prototype.getModemNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDelayedEvent.prototype.setModemNumber = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional hiber.modem.ModemMessage message = 3;
 * @return {?proto.hiber.modem.ModemMessage}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDelayedEvent.prototype.getMessage = function() {
  return /** @type{?proto.hiber.modem.ModemMessage} */ (
    jspb.Message.getWrapperField(this, modem_pb.ModemMessage, 3));
};


/** @param {?proto.hiber.modem.ModemMessage|undefined} value */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDelayedEvent.prototype.setMessage = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDelayedEvent.prototype.clearMessage = function() {
  this.setMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDelayedEvent.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int64 delay_seconds = 4;
 * @return {number}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDelayedEvent.prototype.getDelaySeconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDelayedEvent.prototype.setDelaySeconds = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * repeated hiber.tag.Tag tags = 5;
 * @return {!Array.<!proto.hiber.tag.Tag>}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDelayedEvent.prototype.getTagsList = function() {
  return /** @type{!Array.<!proto.hiber.tag.Tag>} */ (
    jspb.Message.getRepeatedWrapperField(this, tag_pb.Tag, 5));
};


/** @param {!Array.<!proto.hiber.tag.Tag>} value */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDelayedEvent.prototype.setTagsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.hiber.tag.Tag=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hiber.tag.Tag}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDelayedEvent.prototype.addTags = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.hiber.tag.Tag, opt_index);
};


proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDelayedEvent.prototype.clearTagsList = function() {
  this.setTagsList([]);
};


/**
 * optional hiber.Health modem_health = 6;
 * @return {!proto.hiber.Health}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDelayedEvent.prototype.getModemHealth = function() {
  return /** @type {!proto.hiber.Health} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {!proto.hiber.Health} value */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDelayedEvent.prototype.setModemHealth = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional string title = 7;
 * @return {string}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDelayedEvent.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDelayedEvent.prototype.setTitle = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * optional string description = 8;
 * @return {string}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDelayedEvent.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDelayedEvent.prototype.setDescription = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * optional hiber.Timestamp time = 9;
 * @return {?proto.hiber.Timestamp}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDelayedEvent.prototype.getTime = function() {
  return /** @type{?proto.hiber.Timestamp} */ (
    jspb.Message.getWrapperField(this, base_pb.Timestamp, 9));
};


/** @param {?proto.hiber.Timestamp|undefined} value */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDelayedEvent.prototype.setTime = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDelayedEvent.prototype.clearTime = function() {
  this.setTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDelayedEvent.prototype.hasTime = function() {
  return jspb.Message.getField(this, 9) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageCannotBeParsedEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageCannotBeParsedEvent.repeatedFields_, null);
};
goog.inherits(proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageCannotBeParsedEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageCannotBeParsedEvent.displayName = 'proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageCannotBeParsedEvent';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageCannotBeParsedEvent.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageCannotBeParsedEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageCannotBeParsedEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageCannotBeParsedEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageCannotBeParsedEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: jspb.Message.getFieldWithDefault(msg, 1, ""),
    modemNumber: jspb.Message.getFieldWithDefault(msg, 2, ""),
    modemMessageId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    time: (f = msg.getTime()) && base_pb.Timestamp.toObject(includeInstance, f),
    reason: jspb.Message.getFieldWithDefault(msg, 5, ""),
    tagsList: jspb.Message.toObjectList(msg.getTagsList(),
    tag_pb.Tag.toObject, includeInstance),
    title: jspb.Message.getFieldWithDefault(msg, 7, ""),
    description: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageCannotBeParsedEvent}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageCannotBeParsedEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageCannotBeParsedEvent;
  return proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageCannotBeParsedEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageCannotBeParsedEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageCannotBeParsedEvent}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageCannotBeParsedEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setModemNumber(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setModemMessageId(value);
      break;
    case 4:
      var value = new base_pb.Timestamp;
      reader.readMessage(value,base_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTime(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setReason(value);
      break;
    case 6:
      var value = new tag_pb.Tag;
      reader.readMessage(value,tag_pb.Tag.deserializeBinaryFromReader);
      msg.addTags(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageCannotBeParsedEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageCannotBeParsedEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageCannotBeParsedEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageCannotBeParsedEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getModemNumber();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getModemMessageId();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getTime();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      base_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getReason();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      tag_pb.Tag.serializeBinaryToWriter
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string organization = 1;
 * @return {string}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageCannotBeParsedEvent.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageCannotBeParsedEvent.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string modem_number = 2;
 * @return {string}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageCannotBeParsedEvent.prototype.getModemNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageCannotBeParsedEvent.prototype.setModemNumber = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional int64 modem_message_id = 3;
 * @return {number}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageCannotBeParsedEvent.prototype.getModemMessageId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageCannotBeParsedEvent.prototype.setModemMessageId = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional hiber.Timestamp time = 4;
 * @return {?proto.hiber.Timestamp}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageCannotBeParsedEvent.prototype.getTime = function() {
  return /** @type{?proto.hiber.Timestamp} */ (
    jspb.Message.getWrapperField(this, base_pb.Timestamp, 4));
};


/** @param {?proto.hiber.Timestamp|undefined} value */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageCannotBeParsedEvent.prototype.setTime = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageCannotBeParsedEvent.prototype.clearTime = function() {
  this.setTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageCannotBeParsedEvent.prototype.hasTime = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string reason = 5;
 * @return {string}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageCannotBeParsedEvent.prototype.getReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageCannotBeParsedEvent.prototype.setReason = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * repeated hiber.tag.Tag tags = 6;
 * @return {!Array.<!proto.hiber.tag.Tag>}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageCannotBeParsedEvent.prototype.getTagsList = function() {
  return /** @type{!Array.<!proto.hiber.tag.Tag>} */ (
    jspb.Message.getRepeatedWrapperField(this, tag_pb.Tag, 6));
};


/** @param {!Array.<!proto.hiber.tag.Tag>} value */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageCannotBeParsedEvent.prototype.setTagsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.hiber.tag.Tag=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hiber.tag.Tag}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageCannotBeParsedEvent.prototype.addTags = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.hiber.tag.Tag, opt_index);
};


proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageCannotBeParsedEvent.prototype.clearTagsList = function() {
  this.setTagsList([]);
};


/**
 * optional string title = 7;
 * @return {string}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageCannotBeParsedEvent.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageCannotBeParsedEvent.prototype.setTitle = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * optional string description = 8;
 * @return {string}
 */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageCannotBeParsedEvent.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageCannotBeParsedEvent.prototype.setDescription = function(value) {
  jspb.Message.setField(this, 8, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.event.Event.ModemEvent.ClaimEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.event.Event.ModemEvent.ClaimEvent.displayName = 'proto.hiber.event.Event.ModemEvent.ClaimEvent';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.event.Event.ModemEvent.ClaimEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.event.Event.ModemEvent.ClaimEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.event.Event.ModemEvent.ClaimEvent}
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.event.Event.ModemEvent.ClaimEvent;
  return proto.hiber.event.Event.ModemEvent.ClaimEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.event.Event.ModemEvent.ClaimEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.event.Event.ModemEvent.ClaimEvent}
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.event.Event.ModemEvent.ClaimEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.event.Event.ModemEvent.ClaimEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimedEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimedEvent.repeatedFields_, null);
};
goog.inherits(proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimedEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimedEvent.displayName = 'proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimedEvent';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimedEvent.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimedEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimedEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimedEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimedEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: jspb.Message.getFieldWithDefault(msg, 1, ""),
    modemNumber: jspb.Message.getFieldWithDefault(msg, 2, ""),
    claim: (f = msg.getClaim()) && modem_claim_pb.ModemClaim.toObject(includeInstance, f),
    time: (f = msg.getTime()) && base_pb.Timestamp.toObject(includeInstance, f),
    title: jspb.Message.getFieldWithDefault(msg, 5, ""),
    description: jspb.Message.getFieldWithDefault(msg, 6, ""),
    tagsList: jspb.Message.toObjectList(msg.getTagsList(),
    tag_pb.Tag.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimedEvent}
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimedEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimedEvent;
  return proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimedEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimedEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimedEvent}
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimedEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setModemNumber(value);
      break;
    case 3:
      var value = new modem_claim_pb.ModemClaim;
      reader.readMessage(value,modem_claim_pb.ModemClaim.deserializeBinaryFromReader);
      msg.setClaim(value);
      break;
    case 4:
      var value = new base_pb.Timestamp;
      reader.readMessage(value,base_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTime(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 7:
      var value = new tag_pb.Tag;
      reader.readMessage(value,tag_pb.Tag.deserializeBinaryFromReader);
      msg.addTags(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimedEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimedEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimedEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimedEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getModemNumber();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getClaim();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      modem_claim_pb.ModemClaim.serializeBinaryToWriter
    );
  }
  f = message.getTime();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      base_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      tag_pb.Tag.serializeBinaryToWriter
    );
  }
};


/**
 * optional string organization = 1;
 * @return {string}
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimedEvent.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimedEvent.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string modem_number = 2;
 * @return {string}
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimedEvent.prototype.getModemNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimedEvent.prototype.setModemNumber = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional hiber.modem.ModemClaim claim = 3;
 * @return {?proto.hiber.modem.ModemClaim}
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimedEvent.prototype.getClaim = function() {
  return /** @type{?proto.hiber.modem.ModemClaim} */ (
    jspb.Message.getWrapperField(this, modem_claim_pb.ModemClaim, 3));
};


/** @param {?proto.hiber.modem.ModemClaim|undefined} value */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimedEvent.prototype.setClaim = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimedEvent.prototype.clearClaim = function() {
  this.setClaim(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimedEvent.prototype.hasClaim = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional hiber.Timestamp time = 4;
 * @return {?proto.hiber.Timestamp}
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimedEvent.prototype.getTime = function() {
  return /** @type{?proto.hiber.Timestamp} */ (
    jspb.Message.getWrapperField(this, base_pb.Timestamp, 4));
};


/** @param {?proto.hiber.Timestamp|undefined} value */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimedEvent.prototype.setTime = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimedEvent.prototype.clearTime = function() {
  this.setTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimedEvent.prototype.hasTime = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string title = 5;
 * @return {string}
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimedEvent.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimedEvent.prototype.setTitle = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional string description = 6;
 * @return {string}
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimedEvent.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimedEvent.prototype.setDescription = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * repeated hiber.tag.Tag tags = 7;
 * @return {!Array.<!proto.hiber.tag.Tag>}
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimedEvent.prototype.getTagsList = function() {
  return /** @type{!Array.<!proto.hiber.tag.Tag>} */ (
    jspb.Message.getRepeatedWrapperField(this, tag_pb.Tag, 7));
};


/** @param {!Array.<!proto.hiber.tag.Tag>} value */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimedEvent.prototype.setTagsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.hiber.tag.Tag=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hiber.tag.Tag}
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimedEvent.prototype.addTags = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.hiber.tag.Tag, opt_index);
};


proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimedEvent.prototype.clearTagsList = function() {
  this.setTagsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimAcceptedEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimAcceptedEvent.repeatedFields_, null);
};
goog.inherits(proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimAcceptedEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimAcceptedEvent.displayName = 'proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimAcceptedEvent';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimAcceptedEvent.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimAcceptedEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimAcceptedEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimAcceptedEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimAcceptedEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: jspb.Message.getFieldWithDefault(msg, 1, ""),
    modemNumber: jspb.Message.getFieldWithDefault(msg, 2, ""),
    claim: (f = msg.getClaim()) && modem_claim_pb.ModemClaim.toObject(includeInstance, f),
    time: (f = msg.getTime()) && base_pb.Timestamp.toObject(includeInstance, f),
    title: jspb.Message.getFieldWithDefault(msg, 5, ""),
    description: jspb.Message.getFieldWithDefault(msg, 6, ""),
    tagsList: jspb.Message.toObjectList(msg.getTagsList(),
    tag_pb.Tag.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimAcceptedEvent}
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimAcceptedEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimAcceptedEvent;
  return proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimAcceptedEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimAcceptedEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimAcceptedEvent}
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimAcceptedEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setModemNumber(value);
      break;
    case 3:
      var value = new modem_claim_pb.ModemClaim;
      reader.readMessage(value,modem_claim_pb.ModemClaim.deserializeBinaryFromReader);
      msg.setClaim(value);
      break;
    case 4:
      var value = new base_pb.Timestamp;
      reader.readMessage(value,base_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTime(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 7:
      var value = new tag_pb.Tag;
      reader.readMessage(value,tag_pb.Tag.deserializeBinaryFromReader);
      msg.addTags(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimAcceptedEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimAcceptedEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimAcceptedEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimAcceptedEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getModemNumber();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getClaim();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      modem_claim_pb.ModemClaim.serializeBinaryToWriter
    );
  }
  f = message.getTime();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      base_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      tag_pb.Tag.serializeBinaryToWriter
    );
  }
};


/**
 * optional string organization = 1;
 * @return {string}
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimAcceptedEvent.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimAcceptedEvent.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string modem_number = 2;
 * @return {string}
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimAcceptedEvent.prototype.getModemNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimAcceptedEvent.prototype.setModemNumber = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional hiber.modem.ModemClaim claim = 3;
 * @return {?proto.hiber.modem.ModemClaim}
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimAcceptedEvent.prototype.getClaim = function() {
  return /** @type{?proto.hiber.modem.ModemClaim} */ (
    jspb.Message.getWrapperField(this, modem_claim_pb.ModemClaim, 3));
};


/** @param {?proto.hiber.modem.ModemClaim|undefined} value */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimAcceptedEvent.prototype.setClaim = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimAcceptedEvent.prototype.clearClaim = function() {
  this.setClaim(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimAcceptedEvent.prototype.hasClaim = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional hiber.Timestamp time = 4;
 * @return {?proto.hiber.Timestamp}
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimAcceptedEvent.prototype.getTime = function() {
  return /** @type{?proto.hiber.Timestamp} */ (
    jspb.Message.getWrapperField(this, base_pb.Timestamp, 4));
};


/** @param {?proto.hiber.Timestamp|undefined} value */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimAcceptedEvent.prototype.setTime = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimAcceptedEvent.prototype.clearTime = function() {
  this.setTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimAcceptedEvent.prototype.hasTime = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string title = 5;
 * @return {string}
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimAcceptedEvent.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimAcceptedEvent.prototype.setTitle = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional string description = 6;
 * @return {string}
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimAcceptedEvent.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimAcceptedEvent.prototype.setDescription = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * repeated hiber.tag.Tag tags = 7;
 * @return {!Array.<!proto.hiber.tag.Tag>}
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimAcceptedEvent.prototype.getTagsList = function() {
  return /** @type{!Array.<!proto.hiber.tag.Tag>} */ (
    jspb.Message.getRepeatedWrapperField(this, tag_pb.Tag, 7));
};


/** @param {!Array.<!proto.hiber.tag.Tag>} value */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimAcceptedEvent.prototype.setTagsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.hiber.tag.Tag=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hiber.tag.Tag}
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimAcceptedEvent.prototype.addTags = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.hiber.tag.Tag, opt_index);
};


proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimAcceptedEvent.prototype.clearTagsList = function() {
  this.setTagsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimRejectedEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimRejectedEvent.repeatedFields_, null);
};
goog.inherits(proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimRejectedEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimRejectedEvent.displayName = 'proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimRejectedEvent';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimRejectedEvent.repeatedFields_ = [9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimRejectedEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimRejectedEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimRejectedEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimRejectedEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: jspb.Message.getFieldWithDefault(msg, 1, ""),
    modemNumber: jspb.Message.getFieldWithDefault(msg, 2, ""),
    claim: (f = msg.getClaim()) && modem_claim_pb.ModemClaim.toObject(includeInstance, f),
    time: (f = msg.getTime()) && base_pb.Timestamp.toObject(includeInstance, f),
    reason: jspb.Message.getFieldWithDefault(msg, 5, 0),
    comment: jspb.Message.getFieldWithDefault(msg, 6, ""),
    title: jspb.Message.getFieldWithDefault(msg, 7, ""),
    description: jspb.Message.getFieldWithDefault(msg, 8, ""),
    tagsList: jspb.Message.toObjectList(msg.getTagsList(),
    tag_pb.Tag.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimRejectedEvent}
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimRejectedEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimRejectedEvent;
  return proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimRejectedEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimRejectedEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimRejectedEvent}
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimRejectedEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setModemNumber(value);
      break;
    case 3:
      var value = new modem_claim_pb.ModemClaim;
      reader.readMessage(value,modem_claim_pb.ModemClaim.deserializeBinaryFromReader);
      msg.setClaim(value);
      break;
    case 4:
      var value = new base_pb.Timestamp;
      reader.readMessage(value,base_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTime(value);
      break;
    case 5:
      var value = /** @type {!proto.hiber.modem.ModemClaim.RejectReason} */ (reader.readEnum());
      msg.setReason(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setComment(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 9:
      var value = new tag_pb.Tag;
      reader.readMessage(value,tag_pb.Tag.deserializeBinaryFromReader);
      msg.addTags(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimRejectedEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimRejectedEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimRejectedEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimRejectedEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getModemNumber();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getClaim();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      modem_claim_pb.ModemClaim.serializeBinaryToWriter
    );
  }
  f = message.getTime();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      base_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getReason();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getComment();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      tag_pb.Tag.serializeBinaryToWriter
    );
  }
};


/**
 * optional string organization = 1;
 * @return {string}
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimRejectedEvent.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimRejectedEvent.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string modem_number = 2;
 * @return {string}
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimRejectedEvent.prototype.getModemNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimRejectedEvent.prototype.setModemNumber = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional hiber.modem.ModemClaim claim = 3;
 * @return {?proto.hiber.modem.ModemClaim}
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimRejectedEvent.prototype.getClaim = function() {
  return /** @type{?proto.hiber.modem.ModemClaim} */ (
    jspb.Message.getWrapperField(this, modem_claim_pb.ModemClaim, 3));
};


/** @param {?proto.hiber.modem.ModemClaim|undefined} value */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimRejectedEvent.prototype.setClaim = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimRejectedEvent.prototype.clearClaim = function() {
  this.setClaim(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimRejectedEvent.prototype.hasClaim = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional hiber.Timestamp time = 4;
 * @return {?proto.hiber.Timestamp}
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimRejectedEvent.prototype.getTime = function() {
  return /** @type{?proto.hiber.Timestamp} */ (
    jspb.Message.getWrapperField(this, base_pb.Timestamp, 4));
};


/** @param {?proto.hiber.Timestamp|undefined} value */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimRejectedEvent.prototype.setTime = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimRejectedEvent.prototype.clearTime = function() {
  this.setTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimRejectedEvent.prototype.hasTime = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional hiber.modem.ModemClaim.RejectReason reason = 5;
 * @return {!proto.hiber.modem.ModemClaim.RejectReason}
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimRejectedEvent.prototype.getReason = function() {
  return /** @type {!proto.hiber.modem.ModemClaim.RejectReason} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {!proto.hiber.modem.ModemClaim.RejectReason} value */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimRejectedEvent.prototype.setReason = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional string comment = 6;
 * @return {string}
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimRejectedEvent.prototype.getComment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimRejectedEvent.prototype.setComment = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional string title = 7;
 * @return {string}
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimRejectedEvent.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimRejectedEvent.prototype.setTitle = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * optional string description = 8;
 * @return {string}
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimRejectedEvent.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimRejectedEvent.prototype.setDescription = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * repeated hiber.tag.Tag tags = 9;
 * @return {!Array.<!proto.hiber.tag.Tag>}
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimRejectedEvent.prototype.getTagsList = function() {
  return /** @type{!Array.<!proto.hiber.tag.Tag>} */ (
    jspb.Message.getRepeatedWrapperField(this, tag_pb.Tag, 9));
};


/** @param {!Array.<!proto.hiber.tag.Tag>} value */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimRejectedEvent.prototype.setTagsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.hiber.tag.Tag=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hiber.tag.Tag}
 */
proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimRejectedEvent.prototype.addTags = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.hiber.tag.Tag, opt_index);
};


proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimRejectedEvent.prototype.clearTagsList = function() {
  this.setTagsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.event.Event.ModemTransferEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.event.Event.ModemTransferEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.event.Event.ModemTransferEvent.displayName = 'proto.hiber.event.Event.ModemTransferEvent';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.event.Event.ModemTransferEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.event.Event.ModemTransferEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.event.Event.ModemTransferEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.Event.ModemTransferEvent.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.event.Event.ModemTransferEvent}
 */
proto.hiber.event.Event.ModemTransferEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.event.Event.ModemTransferEvent;
  return proto.hiber.event.Event.ModemTransferEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.event.Event.ModemTransferEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.event.Event.ModemTransferEvent}
 */
proto.hiber.event.Event.ModemTransferEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.event.Event.ModemTransferEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.event.Event.ModemTransferEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.event.Event.ModemTransferEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.Event.ModemTransferEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferStartedEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.event.Event.ModemTransferEvent.ModemTransferStartedEvent.repeatedFields_, null);
};
goog.inherits(proto.hiber.event.Event.ModemTransferEvent.ModemTransferStartedEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.event.Event.ModemTransferEvent.ModemTransferStartedEvent.displayName = 'proto.hiber.event.Event.ModemTransferEvent.ModemTransferStartedEvent';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferStartedEvent.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferStartedEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.event.Event.ModemTransferEvent.ModemTransferStartedEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.event.Event.ModemTransferEvent.ModemTransferStartedEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferStartedEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    transfer: (f = msg.getTransfer()) && modem_transfer_pb.ModemTransfer.toObject(includeInstance, f),
    organization: jspb.Message.getFieldWithDefault(msg, 2, ""),
    time: (f = msg.getTime()) && base_pb.Timestamp.toObject(includeInstance, f),
    tagsList: jspb.Message.toObjectList(msg.getTagsList(),
    tag_pb.Tag.toObject, includeInstance),
    title: jspb.Message.getFieldWithDefault(msg, 5, ""),
    description: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.event.Event.ModemTransferEvent.ModemTransferStartedEvent}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferStartedEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.event.Event.ModemTransferEvent.ModemTransferStartedEvent;
  return proto.hiber.event.Event.ModemTransferEvent.ModemTransferStartedEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.event.Event.ModemTransferEvent.ModemTransferStartedEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.event.Event.ModemTransferEvent.ModemTransferStartedEvent}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferStartedEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new modem_transfer_pb.ModemTransfer;
      reader.readMessage(value,modem_transfer_pb.ModemTransfer.deserializeBinaryFromReader);
      msg.setTransfer(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 3:
      var value = new base_pb.Timestamp;
      reader.readMessage(value,base_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTime(value);
      break;
    case 4:
      var value = new tag_pb.Tag;
      reader.readMessage(value,tag_pb.Tag.deserializeBinaryFromReader);
      msg.addTags(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferStartedEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.event.Event.ModemTransferEvent.ModemTransferStartedEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.event.Event.ModemTransferEvent.ModemTransferStartedEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferStartedEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransfer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      modem_transfer_pb.ModemTransfer.serializeBinaryToWriter
    );
  }
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTime();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      base_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      tag_pb.Tag.serializeBinaryToWriter
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional hiber.modem.ModemTransfer transfer = 1;
 * @return {?proto.hiber.modem.ModemTransfer}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferStartedEvent.prototype.getTransfer = function() {
  return /** @type{?proto.hiber.modem.ModemTransfer} */ (
    jspb.Message.getWrapperField(this, modem_transfer_pb.ModemTransfer, 1));
};


/** @param {?proto.hiber.modem.ModemTransfer|undefined} value */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferStartedEvent.prototype.setTransfer = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.hiber.event.Event.ModemTransferEvent.ModemTransferStartedEvent.prototype.clearTransfer = function() {
  this.setTransfer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferStartedEvent.prototype.hasTransfer = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string organization = 2;
 * @return {string}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferStartedEvent.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferStartedEvent.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional hiber.Timestamp time = 3;
 * @return {?proto.hiber.Timestamp}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferStartedEvent.prototype.getTime = function() {
  return /** @type{?proto.hiber.Timestamp} */ (
    jspb.Message.getWrapperField(this, base_pb.Timestamp, 3));
};


/** @param {?proto.hiber.Timestamp|undefined} value */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferStartedEvent.prototype.setTime = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.event.Event.ModemTransferEvent.ModemTransferStartedEvent.prototype.clearTime = function() {
  this.setTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferStartedEvent.prototype.hasTime = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated hiber.tag.Tag tags = 4;
 * @return {!Array.<!proto.hiber.tag.Tag>}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferStartedEvent.prototype.getTagsList = function() {
  return /** @type{!Array.<!proto.hiber.tag.Tag>} */ (
    jspb.Message.getRepeatedWrapperField(this, tag_pb.Tag, 4));
};


/** @param {!Array.<!proto.hiber.tag.Tag>} value */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferStartedEvent.prototype.setTagsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.hiber.tag.Tag=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hiber.tag.Tag}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferStartedEvent.prototype.addTags = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.hiber.tag.Tag, opt_index);
};


proto.hiber.event.Event.ModemTransferEvent.ModemTransferStartedEvent.prototype.clearTagsList = function() {
  this.setTagsList([]);
};


/**
 * optional string title = 5;
 * @return {string}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferStartedEvent.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferStartedEvent.prototype.setTitle = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional string description = 6;
 * @return {string}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferStartedEvent.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferStartedEvent.prototype.setDescription = function(value) {
  jspb.Message.setField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferCancelledEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.event.Event.ModemTransferEvent.ModemTransferCancelledEvent.repeatedFields_, null);
};
goog.inherits(proto.hiber.event.Event.ModemTransferEvent.ModemTransferCancelledEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.event.Event.ModemTransferEvent.ModemTransferCancelledEvent.displayName = 'proto.hiber.event.Event.ModemTransferEvent.ModemTransferCancelledEvent';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferCancelledEvent.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferCancelledEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.event.Event.ModemTransferEvent.ModemTransferCancelledEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.event.Event.ModemTransferEvent.ModemTransferCancelledEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferCancelledEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    transfer: (f = msg.getTransfer()) && modem_transfer_pb.ModemTransfer.toObject(includeInstance, f),
    organization: jspb.Message.getFieldWithDefault(msg, 2, ""),
    time: (f = msg.getTime()) && base_pb.Timestamp.toObject(includeInstance, f),
    tagsList: jspb.Message.toObjectList(msg.getTagsList(),
    tag_pb.Tag.toObject, includeInstance),
    title: jspb.Message.getFieldWithDefault(msg, 5, ""),
    description: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.event.Event.ModemTransferEvent.ModemTransferCancelledEvent}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferCancelledEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.event.Event.ModemTransferEvent.ModemTransferCancelledEvent;
  return proto.hiber.event.Event.ModemTransferEvent.ModemTransferCancelledEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.event.Event.ModemTransferEvent.ModemTransferCancelledEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.event.Event.ModemTransferEvent.ModemTransferCancelledEvent}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferCancelledEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new modem_transfer_pb.ModemTransfer;
      reader.readMessage(value,modem_transfer_pb.ModemTransfer.deserializeBinaryFromReader);
      msg.setTransfer(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 3:
      var value = new base_pb.Timestamp;
      reader.readMessage(value,base_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTime(value);
      break;
    case 4:
      var value = new tag_pb.Tag;
      reader.readMessage(value,tag_pb.Tag.deserializeBinaryFromReader);
      msg.addTags(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferCancelledEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.event.Event.ModemTransferEvent.ModemTransferCancelledEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.event.Event.ModemTransferEvent.ModemTransferCancelledEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferCancelledEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransfer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      modem_transfer_pb.ModemTransfer.serializeBinaryToWriter
    );
  }
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTime();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      base_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      tag_pb.Tag.serializeBinaryToWriter
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional hiber.modem.ModemTransfer transfer = 1;
 * @return {?proto.hiber.modem.ModemTransfer}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferCancelledEvent.prototype.getTransfer = function() {
  return /** @type{?proto.hiber.modem.ModemTransfer} */ (
    jspb.Message.getWrapperField(this, modem_transfer_pb.ModemTransfer, 1));
};


/** @param {?proto.hiber.modem.ModemTransfer|undefined} value */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferCancelledEvent.prototype.setTransfer = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.hiber.event.Event.ModemTransferEvent.ModemTransferCancelledEvent.prototype.clearTransfer = function() {
  this.setTransfer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferCancelledEvent.prototype.hasTransfer = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string organization = 2;
 * @return {string}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferCancelledEvent.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferCancelledEvent.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional hiber.Timestamp time = 3;
 * @return {?proto.hiber.Timestamp}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferCancelledEvent.prototype.getTime = function() {
  return /** @type{?proto.hiber.Timestamp} */ (
    jspb.Message.getWrapperField(this, base_pb.Timestamp, 3));
};


/** @param {?proto.hiber.Timestamp|undefined} value */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferCancelledEvent.prototype.setTime = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.event.Event.ModemTransferEvent.ModemTransferCancelledEvent.prototype.clearTime = function() {
  this.setTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferCancelledEvent.prototype.hasTime = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated hiber.tag.Tag tags = 4;
 * @return {!Array.<!proto.hiber.tag.Tag>}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferCancelledEvent.prototype.getTagsList = function() {
  return /** @type{!Array.<!proto.hiber.tag.Tag>} */ (
    jspb.Message.getRepeatedWrapperField(this, tag_pb.Tag, 4));
};


/** @param {!Array.<!proto.hiber.tag.Tag>} value */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferCancelledEvent.prototype.setTagsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.hiber.tag.Tag=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hiber.tag.Tag}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferCancelledEvent.prototype.addTags = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.hiber.tag.Tag, opt_index);
};


proto.hiber.event.Event.ModemTransferEvent.ModemTransferCancelledEvent.prototype.clearTagsList = function() {
  this.setTagsList([]);
};


/**
 * optional string title = 5;
 * @return {string}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferCancelledEvent.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferCancelledEvent.prototype.setTitle = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional string description = 6;
 * @return {string}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferCancelledEvent.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferCancelledEvent.prototype.setDescription = function(value) {
  jspb.Message.setField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferReceivedEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.event.Event.ModemTransferEvent.ModemTransferReceivedEvent.repeatedFields_, null);
};
goog.inherits(proto.hiber.event.Event.ModemTransferEvent.ModemTransferReceivedEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.event.Event.ModemTransferEvent.ModemTransferReceivedEvent.displayName = 'proto.hiber.event.Event.ModemTransferEvent.ModemTransferReceivedEvent';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferReceivedEvent.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferReceivedEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.event.Event.ModemTransferEvent.ModemTransferReceivedEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.event.Event.ModemTransferEvent.ModemTransferReceivedEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferReceivedEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    transfer: (f = msg.getTransfer()) && modem_transfer_pb.ModemTransfer.toObject(includeInstance, f),
    organization: jspb.Message.getFieldWithDefault(msg, 2, ""),
    time: (f = msg.getTime()) && base_pb.Timestamp.toObject(includeInstance, f),
    tagsList: jspb.Message.toObjectList(msg.getTagsList(),
    tag_pb.Tag.toObject, includeInstance),
    title: jspb.Message.getFieldWithDefault(msg, 5, ""),
    description: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.event.Event.ModemTransferEvent.ModemTransferReceivedEvent}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferReceivedEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.event.Event.ModemTransferEvent.ModemTransferReceivedEvent;
  return proto.hiber.event.Event.ModemTransferEvent.ModemTransferReceivedEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.event.Event.ModemTransferEvent.ModemTransferReceivedEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.event.Event.ModemTransferEvent.ModemTransferReceivedEvent}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferReceivedEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new modem_transfer_pb.ModemTransfer;
      reader.readMessage(value,modem_transfer_pb.ModemTransfer.deserializeBinaryFromReader);
      msg.setTransfer(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 3:
      var value = new base_pb.Timestamp;
      reader.readMessage(value,base_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTime(value);
      break;
    case 4:
      var value = new tag_pb.Tag;
      reader.readMessage(value,tag_pb.Tag.deserializeBinaryFromReader);
      msg.addTags(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferReceivedEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.event.Event.ModemTransferEvent.ModemTransferReceivedEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.event.Event.ModemTransferEvent.ModemTransferReceivedEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferReceivedEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransfer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      modem_transfer_pb.ModemTransfer.serializeBinaryToWriter
    );
  }
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTime();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      base_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      tag_pb.Tag.serializeBinaryToWriter
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional hiber.modem.ModemTransfer transfer = 1;
 * @return {?proto.hiber.modem.ModemTransfer}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferReceivedEvent.prototype.getTransfer = function() {
  return /** @type{?proto.hiber.modem.ModemTransfer} */ (
    jspb.Message.getWrapperField(this, modem_transfer_pb.ModemTransfer, 1));
};


/** @param {?proto.hiber.modem.ModemTransfer|undefined} value */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferReceivedEvent.prototype.setTransfer = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.hiber.event.Event.ModemTransferEvent.ModemTransferReceivedEvent.prototype.clearTransfer = function() {
  this.setTransfer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferReceivedEvent.prototype.hasTransfer = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string organization = 2;
 * @return {string}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferReceivedEvent.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferReceivedEvent.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional hiber.Timestamp time = 3;
 * @return {?proto.hiber.Timestamp}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferReceivedEvent.prototype.getTime = function() {
  return /** @type{?proto.hiber.Timestamp} */ (
    jspb.Message.getWrapperField(this, base_pb.Timestamp, 3));
};


/** @param {?proto.hiber.Timestamp|undefined} value */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferReceivedEvent.prototype.setTime = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.event.Event.ModemTransferEvent.ModemTransferReceivedEvent.prototype.clearTime = function() {
  this.setTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferReceivedEvent.prototype.hasTime = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated hiber.tag.Tag tags = 4;
 * @return {!Array.<!proto.hiber.tag.Tag>}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferReceivedEvent.prototype.getTagsList = function() {
  return /** @type{!Array.<!proto.hiber.tag.Tag>} */ (
    jspb.Message.getRepeatedWrapperField(this, tag_pb.Tag, 4));
};


/** @param {!Array.<!proto.hiber.tag.Tag>} value */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferReceivedEvent.prototype.setTagsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.hiber.tag.Tag=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hiber.tag.Tag}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferReceivedEvent.prototype.addTags = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.hiber.tag.Tag, opt_index);
};


proto.hiber.event.Event.ModemTransferEvent.ModemTransferReceivedEvent.prototype.clearTagsList = function() {
  this.setTagsList([]);
};


/**
 * optional string title = 5;
 * @return {string}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferReceivedEvent.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferReceivedEvent.prototype.setTitle = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional string description = 6;
 * @return {string}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferReceivedEvent.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferReceivedEvent.prototype.setDescription = function(value) {
  jspb.Message.setField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferNotReceivedEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.event.Event.ModemTransferEvent.ModemTransferNotReceivedEvent.repeatedFields_, null);
};
goog.inherits(proto.hiber.event.Event.ModemTransferEvent.ModemTransferNotReceivedEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.event.Event.ModemTransferEvent.ModemTransferNotReceivedEvent.displayName = 'proto.hiber.event.Event.ModemTransferEvent.ModemTransferNotReceivedEvent';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferNotReceivedEvent.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferNotReceivedEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.event.Event.ModemTransferEvent.ModemTransferNotReceivedEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.event.Event.ModemTransferEvent.ModemTransferNotReceivedEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferNotReceivedEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    transfer: (f = msg.getTransfer()) && modem_transfer_pb.ModemTransfer.toObject(includeInstance, f),
    organization: jspb.Message.getFieldWithDefault(msg, 2, ""),
    time: (f = msg.getTime()) && base_pb.Timestamp.toObject(includeInstance, f),
    tagsList: jspb.Message.toObjectList(msg.getTagsList(),
    tag_pb.Tag.toObject, includeInstance),
    title: jspb.Message.getFieldWithDefault(msg, 5, ""),
    description: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.event.Event.ModemTransferEvent.ModemTransferNotReceivedEvent}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferNotReceivedEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.event.Event.ModemTransferEvent.ModemTransferNotReceivedEvent;
  return proto.hiber.event.Event.ModemTransferEvent.ModemTransferNotReceivedEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.event.Event.ModemTransferEvent.ModemTransferNotReceivedEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.event.Event.ModemTransferEvent.ModemTransferNotReceivedEvent}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferNotReceivedEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new modem_transfer_pb.ModemTransfer;
      reader.readMessage(value,modem_transfer_pb.ModemTransfer.deserializeBinaryFromReader);
      msg.setTransfer(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 3:
      var value = new base_pb.Timestamp;
      reader.readMessage(value,base_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTime(value);
      break;
    case 4:
      var value = new tag_pb.Tag;
      reader.readMessage(value,tag_pb.Tag.deserializeBinaryFromReader);
      msg.addTags(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferNotReceivedEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.event.Event.ModemTransferEvent.ModemTransferNotReceivedEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.event.Event.ModemTransferEvent.ModemTransferNotReceivedEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferNotReceivedEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransfer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      modem_transfer_pb.ModemTransfer.serializeBinaryToWriter
    );
  }
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTime();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      base_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      tag_pb.Tag.serializeBinaryToWriter
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional hiber.modem.ModemTransfer transfer = 1;
 * @return {?proto.hiber.modem.ModemTransfer}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferNotReceivedEvent.prototype.getTransfer = function() {
  return /** @type{?proto.hiber.modem.ModemTransfer} */ (
    jspb.Message.getWrapperField(this, modem_transfer_pb.ModemTransfer, 1));
};


/** @param {?proto.hiber.modem.ModemTransfer|undefined} value */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferNotReceivedEvent.prototype.setTransfer = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.hiber.event.Event.ModemTransferEvent.ModemTransferNotReceivedEvent.prototype.clearTransfer = function() {
  this.setTransfer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferNotReceivedEvent.prototype.hasTransfer = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string organization = 2;
 * @return {string}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferNotReceivedEvent.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferNotReceivedEvent.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional hiber.Timestamp time = 3;
 * @return {?proto.hiber.Timestamp}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferNotReceivedEvent.prototype.getTime = function() {
  return /** @type{?proto.hiber.Timestamp} */ (
    jspb.Message.getWrapperField(this, base_pb.Timestamp, 3));
};


/** @param {?proto.hiber.Timestamp|undefined} value */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferNotReceivedEvent.prototype.setTime = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.event.Event.ModemTransferEvent.ModemTransferNotReceivedEvent.prototype.clearTime = function() {
  this.setTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferNotReceivedEvent.prototype.hasTime = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated hiber.tag.Tag tags = 4;
 * @return {!Array.<!proto.hiber.tag.Tag>}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferNotReceivedEvent.prototype.getTagsList = function() {
  return /** @type{!Array.<!proto.hiber.tag.Tag>} */ (
    jspb.Message.getRepeatedWrapperField(this, tag_pb.Tag, 4));
};


/** @param {!Array.<!proto.hiber.tag.Tag>} value */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferNotReceivedEvent.prototype.setTagsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.hiber.tag.Tag=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hiber.tag.Tag}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferNotReceivedEvent.prototype.addTags = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.hiber.tag.Tag, opt_index);
};


proto.hiber.event.Event.ModemTransferEvent.ModemTransferNotReceivedEvent.prototype.clearTagsList = function() {
  this.setTagsList([]);
};


/**
 * optional string title = 5;
 * @return {string}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferNotReceivedEvent.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferNotReceivedEvent.prototype.setTitle = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional string description = 6;
 * @return {string}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferNotReceivedEvent.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferNotReceivedEvent.prototype.setDescription = function(value) {
  jspb.Message.setField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent.repeatedFields_, null);
};
goog.inherits(proto.hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent.displayName = 'proto.hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent.repeatedFields_ = [3,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    returnTransfer: (f = msg.getReturnTransfer()) && modem_transfer_pb.ModemTransfer.toObject(includeInstance, f),
    originalTransfer: (f = msg.getOriginalTransfer()) && modem_transfer_pb.ModemTransfer.toObject(includeInstance, f),
    returnLinesList: jspb.Message.toObjectList(msg.getReturnLinesList(),
    modem_transfer_pb.ModemTransferReturnLine.toObject, includeInstance),
    organization: jspb.Message.getFieldWithDefault(msg, 4, ""),
    time: (f = msg.getTime()) && base_pb.Timestamp.toObject(includeInstance, f),
    tagsList: jspb.Message.toObjectList(msg.getTagsList(),
    tag_pb.Tag.toObject, includeInstance),
    title: jspb.Message.getFieldWithDefault(msg, 7, ""),
    description: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent;
  return proto.hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new modem_transfer_pb.ModemTransfer;
      reader.readMessage(value,modem_transfer_pb.ModemTransfer.deserializeBinaryFromReader);
      msg.setReturnTransfer(value);
      break;
    case 2:
      var value = new modem_transfer_pb.ModemTransfer;
      reader.readMessage(value,modem_transfer_pb.ModemTransfer.deserializeBinaryFromReader);
      msg.setOriginalTransfer(value);
      break;
    case 3:
      var value = new modem_transfer_pb.ModemTransferReturnLine;
      reader.readMessage(value,modem_transfer_pb.ModemTransferReturnLine.deserializeBinaryFromReader);
      msg.addReturnLines(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 5:
      var value = new base_pb.Timestamp;
      reader.readMessage(value,base_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTime(value);
      break;
    case 6:
      var value = new tag_pb.Tag;
      reader.readMessage(value,tag_pb.Tag.deserializeBinaryFromReader);
      msg.addTags(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReturnTransfer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      modem_transfer_pb.ModemTransfer.serializeBinaryToWriter
    );
  }
  f = message.getOriginalTransfer();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      modem_transfer_pb.ModemTransfer.serializeBinaryToWriter
    );
  }
  f = message.getReturnLinesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      modem_transfer_pb.ModemTransferReturnLine.serializeBinaryToWriter
    );
  }
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTime();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      base_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      tag_pb.Tag.serializeBinaryToWriter
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional hiber.modem.ModemTransfer return_transfer = 1;
 * @return {?proto.hiber.modem.ModemTransfer}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent.prototype.getReturnTransfer = function() {
  return /** @type{?proto.hiber.modem.ModemTransfer} */ (
    jspb.Message.getWrapperField(this, modem_transfer_pb.ModemTransfer, 1));
};


/** @param {?proto.hiber.modem.ModemTransfer|undefined} value */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent.prototype.setReturnTransfer = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent.prototype.clearReturnTransfer = function() {
  this.setReturnTransfer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent.prototype.hasReturnTransfer = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional hiber.modem.ModemTransfer original_transfer = 2;
 * @return {?proto.hiber.modem.ModemTransfer}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent.prototype.getOriginalTransfer = function() {
  return /** @type{?proto.hiber.modem.ModemTransfer} */ (
    jspb.Message.getWrapperField(this, modem_transfer_pb.ModemTransfer, 2));
};


/** @param {?proto.hiber.modem.ModemTransfer|undefined} value */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent.prototype.setOriginalTransfer = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent.prototype.clearOriginalTransfer = function() {
  this.setOriginalTransfer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent.prototype.hasOriginalTransfer = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated hiber.modem.ModemTransferReturnLine return_lines = 3;
 * @return {!Array.<!proto.hiber.modem.ModemTransferReturnLine>}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent.prototype.getReturnLinesList = function() {
  return /** @type{!Array.<!proto.hiber.modem.ModemTransferReturnLine>} */ (
    jspb.Message.getRepeatedWrapperField(this, modem_transfer_pb.ModemTransferReturnLine, 3));
};


/** @param {!Array.<!proto.hiber.modem.ModemTransferReturnLine>} value */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent.prototype.setReturnLinesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.hiber.modem.ModemTransferReturnLine=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hiber.modem.ModemTransferReturnLine}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent.prototype.addReturnLines = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.hiber.modem.ModemTransferReturnLine, opt_index);
};


proto.hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent.prototype.clearReturnLinesList = function() {
  this.setReturnLinesList([]);
};


/**
 * optional string organization = 4;
 * @return {string}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional hiber.Timestamp time = 5;
 * @return {?proto.hiber.Timestamp}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent.prototype.getTime = function() {
  return /** @type{?proto.hiber.Timestamp} */ (
    jspb.Message.getWrapperField(this, base_pb.Timestamp, 5));
};


/** @param {?proto.hiber.Timestamp|undefined} value */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent.prototype.setTime = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent.prototype.clearTime = function() {
  this.setTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent.prototype.hasTime = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated hiber.tag.Tag tags = 6;
 * @return {!Array.<!proto.hiber.tag.Tag>}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent.prototype.getTagsList = function() {
  return /** @type{!Array.<!proto.hiber.tag.Tag>} */ (
    jspb.Message.getRepeatedWrapperField(this, tag_pb.Tag, 6));
};


/** @param {!Array.<!proto.hiber.tag.Tag>} value */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent.prototype.setTagsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.hiber.tag.Tag=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hiber.tag.Tag}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent.prototype.addTags = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.hiber.tag.Tag, opt_index);
};


proto.hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent.prototype.clearTagsList = function() {
  this.setTagsList([]);
};


/**
 * optional string title = 7;
 * @return {string}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent.prototype.setTitle = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * optional string description = 8;
 * @return {string}
 */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent.prototype.setDescription = function(value) {
  jspb.Message.setField(this, 8, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.event.Event.UserEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.event.Event.UserEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.event.Event.UserEvent.displayName = 'proto.hiber.event.Event.UserEvent';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.event.Event.UserEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.event.Event.UserEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.event.Event.UserEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.Event.UserEvent.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.event.Event.UserEvent}
 */
proto.hiber.event.Event.UserEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.event.Event.UserEvent;
  return proto.hiber.event.Event.UserEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.event.Event.UserEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.event.Event.UserEvent}
 */
proto.hiber.event.Event.UserEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.event.Event.UserEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.event.Event.UserEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.event.Event.UserEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.Event.UserEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.event.Event.UserEvent.UserAddedEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.event.Event.UserEvent.UserAddedEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.event.Event.UserEvent.UserAddedEvent.displayName = 'proto.hiber.event.Event.UserEvent.UserAddedEvent';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.event.Event.UserEvent.UserAddedEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.event.Event.UserEvent.UserAddedEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.event.Event.UserEvent.UserAddedEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.Event.UserEvent.UserAddedEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: jspb.Message.getFieldWithDefault(msg, 1, ""),
    user: jspb.Message.getFieldWithDefault(msg, 2, ""),
    title: jspb.Message.getFieldWithDefault(msg, 3, ""),
    description: jspb.Message.getFieldWithDefault(msg, 4, ""),
    time: (f = msg.getTime()) && base_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.event.Event.UserEvent.UserAddedEvent}
 */
proto.hiber.event.Event.UserEvent.UserAddedEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.event.Event.UserEvent.UserAddedEvent;
  return proto.hiber.event.Event.UserEvent.UserAddedEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.event.Event.UserEvent.UserAddedEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.event.Event.UserEvent.UserAddedEvent}
 */
proto.hiber.event.Event.UserEvent.UserAddedEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUser(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = new base_pb.Timestamp;
      reader.readMessage(value,base_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.event.Event.UserEvent.UserAddedEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.event.Event.UserEvent.UserAddedEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.event.Event.UserEvent.UserAddedEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.Event.UserEvent.UserAddedEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUser();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTime();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      base_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string organization = 1;
 * @return {string}
 */
proto.hiber.event.Event.UserEvent.UserAddedEvent.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.event.Event.UserEvent.UserAddedEvent.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string user = 2;
 * @return {string}
 */
proto.hiber.event.Event.UserEvent.UserAddedEvent.prototype.getUser = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hiber.event.Event.UserEvent.UserAddedEvent.prototype.setUser = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string title = 3;
 * @return {string}
 */
proto.hiber.event.Event.UserEvent.UserAddedEvent.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.hiber.event.Event.UserEvent.UserAddedEvent.prototype.setTitle = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.hiber.event.Event.UserEvent.UserAddedEvent.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.hiber.event.Event.UserEvent.UserAddedEvent.prototype.setDescription = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional hiber.Timestamp time = 5;
 * @return {?proto.hiber.Timestamp}
 */
proto.hiber.event.Event.UserEvent.UserAddedEvent.prototype.getTime = function() {
  return /** @type{?proto.hiber.Timestamp} */ (
    jspb.Message.getWrapperField(this, base_pb.Timestamp, 5));
};


/** @param {?proto.hiber.Timestamp|undefined} value */
proto.hiber.event.Event.UserEvent.UserAddedEvent.prototype.setTime = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.hiber.event.Event.UserEvent.UserAddedEvent.prototype.clearTime = function() {
  this.setTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.UserEvent.UserAddedEvent.prototype.hasTime = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.event.Event.UserEvent.UserRemovedEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.event.Event.UserEvent.UserRemovedEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.event.Event.UserEvent.UserRemovedEvent.displayName = 'proto.hiber.event.Event.UserEvent.UserRemovedEvent';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.event.Event.UserEvent.UserRemovedEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.event.Event.UserEvent.UserRemovedEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.event.Event.UserEvent.UserRemovedEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.Event.UserEvent.UserRemovedEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: jspb.Message.getFieldWithDefault(msg, 1, ""),
    user: jspb.Message.getFieldWithDefault(msg, 2, ""),
    title: jspb.Message.getFieldWithDefault(msg, 3, ""),
    description: jspb.Message.getFieldWithDefault(msg, 4, ""),
    time: (f = msg.getTime()) && base_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.event.Event.UserEvent.UserRemovedEvent}
 */
proto.hiber.event.Event.UserEvent.UserRemovedEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.event.Event.UserEvent.UserRemovedEvent;
  return proto.hiber.event.Event.UserEvent.UserRemovedEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.event.Event.UserEvent.UserRemovedEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.event.Event.UserEvent.UserRemovedEvent}
 */
proto.hiber.event.Event.UserEvent.UserRemovedEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUser(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = new base_pb.Timestamp;
      reader.readMessage(value,base_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.event.Event.UserEvent.UserRemovedEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.event.Event.UserEvent.UserRemovedEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.event.Event.UserEvent.UserRemovedEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.Event.UserEvent.UserRemovedEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUser();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTime();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      base_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string organization = 1;
 * @return {string}
 */
proto.hiber.event.Event.UserEvent.UserRemovedEvent.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.event.Event.UserEvent.UserRemovedEvent.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string user = 2;
 * @return {string}
 */
proto.hiber.event.Event.UserEvent.UserRemovedEvent.prototype.getUser = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hiber.event.Event.UserEvent.UserRemovedEvent.prototype.setUser = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string title = 3;
 * @return {string}
 */
proto.hiber.event.Event.UserEvent.UserRemovedEvent.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.hiber.event.Event.UserEvent.UserRemovedEvent.prototype.setTitle = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.hiber.event.Event.UserEvent.UserRemovedEvent.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.hiber.event.Event.UserEvent.UserRemovedEvent.prototype.setDescription = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional hiber.Timestamp time = 5;
 * @return {?proto.hiber.Timestamp}
 */
proto.hiber.event.Event.UserEvent.UserRemovedEvent.prototype.getTime = function() {
  return /** @type{?proto.hiber.Timestamp} */ (
    jspb.Message.getWrapperField(this, base_pb.Timestamp, 5));
};


/** @param {?proto.hiber.Timestamp|undefined} value */
proto.hiber.event.Event.UserEvent.UserRemovedEvent.prototype.setTime = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.hiber.event.Event.UserEvent.UserRemovedEvent.prototype.clearTime = function() {
  this.setTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.UserEvent.UserRemovedEvent.prototype.hasTime = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.event.Event.UserEvent.UserAccessRequestEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.event.Event.UserEvent.UserAccessRequestEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.event.Event.UserEvent.UserAccessRequestEvent.displayName = 'proto.hiber.event.Event.UserEvent.UserAccessRequestEvent';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.event.Event.UserEvent.UserAccessRequestEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.event.Event.UserEvent.UserAccessRequestEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.event.Event.UserEvent.UserAccessRequestEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.Event.UserEvent.UserAccessRequestEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: jspb.Message.getFieldWithDefault(msg, 1, ""),
    user: jspb.Message.getFieldWithDefault(msg, 2, ""),
    time: (f = msg.getTime()) && base_pb.Timestamp.toObject(includeInstance, f),
    title: jspb.Message.getFieldWithDefault(msg, 4, ""),
    description: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.event.Event.UserEvent.UserAccessRequestEvent}
 */
proto.hiber.event.Event.UserEvent.UserAccessRequestEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.event.Event.UserEvent.UserAccessRequestEvent;
  return proto.hiber.event.Event.UserEvent.UserAccessRequestEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.event.Event.UserEvent.UserAccessRequestEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.event.Event.UserEvent.UserAccessRequestEvent}
 */
proto.hiber.event.Event.UserEvent.UserAccessRequestEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUser(value);
      break;
    case 3:
      var value = new base_pb.Timestamp;
      reader.readMessage(value,base_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTime(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.event.Event.UserEvent.UserAccessRequestEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.event.Event.UserEvent.UserAccessRequestEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.event.Event.UserEvent.UserAccessRequestEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.Event.UserEvent.UserAccessRequestEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUser();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTime();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      base_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string organization = 1;
 * @return {string}
 */
proto.hiber.event.Event.UserEvent.UserAccessRequestEvent.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.event.Event.UserEvent.UserAccessRequestEvent.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string user = 2;
 * @return {string}
 */
proto.hiber.event.Event.UserEvent.UserAccessRequestEvent.prototype.getUser = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hiber.event.Event.UserEvent.UserAccessRequestEvent.prototype.setUser = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional hiber.Timestamp time = 3;
 * @return {?proto.hiber.Timestamp}
 */
proto.hiber.event.Event.UserEvent.UserAccessRequestEvent.prototype.getTime = function() {
  return /** @type{?proto.hiber.Timestamp} */ (
    jspb.Message.getWrapperField(this, base_pb.Timestamp, 3));
};


/** @param {?proto.hiber.Timestamp|undefined} value */
proto.hiber.event.Event.UserEvent.UserAccessRequestEvent.prototype.setTime = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.event.Event.UserEvent.UserAccessRequestEvent.prototype.clearTime = function() {
  this.setTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.UserEvent.UserAccessRequestEvent.prototype.hasTime = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string title = 4;
 * @return {string}
 */
proto.hiber.event.Event.UserEvent.UserAccessRequestEvent.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.hiber.event.Event.UserEvent.UserAccessRequestEvent.prototype.setTitle = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string description = 5;
 * @return {string}
 */
proto.hiber.event.Event.UserEvent.UserAccessRequestEvent.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.hiber.event.Event.UserEvent.UserAccessRequestEvent.prototype.setDescription = function(value) {
  jspb.Message.setField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.event.Event.WebhookEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.event.Event.WebhookEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.event.Event.WebhookEvent.displayName = 'proto.hiber.event.Event.WebhookEvent';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.event.Event.WebhookEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.event.Event.WebhookEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.event.Event.WebhookEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.Event.WebhookEvent.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.event.Event.WebhookEvent}
 */
proto.hiber.event.Event.WebhookEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.event.Event.WebhookEvent;
  return proto.hiber.event.Event.WebhookEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.event.Event.WebhookEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.event.Event.WebhookEvent}
 */
proto.hiber.event.Event.WebhookEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.event.Event.WebhookEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.event.Event.WebhookEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.event.Event.WebhookEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.Event.WebhookEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.event.Event.WebhookEvent.CreatedEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.event.Event.WebhookEvent.CreatedEvent.repeatedFields_, null);
};
goog.inherits(proto.hiber.event.Event.WebhookEvent.CreatedEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.event.Event.WebhookEvent.CreatedEvent.displayName = 'proto.hiber.event.Event.WebhookEvent.CreatedEvent';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.event.Event.WebhookEvent.CreatedEvent.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.event.Event.WebhookEvent.CreatedEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.event.Event.WebhookEvent.CreatedEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.event.Event.WebhookEvent.CreatedEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.Event.WebhookEvent.CreatedEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: jspb.Message.getFieldWithDefault(msg, 1, ""),
    created: (f = msg.getCreated()) && webhook_pb.Webhook.toObject(includeInstance, f),
    tagsList: jspb.Message.toObjectList(msg.getTagsList(),
    tag_pb.Tag.toObject, includeInstance),
    title: jspb.Message.getFieldWithDefault(msg, 4, ""),
    description: jspb.Message.getFieldWithDefault(msg, 5, ""),
    time: (f = msg.getTime()) && base_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.event.Event.WebhookEvent.CreatedEvent}
 */
proto.hiber.event.Event.WebhookEvent.CreatedEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.event.Event.WebhookEvent.CreatedEvent;
  return proto.hiber.event.Event.WebhookEvent.CreatedEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.event.Event.WebhookEvent.CreatedEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.event.Event.WebhookEvent.CreatedEvent}
 */
proto.hiber.event.Event.WebhookEvent.CreatedEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 2:
      var value = new webhook_pb.Webhook;
      reader.readMessage(value,webhook_pb.Webhook.deserializeBinaryFromReader);
      msg.setCreated(value);
      break;
    case 3:
      var value = new tag_pb.Tag;
      reader.readMessage(value,tag_pb.Tag.deserializeBinaryFromReader);
      msg.addTags(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 6:
      var value = new base_pb.Timestamp;
      reader.readMessage(value,base_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.event.Event.WebhookEvent.CreatedEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.event.Event.WebhookEvent.CreatedEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.event.Event.WebhookEvent.CreatedEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.Event.WebhookEvent.CreatedEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCreated();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      webhook_pb.Webhook.serializeBinaryToWriter
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      tag_pb.Tag.serializeBinaryToWriter
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTime();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      base_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string organization = 1;
 * @return {string}
 */
proto.hiber.event.Event.WebhookEvent.CreatedEvent.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.event.Event.WebhookEvent.CreatedEvent.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional hiber.webhook.Webhook created = 2;
 * @return {?proto.hiber.webhook.Webhook}
 */
proto.hiber.event.Event.WebhookEvent.CreatedEvent.prototype.getCreated = function() {
  return /** @type{?proto.hiber.webhook.Webhook} */ (
    jspb.Message.getWrapperField(this, webhook_pb.Webhook, 2));
};


/** @param {?proto.hiber.webhook.Webhook|undefined} value */
proto.hiber.event.Event.WebhookEvent.CreatedEvent.prototype.setCreated = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.event.Event.WebhookEvent.CreatedEvent.prototype.clearCreated = function() {
  this.setCreated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.WebhookEvent.CreatedEvent.prototype.hasCreated = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated hiber.tag.Tag tags = 3;
 * @return {!Array.<!proto.hiber.tag.Tag>}
 */
proto.hiber.event.Event.WebhookEvent.CreatedEvent.prototype.getTagsList = function() {
  return /** @type{!Array.<!proto.hiber.tag.Tag>} */ (
    jspb.Message.getRepeatedWrapperField(this, tag_pb.Tag, 3));
};


/** @param {!Array.<!proto.hiber.tag.Tag>} value */
proto.hiber.event.Event.WebhookEvent.CreatedEvent.prototype.setTagsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.hiber.tag.Tag=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hiber.tag.Tag}
 */
proto.hiber.event.Event.WebhookEvent.CreatedEvent.prototype.addTags = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.hiber.tag.Tag, opt_index);
};


proto.hiber.event.Event.WebhookEvent.CreatedEvent.prototype.clearTagsList = function() {
  this.setTagsList([]);
};


/**
 * optional string title = 4;
 * @return {string}
 */
proto.hiber.event.Event.WebhookEvent.CreatedEvent.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.hiber.event.Event.WebhookEvent.CreatedEvent.prototype.setTitle = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string description = 5;
 * @return {string}
 */
proto.hiber.event.Event.WebhookEvent.CreatedEvent.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.hiber.event.Event.WebhookEvent.CreatedEvent.prototype.setDescription = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional hiber.Timestamp time = 6;
 * @return {?proto.hiber.Timestamp}
 */
proto.hiber.event.Event.WebhookEvent.CreatedEvent.prototype.getTime = function() {
  return /** @type{?proto.hiber.Timestamp} */ (
    jspb.Message.getWrapperField(this, base_pb.Timestamp, 6));
};


/** @param {?proto.hiber.Timestamp|undefined} value */
proto.hiber.event.Event.WebhookEvent.CreatedEvent.prototype.setTime = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.hiber.event.Event.WebhookEvent.CreatedEvent.prototype.clearTime = function() {
  this.setTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.WebhookEvent.CreatedEvent.prototype.hasTime = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.event.Event.WebhookEvent.UpdatedEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.event.Event.WebhookEvent.UpdatedEvent.repeatedFields_, null);
};
goog.inherits(proto.hiber.event.Event.WebhookEvent.UpdatedEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.event.Event.WebhookEvent.UpdatedEvent.displayName = 'proto.hiber.event.Event.WebhookEvent.UpdatedEvent';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.event.Event.WebhookEvent.UpdatedEvent.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.event.Event.WebhookEvent.UpdatedEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.event.Event.WebhookEvent.UpdatedEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.event.Event.WebhookEvent.UpdatedEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.Event.WebhookEvent.UpdatedEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: jspb.Message.getFieldWithDefault(msg, 1, ""),
    update: (f = msg.getUpdate()) && webhook_pb.Webhook.toObject(includeInstance, f),
    tagsList: jspb.Message.toObjectList(msg.getTagsList(),
    tag_pb.Tag.toObject, includeInstance),
    title: jspb.Message.getFieldWithDefault(msg, 4, ""),
    description: jspb.Message.getFieldWithDefault(msg, 5, ""),
    time: (f = msg.getTime()) && base_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.event.Event.WebhookEvent.UpdatedEvent}
 */
proto.hiber.event.Event.WebhookEvent.UpdatedEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.event.Event.WebhookEvent.UpdatedEvent;
  return proto.hiber.event.Event.WebhookEvent.UpdatedEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.event.Event.WebhookEvent.UpdatedEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.event.Event.WebhookEvent.UpdatedEvent}
 */
proto.hiber.event.Event.WebhookEvent.UpdatedEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 2:
      var value = new webhook_pb.Webhook;
      reader.readMessage(value,webhook_pb.Webhook.deserializeBinaryFromReader);
      msg.setUpdate(value);
      break;
    case 3:
      var value = new tag_pb.Tag;
      reader.readMessage(value,tag_pb.Tag.deserializeBinaryFromReader);
      msg.addTags(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 6:
      var value = new base_pb.Timestamp;
      reader.readMessage(value,base_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.event.Event.WebhookEvent.UpdatedEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.event.Event.WebhookEvent.UpdatedEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.event.Event.WebhookEvent.UpdatedEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.Event.WebhookEvent.UpdatedEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUpdate();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      webhook_pb.Webhook.serializeBinaryToWriter
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      tag_pb.Tag.serializeBinaryToWriter
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTime();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      base_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string organization = 1;
 * @return {string}
 */
proto.hiber.event.Event.WebhookEvent.UpdatedEvent.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.event.Event.WebhookEvent.UpdatedEvent.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional hiber.webhook.Webhook update = 2;
 * @return {?proto.hiber.webhook.Webhook}
 */
proto.hiber.event.Event.WebhookEvent.UpdatedEvent.prototype.getUpdate = function() {
  return /** @type{?proto.hiber.webhook.Webhook} */ (
    jspb.Message.getWrapperField(this, webhook_pb.Webhook, 2));
};


/** @param {?proto.hiber.webhook.Webhook|undefined} value */
proto.hiber.event.Event.WebhookEvent.UpdatedEvent.prototype.setUpdate = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.event.Event.WebhookEvent.UpdatedEvent.prototype.clearUpdate = function() {
  this.setUpdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.WebhookEvent.UpdatedEvent.prototype.hasUpdate = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated hiber.tag.Tag tags = 3;
 * @return {!Array.<!proto.hiber.tag.Tag>}
 */
proto.hiber.event.Event.WebhookEvent.UpdatedEvent.prototype.getTagsList = function() {
  return /** @type{!Array.<!proto.hiber.tag.Tag>} */ (
    jspb.Message.getRepeatedWrapperField(this, tag_pb.Tag, 3));
};


/** @param {!Array.<!proto.hiber.tag.Tag>} value */
proto.hiber.event.Event.WebhookEvent.UpdatedEvent.prototype.setTagsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.hiber.tag.Tag=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hiber.tag.Tag}
 */
proto.hiber.event.Event.WebhookEvent.UpdatedEvent.prototype.addTags = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.hiber.tag.Tag, opt_index);
};


proto.hiber.event.Event.WebhookEvent.UpdatedEvent.prototype.clearTagsList = function() {
  this.setTagsList([]);
};


/**
 * optional string title = 4;
 * @return {string}
 */
proto.hiber.event.Event.WebhookEvent.UpdatedEvent.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.hiber.event.Event.WebhookEvent.UpdatedEvent.prototype.setTitle = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string description = 5;
 * @return {string}
 */
proto.hiber.event.Event.WebhookEvent.UpdatedEvent.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.hiber.event.Event.WebhookEvent.UpdatedEvent.prototype.setDescription = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional hiber.Timestamp time = 6;
 * @return {?proto.hiber.Timestamp}
 */
proto.hiber.event.Event.WebhookEvent.UpdatedEvent.prototype.getTime = function() {
  return /** @type{?proto.hiber.Timestamp} */ (
    jspb.Message.getWrapperField(this, base_pb.Timestamp, 6));
};


/** @param {?proto.hiber.Timestamp|undefined} value */
proto.hiber.event.Event.WebhookEvent.UpdatedEvent.prototype.setTime = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.hiber.event.Event.WebhookEvent.UpdatedEvent.prototype.clearTime = function() {
  this.setTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.WebhookEvent.UpdatedEvent.prototype.hasTime = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.event.Event.WebhookEvent.DeletedEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.event.Event.WebhookEvent.DeletedEvent.repeatedFields_, null);
};
goog.inherits(proto.hiber.event.Event.WebhookEvent.DeletedEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.event.Event.WebhookEvent.DeletedEvent.displayName = 'proto.hiber.event.Event.WebhookEvent.DeletedEvent';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.event.Event.WebhookEvent.DeletedEvent.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.event.Event.WebhookEvent.DeletedEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.event.Event.WebhookEvent.DeletedEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.event.Event.WebhookEvent.DeletedEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.Event.WebhookEvent.DeletedEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: jspb.Message.getFieldWithDefault(msg, 1, ""),
    deleted: (f = msg.getDeleted()) && webhook_pb.Webhook.toObject(includeInstance, f),
    tagsList: jspb.Message.toObjectList(msg.getTagsList(),
    tag_pb.Tag.toObject, includeInstance),
    title: jspb.Message.getFieldWithDefault(msg, 4, ""),
    description: jspb.Message.getFieldWithDefault(msg, 5, ""),
    time: (f = msg.getTime()) && base_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.event.Event.WebhookEvent.DeletedEvent}
 */
proto.hiber.event.Event.WebhookEvent.DeletedEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.event.Event.WebhookEvent.DeletedEvent;
  return proto.hiber.event.Event.WebhookEvent.DeletedEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.event.Event.WebhookEvent.DeletedEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.event.Event.WebhookEvent.DeletedEvent}
 */
proto.hiber.event.Event.WebhookEvent.DeletedEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 2:
      var value = new webhook_pb.Webhook;
      reader.readMessage(value,webhook_pb.Webhook.deserializeBinaryFromReader);
      msg.setDeleted(value);
      break;
    case 3:
      var value = new tag_pb.Tag;
      reader.readMessage(value,tag_pb.Tag.deserializeBinaryFromReader);
      msg.addTags(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 6:
      var value = new base_pb.Timestamp;
      reader.readMessage(value,base_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.event.Event.WebhookEvent.DeletedEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.event.Event.WebhookEvent.DeletedEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.event.Event.WebhookEvent.DeletedEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.Event.WebhookEvent.DeletedEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDeleted();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      webhook_pb.Webhook.serializeBinaryToWriter
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      tag_pb.Tag.serializeBinaryToWriter
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTime();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      base_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string organization = 1;
 * @return {string}
 */
proto.hiber.event.Event.WebhookEvent.DeletedEvent.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.event.Event.WebhookEvent.DeletedEvent.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional hiber.webhook.Webhook deleted = 2;
 * @return {?proto.hiber.webhook.Webhook}
 */
proto.hiber.event.Event.WebhookEvent.DeletedEvent.prototype.getDeleted = function() {
  return /** @type{?proto.hiber.webhook.Webhook} */ (
    jspb.Message.getWrapperField(this, webhook_pb.Webhook, 2));
};


/** @param {?proto.hiber.webhook.Webhook|undefined} value */
proto.hiber.event.Event.WebhookEvent.DeletedEvent.prototype.setDeleted = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.event.Event.WebhookEvent.DeletedEvent.prototype.clearDeleted = function() {
  this.setDeleted(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.WebhookEvent.DeletedEvent.prototype.hasDeleted = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated hiber.tag.Tag tags = 3;
 * @return {!Array.<!proto.hiber.tag.Tag>}
 */
proto.hiber.event.Event.WebhookEvent.DeletedEvent.prototype.getTagsList = function() {
  return /** @type{!Array.<!proto.hiber.tag.Tag>} */ (
    jspb.Message.getRepeatedWrapperField(this, tag_pb.Tag, 3));
};


/** @param {!Array.<!proto.hiber.tag.Tag>} value */
proto.hiber.event.Event.WebhookEvent.DeletedEvent.prototype.setTagsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.hiber.tag.Tag=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hiber.tag.Tag}
 */
proto.hiber.event.Event.WebhookEvent.DeletedEvent.prototype.addTags = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.hiber.tag.Tag, opt_index);
};


proto.hiber.event.Event.WebhookEvent.DeletedEvent.prototype.clearTagsList = function() {
  this.setTagsList([]);
};


/**
 * optional string title = 4;
 * @return {string}
 */
proto.hiber.event.Event.WebhookEvent.DeletedEvent.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.hiber.event.Event.WebhookEvent.DeletedEvent.prototype.setTitle = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string description = 5;
 * @return {string}
 */
proto.hiber.event.Event.WebhookEvent.DeletedEvent.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.hiber.event.Event.WebhookEvent.DeletedEvent.prototype.setDescription = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional hiber.Timestamp time = 6;
 * @return {?proto.hiber.Timestamp}
 */
proto.hiber.event.Event.WebhookEvent.DeletedEvent.prototype.getTime = function() {
  return /** @type{?proto.hiber.Timestamp} */ (
    jspb.Message.getWrapperField(this, base_pb.Timestamp, 6));
};


/** @param {?proto.hiber.Timestamp|undefined} value */
proto.hiber.event.Event.WebhookEvent.DeletedEvent.prototype.setTime = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.hiber.event.Event.WebhookEvent.DeletedEvent.prototype.clearTime = function() {
  this.setTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.WebhookEvent.DeletedEvent.prototype.hasTime = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.event.Event.WebhookEvent.FailedEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.event.Event.WebhookEvent.FailedEvent.repeatedFields_, null);
};
goog.inherits(proto.hiber.event.Event.WebhookEvent.FailedEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.event.Event.WebhookEvent.FailedEvent.displayName = 'proto.hiber.event.Event.WebhookEvent.FailedEvent';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.event.Event.WebhookEvent.FailedEvent.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.event.Event.WebhookEvent.FailedEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.event.Event.WebhookEvent.FailedEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.event.Event.WebhookEvent.FailedEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.Event.WebhookEvent.FailedEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: jspb.Message.getFieldWithDefault(msg, 1, ""),
    reason: jspb.Message.getFieldWithDefault(msg, 2, ""),
    failed: (f = msg.getFailed()) && webhook_pb.Webhook.toObject(includeInstance, f),
    tagsList: jspb.Message.toObjectList(msg.getTagsList(),
    tag_pb.Tag.toObject, includeInstance),
    title: jspb.Message.getFieldWithDefault(msg, 5, ""),
    description: jspb.Message.getFieldWithDefault(msg, 6, ""),
    time: (f = msg.getTime()) && base_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.event.Event.WebhookEvent.FailedEvent}
 */
proto.hiber.event.Event.WebhookEvent.FailedEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.event.Event.WebhookEvent.FailedEvent;
  return proto.hiber.event.Event.WebhookEvent.FailedEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.event.Event.WebhookEvent.FailedEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.event.Event.WebhookEvent.FailedEvent}
 */
proto.hiber.event.Event.WebhookEvent.FailedEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setReason(value);
      break;
    case 3:
      var value = new webhook_pb.Webhook;
      reader.readMessage(value,webhook_pb.Webhook.deserializeBinaryFromReader);
      msg.setFailed(value);
      break;
    case 4:
      var value = new tag_pb.Tag;
      reader.readMessage(value,tag_pb.Tag.deserializeBinaryFromReader);
      msg.addTags(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 7:
      var value = new base_pb.Timestamp;
      reader.readMessage(value,base_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.event.Event.WebhookEvent.FailedEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.event.Event.WebhookEvent.FailedEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.event.Event.WebhookEvent.FailedEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.Event.WebhookEvent.FailedEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getReason();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFailed();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      webhook_pb.Webhook.serializeBinaryToWriter
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      tag_pb.Tag.serializeBinaryToWriter
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getTime();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      base_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string organization = 1;
 * @return {string}
 */
proto.hiber.event.Event.WebhookEvent.FailedEvent.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.event.Event.WebhookEvent.FailedEvent.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string reason = 2;
 * @return {string}
 */
proto.hiber.event.Event.WebhookEvent.FailedEvent.prototype.getReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.hiber.event.Event.WebhookEvent.FailedEvent.prototype.setReason = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional hiber.webhook.Webhook failed = 3;
 * @return {?proto.hiber.webhook.Webhook}
 */
proto.hiber.event.Event.WebhookEvent.FailedEvent.prototype.getFailed = function() {
  return /** @type{?proto.hiber.webhook.Webhook} */ (
    jspb.Message.getWrapperField(this, webhook_pb.Webhook, 3));
};


/** @param {?proto.hiber.webhook.Webhook|undefined} value */
proto.hiber.event.Event.WebhookEvent.FailedEvent.prototype.setFailed = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.event.Event.WebhookEvent.FailedEvent.prototype.clearFailed = function() {
  this.setFailed(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.WebhookEvent.FailedEvent.prototype.hasFailed = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated hiber.tag.Tag tags = 4;
 * @return {!Array.<!proto.hiber.tag.Tag>}
 */
proto.hiber.event.Event.WebhookEvent.FailedEvent.prototype.getTagsList = function() {
  return /** @type{!Array.<!proto.hiber.tag.Tag>} */ (
    jspb.Message.getRepeatedWrapperField(this, tag_pb.Tag, 4));
};


/** @param {!Array.<!proto.hiber.tag.Tag>} value */
proto.hiber.event.Event.WebhookEvent.FailedEvent.prototype.setTagsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.hiber.tag.Tag=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hiber.tag.Tag}
 */
proto.hiber.event.Event.WebhookEvent.FailedEvent.prototype.addTags = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.hiber.tag.Tag, opt_index);
};


proto.hiber.event.Event.WebhookEvent.FailedEvent.prototype.clearTagsList = function() {
  this.setTagsList([]);
};


/**
 * optional string title = 5;
 * @return {string}
 */
proto.hiber.event.Event.WebhookEvent.FailedEvent.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.hiber.event.Event.WebhookEvent.FailedEvent.prototype.setTitle = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional string description = 6;
 * @return {string}
 */
proto.hiber.event.Event.WebhookEvent.FailedEvent.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.hiber.event.Event.WebhookEvent.FailedEvent.prototype.setDescription = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional hiber.Timestamp time = 7;
 * @return {?proto.hiber.Timestamp}
 */
proto.hiber.event.Event.WebhookEvent.FailedEvent.prototype.getTime = function() {
  return /** @type{?proto.hiber.Timestamp} */ (
    jspb.Message.getWrapperField(this, base_pb.Timestamp, 7));
};


/** @param {?proto.hiber.Timestamp|undefined} value */
proto.hiber.event.Event.WebhookEvent.FailedEvent.prototype.setTime = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.hiber.event.Event.WebhookEvent.FailedEvent.prototype.clearTime = function() {
  this.setTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.WebhookEvent.FailedEvent.prototype.hasTime = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional ModemEvent.ModemLocationUpdatedEvent modem_location_updated = 2;
 * @return {?proto.hiber.event.Event.ModemEvent.ModemLocationUpdatedEvent}
 */
proto.hiber.event.Event.prototype.getModemLocationUpdated = function() {
  return /** @type{?proto.hiber.event.Event.ModemEvent.ModemLocationUpdatedEvent} */ (
    jspb.Message.getWrapperField(this, proto.hiber.event.Event.ModemEvent.ModemLocationUpdatedEvent, 2));
};


/** @param {?proto.hiber.event.Event.ModemEvent.ModemLocationUpdatedEvent|undefined} value */
proto.hiber.event.Event.prototype.setModemLocationUpdated = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.hiber.event.Event.oneofGroups_[0], value);
};


proto.hiber.event.Event.prototype.clearModemLocationUpdated = function() {
  this.setModemLocationUpdated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.prototype.hasModemLocationUpdated = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ModemEvent.ModemStaleEvent modem_stale = 3;
 * @return {?proto.hiber.event.Event.ModemEvent.ModemStaleEvent}
 */
proto.hiber.event.Event.prototype.getModemStale = function() {
  return /** @type{?proto.hiber.event.Event.ModemEvent.ModemStaleEvent} */ (
    jspb.Message.getWrapperField(this, proto.hiber.event.Event.ModemEvent.ModemStaleEvent, 3));
};


/** @param {?proto.hiber.event.Event.ModemEvent.ModemStaleEvent|undefined} value */
proto.hiber.event.Event.prototype.setModemStale = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.hiber.event.Event.oneofGroups_[0], value);
};


proto.hiber.event.Event.prototype.clearModemStale = function() {
  this.setModemStale(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.prototype.hasModemStale = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ModemEvent.MessageEvent.ModemMessageReceivedEvent modem_message_received = 4;
 * @return {?proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageReceivedEvent}
 */
proto.hiber.event.Event.prototype.getModemMessageReceived = function() {
  return /** @type{?proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageReceivedEvent} */ (
    jspb.Message.getWrapperField(this, proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageReceivedEvent, 4));
};


/** @param {?proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageReceivedEvent|undefined} value */
proto.hiber.event.Event.prototype.setModemMessageReceived = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.hiber.event.Event.oneofGroups_[0], value);
};


proto.hiber.event.Event.prototype.clearModemMessageReceived = function() {
  this.setModemMessageReceived(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.prototype.hasModemMessageReceived = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ModemEvent.MessageEvent.ModemMessageDroppedEvent modem_message_dropped = 5;
 * @return {?proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDroppedEvent}
 */
proto.hiber.event.Event.prototype.getModemMessageDropped = function() {
  return /** @type{?proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDroppedEvent} */ (
    jspb.Message.getWrapperField(this, proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDroppedEvent, 5));
};


/** @param {?proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDroppedEvent|undefined} value */
proto.hiber.event.Event.prototype.setModemMessageDropped = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.hiber.event.Event.oneofGroups_[0], value);
};


proto.hiber.event.Event.prototype.clearModemMessageDropped = function() {
  this.setModemMessageDropped(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.prototype.hasModemMessageDropped = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ModemEvent.MessageEvent.ModemMessageDelayedEvent modem_message_delayed = 6;
 * @return {?proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDelayedEvent}
 */
proto.hiber.event.Event.prototype.getModemMessageDelayed = function() {
  return /** @type{?proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDelayedEvent} */ (
    jspb.Message.getWrapperField(this, proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDelayedEvent, 6));
};


/** @param {?proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDelayedEvent|undefined} value */
proto.hiber.event.Event.prototype.setModemMessageDelayed = function(value) {
  jspb.Message.setOneofWrapperField(this, 6, proto.hiber.event.Event.oneofGroups_[0], value);
};


proto.hiber.event.Event.prototype.clearModemMessageDelayed = function() {
  this.setModemMessageDelayed(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.prototype.hasModemMessageDelayed = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional ModemEvent.MessageEvent.ModemMessageCannotBeParsedEvent modem_message_cannot_be_parsed = 7;
 * @return {?proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageCannotBeParsedEvent}
 */
proto.hiber.event.Event.prototype.getModemMessageCannotBeParsed = function() {
  return /** @type{?proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageCannotBeParsedEvent} */ (
    jspb.Message.getWrapperField(this, proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageCannotBeParsedEvent, 7));
};


/** @param {?proto.hiber.event.Event.ModemEvent.MessageEvent.ModemMessageCannotBeParsedEvent|undefined} value */
proto.hiber.event.Event.prototype.setModemMessageCannotBeParsed = function(value) {
  jspb.Message.setOneofWrapperField(this, 7, proto.hiber.event.Event.oneofGroups_[0], value);
};


proto.hiber.event.Event.prototype.clearModemMessageCannotBeParsed = function() {
  this.setModemMessageCannotBeParsed(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.prototype.hasModemMessageCannotBeParsed = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional UserEvent.UserAddedEvent user_added = 8;
 * @return {?proto.hiber.event.Event.UserEvent.UserAddedEvent}
 */
proto.hiber.event.Event.prototype.getUserAdded = function() {
  return /** @type{?proto.hiber.event.Event.UserEvent.UserAddedEvent} */ (
    jspb.Message.getWrapperField(this, proto.hiber.event.Event.UserEvent.UserAddedEvent, 8));
};


/** @param {?proto.hiber.event.Event.UserEvent.UserAddedEvent|undefined} value */
proto.hiber.event.Event.prototype.setUserAdded = function(value) {
  jspb.Message.setOneofWrapperField(this, 8, proto.hiber.event.Event.oneofGroups_[0], value);
};


proto.hiber.event.Event.prototype.clearUserAdded = function() {
  this.setUserAdded(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.prototype.hasUserAdded = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional UserEvent.UserRemovedEvent user_removed = 9;
 * @return {?proto.hiber.event.Event.UserEvent.UserRemovedEvent}
 */
proto.hiber.event.Event.prototype.getUserRemoved = function() {
  return /** @type{?proto.hiber.event.Event.UserEvent.UserRemovedEvent} */ (
    jspb.Message.getWrapperField(this, proto.hiber.event.Event.UserEvent.UserRemovedEvent, 9));
};


/** @param {?proto.hiber.event.Event.UserEvent.UserRemovedEvent|undefined} value */
proto.hiber.event.Event.prototype.setUserRemoved = function(value) {
  jspb.Message.setOneofWrapperField(this, 9, proto.hiber.event.Event.oneofGroups_[0], value);
};


proto.hiber.event.Event.prototype.clearUserRemoved = function() {
  this.setUserRemoved(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.prototype.hasUserRemoved = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional UserEvent.UserAccessRequestEvent user_access_request = 10;
 * @return {?proto.hiber.event.Event.UserEvent.UserAccessRequestEvent}
 */
proto.hiber.event.Event.prototype.getUserAccessRequest = function() {
  return /** @type{?proto.hiber.event.Event.UserEvent.UserAccessRequestEvent} */ (
    jspb.Message.getWrapperField(this, proto.hiber.event.Event.UserEvent.UserAccessRequestEvent, 10));
};


/** @param {?proto.hiber.event.Event.UserEvent.UserAccessRequestEvent|undefined} value */
proto.hiber.event.Event.prototype.setUserAccessRequest = function(value) {
  jspb.Message.setOneofWrapperField(this, 10, proto.hiber.event.Event.oneofGroups_[0], value);
};


proto.hiber.event.Event.prototype.clearUserAccessRequest = function() {
  this.setUserAccessRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.prototype.hasUserAccessRequest = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional WebhookEvent.CreatedEvent webhook_created = 11;
 * @return {?proto.hiber.event.Event.WebhookEvent.CreatedEvent}
 */
proto.hiber.event.Event.prototype.getWebhookCreated = function() {
  return /** @type{?proto.hiber.event.Event.WebhookEvent.CreatedEvent} */ (
    jspb.Message.getWrapperField(this, proto.hiber.event.Event.WebhookEvent.CreatedEvent, 11));
};


/** @param {?proto.hiber.event.Event.WebhookEvent.CreatedEvent|undefined} value */
proto.hiber.event.Event.prototype.setWebhookCreated = function(value) {
  jspb.Message.setOneofWrapperField(this, 11, proto.hiber.event.Event.oneofGroups_[0], value);
};


proto.hiber.event.Event.prototype.clearWebhookCreated = function() {
  this.setWebhookCreated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.prototype.hasWebhookCreated = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional WebhookEvent.UpdatedEvent webhook_updated = 12;
 * @return {?proto.hiber.event.Event.WebhookEvent.UpdatedEvent}
 */
proto.hiber.event.Event.prototype.getWebhookUpdated = function() {
  return /** @type{?proto.hiber.event.Event.WebhookEvent.UpdatedEvent} */ (
    jspb.Message.getWrapperField(this, proto.hiber.event.Event.WebhookEvent.UpdatedEvent, 12));
};


/** @param {?proto.hiber.event.Event.WebhookEvent.UpdatedEvent|undefined} value */
proto.hiber.event.Event.prototype.setWebhookUpdated = function(value) {
  jspb.Message.setOneofWrapperField(this, 12, proto.hiber.event.Event.oneofGroups_[0], value);
};


proto.hiber.event.Event.prototype.clearWebhookUpdated = function() {
  this.setWebhookUpdated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.prototype.hasWebhookUpdated = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional WebhookEvent.DeletedEvent webhook_deleted = 13;
 * @return {?proto.hiber.event.Event.WebhookEvent.DeletedEvent}
 */
proto.hiber.event.Event.prototype.getWebhookDeleted = function() {
  return /** @type{?proto.hiber.event.Event.WebhookEvent.DeletedEvent} */ (
    jspb.Message.getWrapperField(this, proto.hiber.event.Event.WebhookEvent.DeletedEvent, 13));
};


/** @param {?proto.hiber.event.Event.WebhookEvent.DeletedEvent|undefined} value */
proto.hiber.event.Event.prototype.setWebhookDeleted = function(value) {
  jspb.Message.setOneofWrapperField(this, 13, proto.hiber.event.Event.oneofGroups_[0], value);
};


proto.hiber.event.Event.prototype.clearWebhookDeleted = function() {
  this.setWebhookDeleted(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.prototype.hasWebhookDeleted = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional WebhookEvent.FailedEvent webhook_failed = 14;
 * @return {?proto.hiber.event.Event.WebhookEvent.FailedEvent}
 */
proto.hiber.event.Event.prototype.getWebhookFailed = function() {
  return /** @type{?proto.hiber.event.Event.WebhookEvent.FailedEvent} */ (
    jspb.Message.getWrapperField(this, proto.hiber.event.Event.WebhookEvent.FailedEvent, 14));
};


/** @param {?proto.hiber.event.Event.WebhookEvent.FailedEvent|undefined} value */
proto.hiber.event.Event.prototype.setWebhookFailed = function(value) {
  jspb.Message.setOneofWrapperField(this, 14, proto.hiber.event.Event.oneofGroups_[0], value);
};


proto.hiber.event.Event.prototype.clearWebhookFailed = function() {
  this.setWebhookFailed(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.prototype.hasWebhookFailed = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional ModemTransferEvent.ModemTransferStartedEvent modem_transfer_started = 15;
 * @return {?proto.hiber.event.Event.ModemTransferEvent.ModemTransferStartedEvent}
 */
proto.hiber.event.Event.prototype.getModemTransferStarted = function() {
  return /** @type{?proto.hiber.event.Event.ModemTransferEvent.ModemTransferStartedEvent} */ (
    jspb.Message.getWrapperField(this, proto.hiber.event.Event.ModemTransferEvent.ModemTransferStartedEvent, 15));
};


/** @param {?proto.hiber.event.Event.ModemTransferEvent.ModemTransferStartedEvent|undefined} value */
proto.hiber.event.Event.prototype.setModemTransferStarted = function(value) {
  jspb.Message.setOneofWrapperField(this, 15, proto.hiber.event.Event.oneofGroups_[0], value);
};


proto.hiber.event.Event.prototype.clearModemTransferStarted = function() {
  this.setModemTransferStarted(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.prototype.hasModemTransferStarted = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional ModemTransferEvent.ModemTransferCancelledEvent modem_transfer_cancelled = 16;
 * @return {?proto.hiber.event.Event.ModemTransferEvent.ModemTransferCancelledEvent}
 */
proto.hiber.event.Event.prototype.getModemTransferCancelled = function() {
  return /** @type{?proto.hiber.event.Event.ModemTransferEvent.ModemTransferCancelledEvent} */ (
    jspb.Message.getWrapperField(this, proto.hiber.event.Event.ModemTransferEvent.ModemTransferCancelledEvent, 16));
};


/** @param {?proto.hiber.event.Event.ModemTransferEvent.ModemTransferCancelledEvent|undefined} value */
proto.hiber.event.Event.prototype.setModemTransferCancelled = function(value) {
  jspb.Message.setOneofWrapperField(this, 16, proto.hiber.event.Event.oneofGroups_[0], value);
};


proto.hiber.event.Event.prototype.clearModemTransferCancelled = function() {
  this.setModemTransferCancelled(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.prototype.hasModemTransferCancelled = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional ModemTransferEvent.ModemTransferReceivedEvent modem_transfer_received = 17;
 * @return {?proto.hiber.event.Event.ModemTransferEvent.ModemTransferReceivedEvent}
 */
proto.hiber.event.Event.prototype.getModemTransferReceived = function() {
  return /** @type{?proto.hiber.event.Event.ModemTransferEvent.ModemTransferReceivedEvent} */ (
    jspb.Message.getWrapperField(this, proto.hiber.event.Event.ModemTransferEvent.ModemTransferReceivedEvent, 17));
};


/** @param {?proto.hiber.event.Event.ModemTransferEvent.ModemTransferReceivedEvent|undefined} value */
proto.hiber.event.Event.prototype.setModemTransferReceived = function(value) {
  jspb.Message.setOneofWrapperField(this, 17, proto.hiber.event.Event.oneofGroups_[0], value);
};


proto.hiber.event.Event.prototype.clearModemTransferReceived = function() {
  this.setModemTransferReceived(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.prototype.hasModemTransferReceived = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional ModemTransferEvent.ModemTransferNotReceivedEvent modem_transfer_not_received = 18;
 * @return {?proto.hiber.event.Event.ModemTransferEvent.ModemTransferNotReceivedEvent}
 */
proto.hiber.event.Event.prototype.getModemTransferNotReceived = function() {
  return /** @type{?proto.hiber.event.Event.ModemTransferEvent.ModemTransferNotReceivedEvent} */ (
    jspb.Message.getWrapperField(this, proto.hiber.event.Event.ModemTransferEvent.ModemTransferNotReceivedEvent, 18));
};


/** @param {?proto.hiber.event.Event.ModemTransferEvent.ModemTransferNotReceivedEvent|undefined} value */
proto.hiber.event.Event.prototype.setModemTransferNotReceived = function(value) {
  jspb.Message.setOneofWrapperField(this, 18, proto.hiber.event.Event.oneofGroups_[0], value);
};


proto.hiber.event.Event.prototype.clearModemTransferNotReceived = function() {
  this.setModemTransferNotReceived(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.prototype.hasModemTransferNotReceived = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional ModemTransferEvent.ModemTransferReturnTransferStartedEvent modem_transfer_return_transfer_started = 19;
 * @return {?proto.hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent}
 */
proto.hiber.event.Event.prototype.getModemTransferReturnTransferStarted = function() {
  return /** @type{?proto.hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent} */ (
    jspb.Message.getWrapperField(this, proto.hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent, 19));
};


/** @param {?proto.hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent|undefined} value */
proto.hiber.event.Event.prototype.setModemTransferReturnTransferStarted = function(value) {
  jspb.Message.setOneofWrapperField(this, 19, proto.hiber.event.Event.oneofGroups_[0], value);
};


proto.hiber.event.Event.prototype.clearModemTransferReturnTransferStarted = function() {
  this.setModemTransferReturnTransferStarted(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.prototype.hasModemTransferReturnTransferStarted = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional ModemEvent.ClaimEvent.ModemClaimedEvent modem_claimed_event = 20;
 * @return {?proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimedEvent}
 */
proto.hiber.event.Event.prototype.getModemClaimedEvent = function() {
  return /** @type{?proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimedEvent} */ (
    jspb.Message.getWrapperField(this, proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimedEvent, 20));
};


/** @param {?proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimedEvent|undefined} value */
proto.hiber.event.Event.prototype.setModemClaimedEvent = function(value) {
  jspb.Message.setOneofWrapperField(this, 20, proto.hiber.event.Event.oneofGroups_[0], value);
};


proto.hiber.event.Event.prototype.clearModemClaimedEvent = function() {
  this.setModemClaimedEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.prototype.hasModemClaimedEvent = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional ModemEvent.ClaimEvent.ModemClaimAcceptedEvent modem_claim_accepted_event = 21;
 * @return {?proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimAcceptedEvent}
 */
proto.hiber.event.Event.prototype.getModemClaimAcceptedEvent = function() {
  return /** @type{?proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimAcceptedEvent} */ (
    jspb.Message.getWrapperField(this, proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimAcceptedEvent, 21));
};


/** @param {?proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimAcceptedEvent|undefined} value */
proto.hiber.event.Event.prototype.setModemClaimAcceptedEvent = function(value) {
  jspb.Message.setOneofWrapperField(this, 21, proto.hiber.event.Event.oneofGroups_[0], value);
};


proto.hiber.event.Event.prototype.clearModemClaimAcceptedEvent = function() {
  this.setModemClaimAcceptedEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.prototype.hasModemClaimAcceptedEvent = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional ModemEvent.ClaimEvent.ModemClaimRejectedEvent modem_claim_rejected_event = 22;
 * @return {?proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimRejectedEvent}
 */
proto.hiber.event.Event.prototype.getModemClaimRejectedEvent = function() {
  return /** @type{?proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimRejectedEvent} */ (
    jspb.Message.getWrapperField(this, proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimRejectedEvent, 22));
};


/** @param {?proto.hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimRejectedEvent|undefined} value */
proto.hiber.event.Event.prototype.setModemClaimRejectedEvent = function(value) {
  jspb.Message.setOneofWrapperField(this, 22, proto.hiber.event.Event.oneofGroups_[0], value);
};


proto.hiber.event.Event.prototype.clearModemClaimRejectedEvent = function() {
  this.setModemClaimRejectedEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.Event.prototype.hasModemClaimRejectedEvent = function() {
  return jspb.Message.getField(this, 22) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.event.EventSelection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.event.EventSelection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.event.EventSelection.displayName = 'proto.hiber.event.EventSelection';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.event.EventSelection.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.event.EventSelection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.event.EventSelection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.EventSelection.toObject = function(includeInstance, msg) {
  var f, obj = {
    events: (f = msg.getEvents()) && base_pb.Filter.Events.toObject(includeInstance, f),
    modems: (f = msg.getModems()) && base_pb.Filter.Modems.toObject(includeInstance, f),
    webhooks: (f = msg.getWebhooks()) && base_pb.Filter.Webhooks.toObject(includeInstance, f),
    tags: (f = msg.getTags()) && base_pb.Filter.Tags.toObject(includeInstance, f),
    timeRange: (f = msg.getTimeRange()) && base_pb.TimeRange.toObject(includeInstance, f),
    errorsOnly: jspb.Message.getFieldWithDefault(msg, 7, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.event.EventSelection}
 */
proto.hiber.event.EventSelection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.event.EventSelection;
  return proto.hiber.event.EventSelection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.event.EventSelection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.event.EventSelection}
 */
proto.hiber.event.EventSelection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new base_pb.Filter.Events;
      reader.readMessage(value,base_pb.Filter.Events.deserializeBinaryFromReader);
      msg.setEvents(value);
      break;
    case 2:
      var value = new base_pb.Filter.Modems;
      reader.readMessage(value,base_pb.Filter.Modems.deserializeBinaryFromReader);
      msg.setModems(value);
      break;
    case 3:
      var value = new base_pb.Filter.Webhooks;
      reader.readMessage(value,base_pb.Filter.Webhooks.deserializeBinaryFromReader);
      msg.setWebhooks(value);
      break;
    case 4:
      var value = new base_pb.Filter.Tags;
      reader.readMessage(value,base_pb.Filter.Tags.deserializeBinaryFromReader);
      msg.setTags(value);
      break;
    case 6:
      var value = new base_pb.TimeRange;
      reader.readMessage(value,base_pb.TimeRange.deserializeBinaryFromReader);
      msg.setTimeRange(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setErrorsOnly(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.event.EventSelection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.event.EventSelection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.event.EventSelection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.EventSelection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEvents();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      base_pb.Filter.Events.serializeBinaryToWriter
    );
  }
  f = message.getModems();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      base_pb.Filter.Modems.serializeBinaryToWriter
    );
  }
  f = message.getWebhooks();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      base_pb.Filter.Webhooks.serializeBinaryToWriter
    );
  }
  f = message.getTags();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      base_pb.Filter.Tags.serializeBinaryToWriter
    );
  }
  f = message.getTimeRange();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      base_pb.TimeRange.serializeBinaryToWriter
    );
  }
  f = message.getErrorsOnly();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * optional hiber.Filter.Events events = 1;
 * @return {?proto.hiber.Filter.Events}
 */
proto.hiber.event.EventSelection.prototype.getEvents = function() {
  return /** @type{?proto.hiber.Filter.Events} */ (
    jspb.Message.getWrapperField(this, base_pb.Filter.Events, 1));
};


/** @param {?proto.hiber.Filter.Events|undefined} value */
proto.hiber.event.EventSelection.prototype.setEvents = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.hiber.event.EventSelection.prototype.clearEvents = function() {
  this.setEvents(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.EventSelection.prototype.hasEvents = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional hiber.Filter.Modems modems = 2;
 * @return {?proto.hiber.Filter.Modems}
 */
proto.hiber.event.EventSelection.prototype.getModems = function() {
  return /** @type{?proto.hiber.Filter.Modems} */ (
    jspb.Message.getWrapperField(this, base_pb.Filter.Modems, 2));
};


/** @param {?proto.hiber.Filter.Modems|undefined} value */
proto.hiber.event.EventSelection.prototype.setModems = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.event.EventSelection.prototype.clearModems = function() {
  this.setModems(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.EventSelection.prototype.hasModems = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional hiber.Filter.Webhooks webhooks = 3;
 * @return {?proto.hiber.Filter.Webhooks}
 */
proto.hiber.event.EventSelection.prototype.getWebhooks = function() {
  return /** @type{?proto.hiber.Filter.Webhooks} */ (
    jspb.Message.getWrapperField(this, base_pb.Filter.Webhooks, 3));
};


/** @param {?proto.hiber.Filter.Webhooks|undefined} value */
proto.hiber.event.EventSelection.prototype.setWebhooks = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.event.EventSelection.prototype.clearWebhooks = function() {
  this.setWebhooks(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.EventSelection.prototype.hasWebhooks = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional hiber.Filter.Tags tags = 4;
 * @return {?proto.hiber.Filter.Tags}
 */
proto.hiber.event.EventSelection.prototype.getTags = function() {
  return /** @type{?proto.hiber.Filter.Tags} */ (
    jspb.Message.getWrapperField(this, base_pb.Filter.Tags, 4));
};


/** @param {?proto.hiber.Filter.Tags|undefined} value */
proto.hiber.event.EventSelection.prototype.setTags = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.hiber.event.EventSelection.prototype.clearTags = function() {
  this.setTags(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.EventSelection.prototype.hasTags = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional hiber.TimeRange time_range = 6;
 * @return {?proto.hiber.TimeRange}
 */
proto.hiber.event.EventSelection.prototype.getTimeRange = function() {
  return /** @type{?proto.hiber.TimeRange} */ (
    jspb.Message.getWrapperField(this, base_pb.TimeRange, 6));
};


/** @param {?proto.hiber.TimeRange|undefined} value */
proto.hiber.event.EventSelection.prototype.setTimeRange = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.hiber.event.EventSelection.prototype.clearTimeRange = function() {
  this.setTimeRange(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.EventSelection.prototype.hasTimeRange = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool errors_only = 7;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.hiber.event.EventSelection.prototype.getErrorsOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 7, false));
};


/** @param {boolean} value */
proto.hiber.event.EventSelection.prototype.setErrorsOnly = function(value) {
  jspb.Message.setField(this, 7, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.event.ListEventsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.event.ListEventsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.event.ListEventsRequest.displayName = 'proto.hiber.event.ListEventsRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.event.ListEventsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.event.ListEventsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.event.ListEventsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.ListEventsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: jspb.Message.getFieldWithDefault(msg, 1, ""),
    selection: (f = msg.getSelection()) && proto.hiber.event.EventSelection.toObject(includeInstance, f),
    pagination: (f = msg.getPagination()) && base_pb.Pagination.toObject(includeInstance, f),
    sort: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.event.ListEventsRequest}
 */
proto.hiber.event.ListEventsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.event.ListEventsRequest;
  return proto.hiber.event.ListEventsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.event.ListEventsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.event.ListEventsRequest}
 */
proto.hiber.event.ListEventsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 2:
      var value = new proto.hiber.event.EventSelection;
      reader.readMessage(value,proto.hiber.event.EventSelection.deserializeBinaryFromReader);
      msg.setSelection(value);
      break;
    case 3:
      var value = new base_pb.Pagination;
      reader.readMessage(value,base_pb.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    case 4:
      var value = /** @type {!proto.hiber.event.ListEventsRequest.Sort} */ (reader.readEnum());
      msg.setSort(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.event.ListEventsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.event.ListEventsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.event.ListEventsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.ListEventsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSelection();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.hiber.event.EventSelection.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      base_pb.Pagination.serializeBinaryToWriter
    );
  }
  f = message.getSort();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.hiber.event.ListEventsRequest.Sort = {
  TIME: 0,
  TIME_INVERTED: 1,
  MODEM_NUMBER_ASC: 2,
  MODEM_NUMBER_DESC: 3,
  MODEM_NUMBER_SPECIFIED: 4
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.event.ListEventsRequest.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hiber.event.ListEventsRequest.Response.repeatedFields_, null);
};
goog.inherits(proto.hiber.event.ListEventsRequest.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.event.ListEventsRequest.Response.displayName = 'proto.hiber.event.ListEventsRequest.Response';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hiber.event.ListEventsRequest.Response.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.event.ListEventsRequest.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.event.ListEventsRequest.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.event.ListEventsRequest.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.ListEventsRequest.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    eventsList: jspb.Message.toObjectList(msg.getEventsList(),
    proto.hiber.event.Event.toObject, includeInstance),
    request: (f = msg.getRequest()) && proto.hiber.event.ListEventsRequest.toObject(includeInstance, f),
    pagination: (f = msg.getPagination()) && base_pb.Pagination.Result.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.event.ListEventsRequest.Response}
 */
proto.hiber.event.ListEventsRequest.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.event.ListEventsRequest.Response;
  return proto.hiber.event.ListEventsRequest.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.event.ListEventsRequest.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.event.ListEventsRequest.Response}
 */
proto.hiber.event.ListEventsRequest.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.hiber.event.Event;
      reader.readMessage(value,proto.hiber.event.Event.deserializeBinaryFromReader);
      msg.addEvents(value);
      break;
    case 2:
      var value = new proto.hiber.event.ListEventsRequest;
      reader.readMessage(value,proto.hiber.event.ListEventsRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    case 3:
      var value = new base_pb.Pagination.Result;
      reader.readMessage(value,base_pb.Pagination.Result.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.event.ListEventsRequest.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.event.ListEventsRequest.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.event.ListEventsRequest.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.ListEventsRequest.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.hiber.event.Event.serializeBinaryToWriter
    );
  }
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.hiber.event.ListEventsRequest.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      base_pb.Pagination.Result.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Event events = 1;
 * @return {!Array.<!proto.hiber.event.Event>}
 */
proto.hiber.event.ListEventsRequest.Response.prototype.getEventsList = function() {
  return /** @type{!Array.<!proto.hiber.event.Event>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.hiber.event.Event, 1));
};


/** @param {!Array.<!proto.hiber.event.Event>} value */
proto.hiber.event.ListEventsRequest.Response.prototype.setEventsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.hiber.event.Event=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hiber.event.Event}
 */
proto.hiber.event.ListEventsRequest.Response.prototype.addEvents = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.hiber.event.Event, opt_index);
};


proto.hiber.event.ListEventsRequest.Response.prototype.clearEventsList = function() {
  this.setEventsList([]);
};


/**
 * optional ListEventsRequest request = 2;
 * @return {?proto.hiber.event.ListEventsRequest}
 */
proto.hiber.event.ListEventsRequest.Response.prototype.getRequest = function() {
  return /** @type{?proto.hiber.event.ListEventsRequest} */ (
    jspb.Message.getWrapperField(this, proto.hiber.event.ListEventsRequest, 2));
};


/** @param {?proto.hiber.event.ListEventsRequest|undefined} value */
proto.hiber.event.ListEventsRequest.Response.prototype.setRequest = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.event.ListEventsRequest.Response.prototype.clearRequest = function() {
  this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.ListEventsRequest.Response.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional hiber.Pagination.Result pagination = 3;
 * @return {?proto.hiber.Pagination.Result}
 */
proto.hiber.event.ListEventsRequest.Response.prototype.getPagination = function() {
  return /** @type{?proto.hiber.Pagination.Result} */ (
    jspb.Message.getWrapperField(this, base_pb.Pagination.Result, 3));
};


/** @param {?proto.hiber.Pagination.Result|undefined} value */
proto.hiber.event.ListEventsRequest.Response.prototype.setPagination = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.event.ListEventsRequest.Response.prototype.clearPagination = function() {
  this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.ListEventsRequest.Response.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string organization = 1;
 * @return {string}
 */
proto.hiber.event.ListEventsRequest.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.event.ListEventsRequest.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional EventSelection selection = 2;
 * @return {?proto.hiber.event.EventSelection}
 */
proto.hiber.event.ListEventsRequest.prototype.getSelection = function() {
  return /** @type{?proto.hiber.event.EventSelection} */ (
    jspb.Message.getWrapperField(this, proto.hiber.event.EventSelection, 2));
};


/** @param {?proto.hiber.event.EventSelection|undefined} value */
proto.hiber.event.ListEventsRequest.prototype.setSelection = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.event.ListEventsRequest.prototype.clearSelection = function() {
  this.setSelection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.ListEventsRequest.prototype.hasSelection = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional hiber.Pagination pagination = 3;
 * @return {?proto.hiber.Pagination}
 */
proto.hiber.event.ListEventsRequest.prototype.getPagination = function() {
  return /** @type{?proto.hiber.Pagination} */ (
    jspb.Message.getWrapperField(this, base_pb.Pagination, 3));
};


/** @param {?proto.hiber.Pagination|undefined} value */
proto.hiber.event.ListEventsRequest.prototype.setPagination = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.hiber.event.ListEventsRequest.prototype.clearPagination = function() {
  this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.ListEventsRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Sort sort = 4;
 * @return {!proto.hiber.event.ListEventsRequest.Sort}
 */
proto.hiber.event.ListEventsRequest.prototype.getSort = function() {
  return /** @type {!proto.hiber.event.ListEventsRequest.Sort} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {!proto.hiber.event.ListEventsRequest.Sort} value */
proto.hiber.event.ListEventsRequest.prototype.setSort = function(value) {
  jspb.Message.setField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hiber.event.EventStreamRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hiber.event.EventStreamRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.hiber.event.EventStreamRequest.displayName = 'proto.hiber.event.EventStreamRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hiber.event.EventStreamRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hiber.event.EventStreamRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hiber.event.EventStreamRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.EventStreamRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: jspb.Message.getFieldWithDefault(msg, 1, ""),
    selection: (f = msg.getSelection()) && proto.hiber.event.EventSelection.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hiber.event.EventStreamRequest}
 */
proto.hiber.event.EventStreamRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hiber.event.EventStreamRequest;
  return proto.hiber.event.EventStreamRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hiber.event.EventStreamRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hiber.event.EventStreamRequest}
 */
proto.hiber.event.EventStreamRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 2:
      var value = new proto.hiber.event.EventSelection;
      reader.readMessage(value,proto.hiber.event.EventSelection.deserializeBinaryFromReader);
      msg.setSelection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hiber.event.EventStreamRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hiber.event.EventStreamRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hiber.event.EventStreamRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hiber.event.EventStreamRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSelection();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.hiber.event.EventSelection.serializeBinaryToWriter
    );
  }
};


/**
 * optional string organization = 1;
 * @return {string}
 */
proto.hiber.event.EventStreamRequest.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.hiber.event.EventStreamRequest.prototype.setOrganization = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional EventSelection selection = 2;
 * @return {?proto.hiber.event.EventSelection}
 */
proto.hiber.event.EventStreamRequest.prototype.getSelection = function() {
  return /** @type{?proto.hiber.event.EventSelection} */ (
    jspb.Message.getWrapperField(this, proto.hiber.event.EventSelection, 2));
};


/** @param {?proto.hiber.event.EventSelection|undefined} value */
proto.hiber.event.EventStreamRequest.prototype.setSelection = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.hiber.event.EventStreamRequest.prototype.clearSelection = function() {
  this.setSelection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.hiber.event.EventStreamRequest.prototype.hasSelection = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.hiber.event);
