# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import modem_claim_pb2 as modem__claim__pb2


class ModemClaimServiceStub(object):
  """Claim a modem that you have received, but was not marked as inbound for you.
  This process requires approval from the previous owner and, as such, will not be instantaneous.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Claim = channel.unary_unary(
        '/hiber.modem.ModemClaimService/Claim',
        request_serializer=modem__claim__pb2.ClaimModemRequest.SerializeToString,
        response_deserializer=modem__claim__pb2.ClaimModemRequest.Response.FromString,
        )
    self.ListClaims = channel.unary_unary(
        '/hiber.modem.ModemClaimService/ListClaims',
        request_serializer=modem__claim__pb2.ListModemClaimsRequest.SerializeToString,
        response_deserializer=modem__claim__pb2.ListModemClaimsRequest.Response.FromString,
        )
    self.AcceptClaims = channel.unary_unary(
        '/hiber.modem.ModemClaimService/AcceptClaims',
        request_serializer=modem__claim__pb2.AcceptModemClaimsRequest.SerializeToString,
        response_deserializer=modem__claim__pb2.AcceptModemClaimsRequest.Response.FromString,
        )
    self.RejectClaims = channel.unary_unary(
        '/hiber.modem.ModemClaimService/RejectClaims',
        request_serializer=modem__claim__pb2.RejectModemClaimsRequest.SerializeToString,
        response_deserializer=modem__claim__pb2.RejectModemClaimsRequest.Response.FromString,
        )


class ModemClaimServiceServicer(object):
  """Claim a modem that you have received, but was not marked as inbound for you.
  This process requires approval from the previous owner and, as such, will not be instantaneous.
  """

  def Claim(self, request, context):
    """Add a claim for a number of modems 
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListClaims(self, request, context):
    """List your claims on modems 

    List your modems that have been claimed by another organization 
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AcceptClaims(self, request, context):
    """Accept a claim on a selection of your modems 
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RejectClaims(self, request, context):
    """Reject a claim on a selection of your modems 
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ModemClaimServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Claim': grpc.unary_unary_rpc_method_handler(
          servicer.Claim,
          request_deserializer=modem__claim__pb2.ClaimModemRequest.FromString,
          response_serializer=modem__claim__pb2.ClaimModemRequest.Response.SerializeToString,
      ),
      'ListClaims': grpc.unary_unary_rpc_method_handler(
          servicer.ListClaims,
          request_deserializer=modem__claim__pb2.ListModemClaimsRequest.FromString,
          response_serializer=modem__claim__pb2.ListModemClaimsRequest.Response.SerializeToString,
      ),
      'AcceptClaims': grpc.unary_unary_rpc_method_handler(
          servicer.AcceptClaims,
          request_deserializer=modem__claim__pb2.AcceptModemClaimsRequest.FromString,
          response_serializer=modem__claim__pb2.AcceptModemClaimsRequest.Response.SerializeToString,
      ),
      'RejectClaims': grpc.unary_unary_rpc_method_handler(
          servicer.RejectClaims,
          request_deserializer=modem__claim__pb2.RejectModemClaimsRequest.FromString,
          response_serializer=modem__claim__pb2.RejectModemClaimsRequest.Response.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'hiber.modem.ModemClaimService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
