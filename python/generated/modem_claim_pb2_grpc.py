# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import modem_claim_pb2 as modem__claim__pb2


class ModemClaimServiceStub(object):
  """Claim a modem that you have in your pocession, but was not marked as inbound for you.
  This is only possible for a modem that has not been activated.
  This process is instantaneous, but the previous owner can reject the claim afterwards.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Claim = channel.unary_unary(
        '/hiber.modem.ModemClaimService/Claim',
        request_serializer=modem__claim__pb2.ClaimModemRequest.SerializeToString,
        response_deserializer=modem__claim__pb2.ClaimModemRequest.Response.FromString,
        )
    self.ListClaims = channel.unary_unary(
        '/hiber.modem.ModemClaimService/ListClaims',
        request_serializer=modem__claim__pb2.ListModemClaimsRequest.SerializeToString,
        response_deserializer=modem__claim__pb2.ListModemClaimsRequest.Response.FromString,
        )


class ModemClaimServiceServicer(object):
  """Claim a modem that you have in your pocession, but was not marked as inbound for you.
  This is only possible for a modem that has not been activated.
  This process is instantaneous, but the previous owner can reject the claim afterwards.
  """

  def Claim(self, request, context):
    """Claim a number of modems. 
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListClaims(self, request, context):
    """List modems that have been claimed. They are no longer part if your organization. 
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ModemClaimServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Claim': grpc.unary_unary_rpc_method_handler(
          servicer.Claim,
          request_deserializer=modem__claim__pb2.ClaimModemRequest.FromString,
          response_serializer=modem__claim__pb2.ClaimModemRequest.Response.SerializeToString,
      ),
      'ListClaims': grpc.unary_unary_rpc_method_handler(
          servicer.ListClaims,
          request_deserializer=modem__claim__pb2.ListModemClaimsRequest.FromString,
          response_serializer=modem__claim__pb2.ListModemClaimsRequest.Response.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'hiber.modem.ModemClaimService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
