# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import integration_mqtt_pb2 as integration__mqtt__pb2


class MQTTServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.List = channel.unary_unary(
        '/hiber.integration.mqtt.MQTTService/List',
        request_serializer=integration__mqtt__pb2.ListMQTTPublishersRequest.SerializeToString,
        response_deserializer=integration__mqtt__pb2.ListMQTTPublishersRequest.Response.FromString,
        )
    self.Create = channel.unary_unary(
        '/hiber.integration.mqtt.MQTTService/Create',
        request_serializer=integration__mqtt__pb2.CreateMQTTPublisherRequest.SerializeToString,
        response_deserializer=integration__mqtt__pb2.MQTTPublisher.FromString,
        )
    self.Update = channel.unary_unary(
        '/hiber.integration.mqtt.MQTTService/Update',
        request_serializer=integration__mqtt__pb2.UpdateMQTTPublisherRequest.SerializeToString,
        response_deserializer=integration__mqtt__pb2.MQTTPublisher.FromString,
        )
    self.UpdateTags = channel.unary_unary(
        '/hiber.integration.mqtt.MQTTService/UpdateTags',
        request_serializer=integration__mqtt__pb2.UpdateMQTTPublisherTagsRequest.SerializeToString,
        response_deserializer=integration__mqtt__pb2.UpdateMQTTPublisherTagsRequest.Response.FromString,
        )
    self.Enable = channel.unary_unary(
        '/hiber.integration.mqtt.MQTTService/Enable',
        request_serializer=integration__mqtt__pb2.EnableMQTTPublisherRequest.SerializeToString,
        response_deserializer=integration__mqtt__pb2.EnableMQTTPublisherRequest.Response.FromString,
        )
    self.Disable = channel.unary_unary(
        '/hiber.integration.mqtt.MQTTService/Disable',
        request_serializer=integration__mqtt__pb2.DisableMQTTPublisherRequest.SerializeToString,
        response_deserializer=integration__mqtt__pb2.DisableMQTTPublisherRequest.Response.FromString,
        )
    self.Delete = channel.unary_unary(
        '/hiber.integration.mqtt.MQTTService/Delete',
        request_serializer=integration__mqtt__pb2.DeleteMQTTPublisherRequest.SerializeToString,
        response_deserializer=integration__mqtt__pb2.DeleteMQTTPublisherRequest.Response.FromString,
        )
    self.History = channel.unary_unary(
        '/hiber.integration.mqtt.MQTTService/History',
        request_serializer=integration__mqtt__pb2.MQTTPublisherHistoryRequest.SerializeToString,
        response_deserializer=integration__mqtt__pb2.MQTTPublisherHistoryRequest.Response.FromString,
        )


class MQTTServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def List(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Create(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Update(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpdateTags(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Enable(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Disable(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Delete(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def History(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MQTTServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'List': grpc.unary_unary_rpc_method_handler(
          servicer.List,
          request_deserializer=integration__mqtt__pb2.ListMQTTPublishersRequest.FromString,
          response_serializer=integration__mqtt__pb2.ListMQTTPublishersRequest.Response.SerializeToString,
      ),
      'Create': grpc.unary_unary_rpc_method_handler(
          servicer.Create,
          request_deserializer=integration__mqtt__pb2.CreateMQTTPublisherRequest.FromString,
          response_serializer=integration__mqtt__pb2.MQTTPublisher.SerializeToString,
      ),
      'Update': grpc.unary_unary_rpc_method_handler(
          servicer.Update,
          request_deserializer=integration__mqtt__pb2.UpdateMQTTPublisherRequest.FromString,
          response_serializer=integration__mqtt__pb2.MQTTPublisher.SerializeToString,
      ),
      'UpdateTags': grpc.unary_unary_rpc_method_handler(
          servicer.UpdateTags,
          request_deserializer=integration__mqtt__pb2.UpdateMQTTPublisherTagsRequest.FromString,
          response_serializer=integration__mqtt__pb2.UpdateMQTTPublisherTagsRequest.Response.SerializeToString,
      ),
      'Enable': grpc.unary_unary_rpc_method_handler(
          servicer.Enable,
          request_deserializer=integration__mqtt__pb2.EnableMQTTPublisherRequest.FromString,
          response_serializer=integration__mqtt__pb2.EnableMQTTPublisherRequest.Response.SerializeToString,
      ),
      'Disable': grpc.unary_unary_rpc_method_handler(
          servicer.Disable,
          request_deserializer=integration__mqtt__pb2.DisableMQTTPublisherRequest.FromString,
          response_serializer=integration__mqtt__pb2.DisableMQTTPublisherRequest.Response.SerializeToString,
      ),
      'Delete': grpc.unary_unary_rpc_method_handler(
          servicer.Delete,
          request_deserializer=integration__mqtt__pb2.DeleteMQTTPublisherRequest.FromString,
          response_serializer=integration__mqtt__pb2.DeleteMQTTPublisherRequest.Response.SerializeToString,
      ),
      'History': grpc.unary_unary_rpc_method_handler(
          servicer.History,
          request_deserializer=integration__mqtt__pb2.MQTTPublisherHistoryRequest.FromString,
          response_serializer=integration__mqtt__pb2.MQTTPublisherHistoryRequest.Response.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'hiber.integration.mqtt.MQTTService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
