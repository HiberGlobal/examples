# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import status_pb2 as status__pb2


class StatusServiceStub(object):
  """Service to get the status of the hiber network
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Status = channel.unary_unary(
        '/hiber.status.StatusService/Status',
        request_serializer=status__pb2.StatusRequest.SerializeToString,
        response_deserializer=status__pb2.StatusRequest.Response.FromString,
        )


class StatusServiceServicer(object):
  """Service to get the status of the hiber network
  """

  def Status(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_StatusServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Status': grpc.unary_unary_rpc_method_handler(
          servicer.Status,
          request_deserializer=status__pb2.StatusRequest.FromString,
          response_serializer=status__pb2.StatusRequest.Response.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'hiber.status.StatusService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
