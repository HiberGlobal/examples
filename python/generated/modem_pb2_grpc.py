# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import modem_pb2 as modem__pb2


class ModemServiceStub(object):
  """The core of the Hiber system, modems are the network nodes that send information and user data.
  This service contains calls to list and manage them, as well as list their messages.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.List = channel.unary_unary(
        '/hiber.modem.ModemService/List',
        request_serializer=modem__pb2.ListRequest.SerializeToString,
        response_deserializer=modem__pb2.ListRequest.Response.FromString,
        )
    self.Get = channel.unary_unary(
        '/hiber.modem.ModemService/Get',
        request_serializer=modem__pb2.GetRequest.SerializeToString,
        response_deserializer=modem__pb2.Modem.FromString,
        )
    self.Messages = channel.unary_unary(
        '/hiber.modem.ModemService/Messages',
        request_serializer=modem__pb2.MessagesRequest.SerializeToString,
        response_deserializer=modem__pb2.MessagesRequest.Response.FromString,
        )
    self.MessageCount = channel.unary_unary(
        '/hiber.modem.ModemService/MessageCount',
        request_serializer=modem__pb2.MessageCountRequest.SerializeToString,
        response_deserializer=modem__pb2.MessageCountRequest.Response.FromString,
        )
    self.Rename = channel.unary_unary(
        '/hiber.modem.ModemService/Rename',
        request_serializer=modem__pb2.RenameRequest.SerializeToString,
        response_deserializer=modem__pb2.Modem.FromString,
        )
    self.UpdatePayloadTemplate = channel.unary_unary(
        '/hiber.modem.ModemService/UpdatePayloadTemplate',
        request_serializer=modem__pb2.UpdatePayloadTemplateRequest.SerializeToString,
        response_deserializer=modem__pb2.Modem.FromString,
        )
    self.UpdateTags = channel.unary_unary(
        '/hiber.modem.ModemService/UpdateTags',
        request_serializer=modem__pb2.UpdateTagsRequest.SerializeToString,
        response_deserializer=modem__pb2.UpdateTagsRequest.Response.FromString,
        )


class ModemServiceServicer(object):
  """The core of the Hiber system, modems are the network nodes that send information and user data.
  This service contains calls to list and manage them, as well as list their messages.
  """

  def List(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Get(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Messages(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def MessageCount(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Rename(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpdatePayloadTemplate(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpdateTags(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ModemServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'List': grpc.unary_unary_rpc_method_handler(
          servicer.List,
          request_deserializer=modem__pb2.ListRequest.FromString,
          response_serializer=modem__pb2.ListRequest.Response.SerializeToString,
      ),
      'Get': grpc.unary_unary_rpc_method_handler(
          servicer.Get,
          request_deserializer=modem__pb2.GetRequest.FromString,
          response_serializer=modem__pb2.Modem.SerializeToString,
      ),
      'Messages': grpc.unary_unary_rpc_method_handler(
          servicer.Messages,
          request_deserializer=modem__pb2.MessagesRequest.FromString,
          response_serializer=modem__pb2.MessagesRequest.Response.SerializeToString,
      ),
      'MessageCount': grpc.unary_unary_rpc_method_handler(
          servicer.MessageCount,
          request_deserializer=modem__pb2.MessageCountRequest.FromString,
          response_serializer=modem__pb2.MessageCountRequest.Response.SerializeToString,
      ),
      'Rename': grpc.unary_unary_rpc_method_handler(
          servicer.Rename,
          request_deserializer=modem__pb2.RenameRequest.FromString,
          response_serializer=modem__pb2.Modem.SerializeToString,
      ),
      'UpdatePayloadTemplate': grpc.unary_unary_rpc_method_handler(
          servicer.UpdatePayloadTemplate,
          request_deserializer=modem__pb2.UpdatePayloadTemplateRequest.FromString,
          response_serializer=modem__pb2.Modem.SerializeToString,
      ),
      'UpdateTags': grpc.unary_unary_rpc_method_handler(
          servicer.UpdateTags,
          request_deserializer=modem__pb2.UpdateTagsRequest.FromString,
          response_serializer=modem__pb2.UpdateTagsRequest.Response.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'hiber.modem.ModemService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
