# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import testing_pb2 as testing__pb2


class TestingServiceStub(object):
  """Method to test the system in different ways, meant for customer access. For example, you can use this to test
  whether everything works from message to webhook call, and further in your own system.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.PushModemMessages = channel.unary_unary(
        '/hiber.testing.TestingService/PushModemMessages',
        request_serializer=testing__pb2.PushModemMessagesRequest.SerializeToString,
        response_deserializer=testing__pb2.PushModemMessagesRequest.Response.FromString,
        )
    self.PushModemMessagesFromDebugPort = channel.unary_unary(
        '/hiber.testing.TestingService/PushModemMessagesFromDebugPort',
        request_serializer=testing__pb2.PushModemMessagesFromDebugPortRequest.SerializeToString,
        response_deserializer=testing__pb2.PushModemMessagesFromDebugPortRequest.Response.FromString,
        )


class TestingServiceServicer(object):
  """Method to test the system in different ways, meant for customer access. For example, you can use this to test
  whether everything works from message to webhook call, and further in your own system.
  """

  def PushModemMessages(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def PushModemMessagesFromDebugPort(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_TestingServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'PushModemMessages': grpc.unary_unary_rpc_method_handler(
          servicer.PushModemMessages,
          request_deserializer=testing__pb2.PushModemMessagesRequest.FromString,
          response_serializer=testing__pb2.PushModemMessagesRequest.Response.SerializeToString,
      ),
      'PushModemMessagesFromDebugPort': grpc.unary_unary_rpc_method_handler(
          servicer.PushModemMessagesFromDebugPort,
          request_deserializer=testing__pb2.PushModemMessagesFromDebugPortRequest.FromString,
          response_serializer=testing__pb2.PushModemMessagesFromDebugPortRequest.Response.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'hiber.testing.TestingService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
