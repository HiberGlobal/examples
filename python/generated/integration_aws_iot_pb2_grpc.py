# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import integration_aws_iot_pb2 as integration__aws__iot__pb2


class AWSIoTServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Initialize = channel.unary_unary(
        '/hiber.integration.awsiot.AWSIoTService/Initialize',
        request_serializer=integration__aws__iot__pb2.InitializeAWSIoTIntegrationRequest.SerializeToString,
        response_deserializer=integration__aws__iot__pb2.InitializeAWSIoTIntegrationRequest.Response.FromString,
        )
    self.Configuration = channel.unary_unary(
        '/hiber.integration.awsiot.AWSIoTService/Configuration',
        request_serializer=integration__aws__iot__pb2.AWSIoTIntegrationConfigurationRequest.SerializeToString,
        response_deserializer=integration__aws__iot__pb2.AWSIoTIntegrationConfigurationRequest.Response.FromString,
        )
    self.Enable = channel.unary_unary(
        '/hiber.integration.awsiot.AWSIoTService/Enable',
        request_serializer=integration__aws__iot__pb2.EnableAWSIoTIntegrationRequest.SerializeToString,
        response_deserializer=integration__aws__iot__pb2.EnableAWSIoTIntegrationRequest.Response.FromString,
        )
    self.Disable = channel.unary_unary(
        '/hiber.integration.awsiot.AWSIoTService/Disable',
        request_serializer=integration__aws__iot__pb2.DisableAWSIoTIntegrationRequest.SerializeToString,
        response_deserializer=integration__aws__iot__pb2.DisableAWSIoTIntegrationRequest.Response.FromString,
        )
    self.UpdateConfiguration = channel.unary_unary(
        '/hiber.integration.awsiot.AWSIoTService/UpdateConfiguration',
        request_serializer=integration__aws__iot__pb2.UpdateAWSIoTIntegrationConfigurationRequest.SerializeToString,
        response_deserializer=integration__aws__iot__pb2.UpdateAWSIoTIntegrationConfigurationRequest.Response.FromString,
        )


class AWSIoTServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Initialize(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Configuration(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Enable(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Disable(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpdateConfiguration(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_AWSIoTServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Initialize': grpc.unary_unary_rpc_method_handler(
          servicer.Initialize,
          request_deserializer=integration__aws__iot__pb2.InitializeAWSIoTIntegrationRequest.FromString,
          response_serializer=integration__aws__iot__pb2.InitializeAWSIoTIntegrationRequest.Response.SerializeToString,
      ),
      'Configuration': grpc.unary_unary_rpc_method_handler(
          servicer.Configuration,
          request_deserializer=integration__aws__iot__pb2.AWSIoTIntegrationConfigurationRequest.FromString,
          response_serializer=integration__aws__iot__pb2.AWSIoTIntegrationConfigurationRequest.Response.SerializeToString,
      ),
      'Enable': grpc.unary_unary_rpc_method_handler(
          servicer.Enable,
          request_deserializer=integration__aws__iot__pb2.EnableAWSIoTIntegrationRequest.FromString,
          response_serializer=integration__aws__iot__pb2.EnableAWSIoTIntegrationRequest.Response.SerializeToString,
      ),
      'Disable': grpc.unary_unary_rpc_method_handler(
          servicer.Disable,
          request_deserializer=integration__aws__iot__pb2.DisableAWSIoTIntegrationRequest.FromString,
          response_serializer=integration__aws__iot__pb2.DisableAWSIoTIntegrationRequest.Response.SerializeToString,
      ),
      'UpdateConfiguration': grpc.unary_unary_rpc_method_handler(
          servicer.UpdateConfiguration,
          request_deserializer=integration__aws__iot__pb2.UpdateAWSIoTIntegrationConfigurationRequest.FromString,
          response_serializer=integration__aws__iot__pb2.UpdateAWSIoTIntegrationConfigurationRequest.Response.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'hiber.integration.awsiot.AWSIoTService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
