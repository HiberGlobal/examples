// Code generated by protoc-gen-go.
// source: currentuser.proto
// DO NOT EDIT!

package hiber

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type CurrentUser_Settings_Layout int32

const (
	CurrentUser_Settings_DEFAULT_LAYOUT CurrentUser_Settings_Layout = 0
	CurrentUser_Settings_LANDSCAPE      CurrentUser_Settings_Layout = 1
	CurrentUser_Settings_PORTRAIT       CurrentUser_Settings_Layout = 2
)

var CurrentUser_Settings_Layout_name = map[int32]string{
	0: "DEFAULT_LAYOUT",
	1: "LANDSCAPE",
	2: "PORTRAIT",
}
var CurrentUser_Settings_Layout_value = map[string]int32{
	"DEFAULT_LAYOUT": 0,
	"LANDSCAPE":      1,
	"PORTRAIT":       2,
}

func (x CurrentUser_Settings_Layout) String() string {
	return proto.EnumName(CurrentUser_Settings_Layout_name, int32(x))
}
func (CurrentUser_Settings_Layout) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor2, []int{0, 0, 0}
}

type CurrentUser_Settings_MapStyle int32

const (
	CurrentUser_Settings_DEFAULT_MAP_STYLE CurrentUser_Settings_MapStyle = 0
	CurrentUser_Settings_SATELLITE         CurrentUser_Settings_MapStyle = 1
	CurrentUser_Settings_HIBER_VISION      CurrentUser_Settings_MapStyle = 2
	CurrentUser_Settings_CLASSIC           CurrentUser_Settings_MapStyle = 3
)

var CurrentUser_Settings_MapStyle_name = map[int32]string{
	0: "DEFAULT_MAP_STYLE",
	1: "SATELLITE",
	2: "HIBER_VISION",
	3: "CLASSIC",
}
var CurrentUser_Settings_MapStyle_value = map[string]int32{
	"DEFAULT_MAP_STYLE": 0,
	"SATELLITE":         1,
	"HIBER_VISION":      2,
	"CLASSIC":           3,
}

func (x CurrentUser_Settings_MapStyle) String() string {
	return proto.EnumName(CurrentUser_Settings_MapStyle_name, int32(x))
}
func (CurrentUser_Settings_MapStyle) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor2, []int{0, 0, 1}
}

type CurrentUser_Settings_TimeFormat int32

const (
	CurrentUser_Settings_DEFAULT_TIME_FORMAT CurrentUser_Settings_TimeFormat = 0
	CurrentUser_Settings_TWENTYFOUR_HOUR     CurrentUser_Settings_TimeFormat = 1
	CurrentUser_Settings_TWELVE_HOUR         CurrentUser_Settings_TimeFormat = 2
)

var CurrentUser_Settings_TimeFormat_name = map[int32]string{
	0: "DEFAULT_TIME_FORMAT",
	1: "TWENTYFOUR_HOUR",
	2: "TWELVE_HOUR",
}
var CurrentUser_Settings_TimeFormat_value = map[string]int32{
	"DEFAULT_TIME_FORMAT": 0,
	"TWENTYFOUR_HOUR":     1,
	"TWELVE_HOUR":         2,
}

func (x CurrentUser_Settings_TimeFormat) String() string {
	return proto.EnumName(CurrentUser_Settings_TimeFormat_name, int32(x))
}
func (CurrentUser_Settings_TimeFormat) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor2, []int{0, 0, 2}
}

type CurrentUser_Settings_DateFormat int32

const (
	CurrentUser_Settings_DEFAULT_DATE_FORMAT CurrentUser_Settings_DateFormat = 0
	CurrentUser_Settings_DD_MM_YYYY          CurrentUser_Settings_DateFormat = 1
	CurrentUser_Settings_MM_DD_YYYY          CurrentUser_Settings_DateFormat = 2
	CurrentUser_Settings_YYYY_MM_DD          CurrentUser_Settings_DateFormat = 3
)

var CurrentUser_Settings_DateFormat_name = map[int32]string{
	0: "DEFAULT_DATE_FORMAT",
	1: "DD_MM_YYYY",
	2: "MM_DD_YYYY",
	3: "YYYY_MM_DD",
}
var CurrentUser_Settings_DateFormat_value = map[string]int32{
	"DEFAULT_DATE_FORMAT": 0,
	"DD_MM_YYYY":          1,
	"MM_DD_YYYY":          2,
	"YYYY_MM_DD":          3,
}

func (x CurrentUser_Settings_DateFormat) String() string {
	return proto.EnumName(CurrentUser_Settings_DateFormat_name, int32(x))
}
func (CurrentUser_Settings_DateFormat) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor2, []int{0, 0, 3}
}

type CurrentUser_Settings_ThousandsSeparatorsFormat int32

const (
	CurrentUser_Settings_DEFAULT_THOUSANDS_SEPARATORS_FORMAT CurrentUser_Settings_ThousandsSeparatorsFormat = 0
	CurrentUser_Settings_PERIOD                              CurrentUser_Settings_ThousandsSeparatorsFormat = 1
	CurrentUser_Settings_COMMA                               CurrentUser_Settings_ThousandsSeparatorsFormat = 2
)

var CurrentUser_Settings_ThousandsSeparatorsFormat_name = map[int32]string{
	0: "DEFAULT_THOUSANDS_SEPARATORS_FORMAT",
	1: "PERIOD",
	2: "COMMA",
}
var CurrentUser_Settings_ThousandsSeparatorsFormat_value = map[string]int32{
	"DEFAULT_THOUSANDS_SEPARATORS_FORMAT": 0,
	"PERIOD": 1,
	"COMMA":  2,
}

func (x CurrentUser_Settings_ThousandsSeparatorsFormat) String() string {
	return proto.EnumName(CurrentUser_Settings_ThousandsSeparatorsFormat_name, int32(x))
}
func (CurrentUser_Settings_ThousandsSeparatorsFormat) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor2, []int{0, 0, 4}
}

// Your personal data
type CurrentUser struct {
	Id    string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Email string `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	Name  string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	// The organizations that this user has access to.
	Organizations []string `protobuf:"bytes,4,rep,name=organizations" json:"organizations,omitempty"`
	// The default organization for this user.
	DefaultOrganization string `protobuf:"bytes,5,opt,name=default_organization,json=defaultOrganization" json:"default_organization,omitempty"`
	// Open access requests.
	RequestedOrganizations []string `protobuf:"bytes,6,rep,name=requested_organizations,json=requestedOrganizations" json:"requested_organizations,omitempty"`
	// Mission control settings.
	Settings *CurrentUser_Settings `protobuf:"bytes,7,opt,name=settings" json:"settings,omitempty"`
	// The current organization for this user.
	// If this is a user, this equals the default_organization.
	// If this is a token, it's the token's organization.
	CurrentOrganization string `protobuf:"bytes,8,opt,name=current_organization,json=currentOrganization" json:"current_organization,omitempty"`
	// Permissions for the current organization.
	CurrentOrganizationPermissions *Filter_OrganizationPermissions `protobuf:"bytes,9,opt,name=current_organization_permissions,json=currentOrganizationPermissions" json:"current_organization_permissions,omitempty"`
	// Permissions for the user. If this is a token, the user permissions may be limited.
	UserPermissions *Filter_UserPermissions `protobuf:"bytes,10,opt,name=user_permissions,json=userPermissions" json:"user_permissions,omitempty"`
}

func (m *CurrentUser) Reset()                    { *m = CurrentUser{} }
func (m *CurrentUser) String() string            { return proto.CompactTextString(m) }
func (*CurrentUser) ProtoMessage()               {}
func (*CurrentUser) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *CurrentUser) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CurrentUser) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *CurrentUser) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CurrentUser) GetOrganizations() []string {
	if m != nil {
		return m.Organizations
	}
	return nil
}

func (m *CurrentUser) GetDefaultOrganization() string {
	if m != nil {
		return m.DefaultOrganization
	}
	return ""
}

func (m *CurrentUser) GetRequestedOrganizations() []string {
	if m != nil {
		return m.RequestedOrganizations
	}
	return nil
}

func (m *CurrentUser) GetSettings() *CurrentUser_Settings {
	if m != nil {
		return m.Settings
	}
	return nil
}

func (m *CurrentUser) GetCurrentOrganization() string {
	if m != nil {
		return m.CurrentOrganization
	}
	return ""
}

func (m *CurrentUser) GetCurrentOrganizationPermissions() *Filter_OrganizationPermissions {
	if m != nil {
		return m.CurrentOrganizationPermissions
	}
	return nil
}

func (m *CurrentUser) GetUserPermissions() *Filter_UserPermissions {
	if m != nil {
		return m.UserPermissions
	}
	return nil
}

// Settings used by the UI
type CurrentUser_Settings struct {
	Layout                    CurrentUser_Settings_Layout                    `protobuf:"varint,1,opt,name=layout,enum=hiber.user.CurrentUser_Settings_Layout" json:"layout,omitempty"`
	MapStyle                  CurrentUser_Settings_MapStyle                  `protobuf:"varint,2,opt,name=map_style,json=mapStyle,enum=hiber.user.CurrentUser_Settings_MapStyle" json:"map_style,omitempty"`
	TimeFormat                CurrentUser_Settings_TimeFormat                `protobuf:"varint,3,opt,name=time_format,json=timeFormat,enum=hiber.user.CurrentUser_Settings_TimeFormat" json:"time_format,omitempty"`
	DateFormat                CurrentUser_Settings_DateFormat                `protobuf:"varint,4,opt,name=date_format,json=dateFormat,enum=hiber.user.CurrentUser_Settings_DateFormat" json:"date_format,omitempty"`
	ThousandsSeparatorsFormat CurrentUser_Settings_ThousandsSeparatorsFormat `protobuf:"varint,5,opt,name=thousands_separators_format,json=thousandsSeparatorsFormat,enum=hiber.user.CurrentUser_Settings_ThousandsSeparatorsFormat" json:"thousands_separators_format,omitempty"`
}

func (m *CurrentUser_Settings) Reset()                    { *m = CurrentUser_Settings{} }
func (m *CurrentUser_Settings) String() string            { return proto.CompactTextString(m) }
func (*CurrentUser_Settings) ProtoMessage()               {}
func (*CurrentUser_Settings) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0, 0} }

func (m *CurrentUser_Settings) GetLayout() CurrentUser_Settings_Layout {
	if m != nil {
		return m.Layout
	}
	return CurrentUser_Settings_DEFAULT_LAYOUT
}

func (m *CurrentUser_Settings) GetMapStyle() CurrentUser_Settings_MapStyle {
	if m != nil {
		return m.MapStyle
	}
	return CurrentUser_Settings_DEFAULT_MAP_STYLE
}

func (m *CurrentUser_Settings) GetTimeFormat() CurrentUser_Settings_TimeFormat {
	if m != nil {
		return m.TimeFormat
	}
	return CurrentUser_Settings_DEFAULT_TIME_FORMAT
}

func (m *CurrentUser_Settings) GetDateFormat() CurrentUser_Settings_DateFormat {
	if m != nil {
		return m.DateFormat
	}
	return CurrentUser_Settings_DEFAULT_DATE_FORMAT
}

func (m *CurrentUser_Settings) GetThousandsSeparatorsFormat() CurrentUser_Settings_ThousandsSeparatorsFormat {
	if m != nil {
		return m.ThousandsSeparatorsFormat
	}
	return CurrentUser_Settings_DEFAULT_THOUSANDS_SEPARATORS_FORMAT
}

// Get your personal data
type CurrentUserRequest struct {
}

func (m *CurrentUserRequest) Reset()                    { *m = CurrentUserRequest{} }
func (m *CurrentUserRequest) String() string            { return proto.CompactTextString(m) }
func (*CurrentUserRequest) ProtoMessage()               {}
func (*CurrentUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

// Request access to an organization by name, if it exists.
// You request will be saved and the organization owner notified.
// Organization admins can approve or reject your request.
type RequestAccessRequest struct {
	Organization string `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
}

func (m *RequestAccessRequest) Reset()                    { *m = RequestAccessRequest{} }
func (m *RequestAccessRequest) String() string            { return proto.CompactTextString(m) }
func (*RequestAccessRequest) ProtoMessage()               {}
func (*RequestAccessRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *RequestAccessRequest) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

type RequestAccessRequest_Response struct {
}

func (m *RequestAccessRequest_Response) Reset()         { *m = RequestAccessRequest_Response{} }
func (m *RequestAccessRequest_Response) String() string { return proto.CompactTextString(m) }
func (*RequestAccessRequest_Response) ProtoMessage()    {}
func (*RequestAccessRequest_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor2, []int{2, 0}
}

// Cancel a previously made access request.
type CancelAccessRequestRequest struct {
	Organization string `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
}

func (m *CancelAccessRequestRequest) Reset()                    { *m = CancelAccessRequestRequest{} }
func (m *CancelAccessRequestRequest) String() string            { return proto.CompactTextString(m) }
func (*CancelAccessRequestRequest) ProtoMessage()               {}
func (*CancelAccessRequestRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *CancelAccessRequestRequest) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

type CancelAccessRequestRequest_Response struct {
}

func (m *CancelAccessRequestRequest_Response) Reset()         { *m = CancelAccessRequestRequest_Response{} }
func (m *CancelAccessRequestRequest_Response) String() string { return proto.CompactTextString(m) }
func (*CancelAccessRequestRequest_Response) ProtoMessage()    {}
func (*CancelAccessRequestRequest_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor2, []int{3, 0}
}

// Delete yourself.
// Removes all login information and personal data, except for you email address for auditing purposes.
type DeleteCurrentUserRequest struct {
}

func (m *DeleteCurrentUserRequest) Reset()                    { *m = DeleteCurrentUserRequest{} }
func (m *DeleteCurrentUserRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteCurrentUserRequest) ProtoMessage()               {}
func (*DeleteCurrentUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

type DeleteCurrentUserRequest_Response struct {
}

func (m *DeleteCurrentUserRequest_Response) Reset()         { *m = DeleteCurrentUserRequest_Response{} }
func (m *DeleteCurrentUserRequest_Response) String() string { return proto.CompactTextString(m) }
func (*DeleteCurrentUserRequest_Response) ProtoMessage()    {}
func (*DeleteCurrentUserRequest_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor2, []int{4, 0}
}

// Set the default organization to use when it is not specified in the call.
// Note: this can be a child organization of one of the owned organizations.
type UpdateDefaultOrganizationRequest struct {
	Organization string `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
}

func (m *UpdateDefaultOrganizationRequest) Reset()         { *m = UpdateDefaultOrganizationRequest{} }
func (m *UpdateDefaultOrganizationRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateDefaultOrganizationRequest) ProtoMessage()    {}
func (*UpdateDefaultOrganizationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor2, []int{5}
}

func (m *UpdateDefaultOrganizationRequest) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

type UpdateDefaultOrganizationRequest_Response struct {
	DefaultOrganization string `protobuf:"bytes,1,opt,name=default_organization,json=defaultOrganization" json:"default_organization,omitempty"`
}

func (m *UpdateDefaultOrganizationRequest_Response) Reset() {
	*m = UpdateDefaultOrganizationRequest_Response{}
}
func (m *UpdateDefaultOrganizationRequest_Response) String() string { return proto.CompactTextString(m) }
func (*UpdateDefaultOrganizationRequest_Response) ProtoMessage()    {}
func (*UpdateDefaultOrganizationRequest_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor2, []int{5, 0}
}

func (m *UpdateDefaultOrganizationRequest_Response) GetDefaultOrganization() string {
	if m != nil {
		return m.DefaultOrganization
	}
	return ""
}

type UpdateSettingsRequest struct {
	UpdateSettings *CurrentUser_Settings `protobuf:"bytes,1,opt,name=update_settings,json=updateSettings" json:"update_settings,omitempty"`
}

func (m *UpdateSettingsRequest) Reset()                    { *m = UpdateSettingsRequest{} }
func (m *UpdateSettingsRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateSettingsRequest) ProtoMessage()               {}
func (*UpdateSettingsRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{6} }

func (m *UpdateSettingsRequest) GetUpdateSettings() *CurrentUser_Settings {
	if m != nil {
		return m.UpdateSettings
	}
	return nil
}

type UpdateSettingsRequest_Response struct {
	Settings *CurrentUser_Settings `protobuf:"bytes,1,opt,name=settings" json:"settings,omitempty"`
}

func (m *UpdateSettingsRequest_Response) Reset()         { *m = UpdateSettingsRequest_Response{} }
func (m *UpdateSettingsRequest_Response) String() string { return proto.CompactTextString(m) }
func (*UpdateSettingsRequest_Response) ProtoMessage()    {}
func (*UpdateSettingsRequest_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor2, []int{6, 0}
}

func (m *UpdateSettingsRequest_Response) GetSettings() *CurrentUser_Settings {
	if m != nil {
		return m.Settings
	}
	return nil
}

type AccessibleOrganizationsRequest struct {
}

func (m *AccessibleOrganizationsRequest) Reset()                    { *m = AccessibleOrganizationsRequest{} }
func (m *AccessibleOrganizationsRequest) String() string            { return proto.CompactTextString(m) }
func (*AccessibleOrganizationsRequest) ProtoMessage()               {}
func (*AccessibleOrganizationsRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{7} }

type AccessibleOrganizationsRequest_Response struct {
	Organizations []string `protobuf:"bytes,1,rep,name=organizations" json:"organizations,omitempty"`
}

func (m *AccessibleOrganizationsRequest_Response) Reset() {
	*m = AccessibleOrganizationsRequest_Response{}
}
func (m *AccessibleOrganizationsRequest_Response) String() string { return proto.CompactTextString(m) }
func (*AccessibleOrganizationsRequest_Response) ProtoMessage()    {}
func (*AccessibleOrganizationsRequest_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor2, []int{7, 0}
}

func (m *AccessibleOrganizationsRequest_Response) GetOrganizations() []string {
	if m != nil {
		return m.Organizations
	}
	return nil
}

func init() {
	proto.RegisterType((*CurrentUser)(nil), "hiber.user.CurrentUser")
	proto.RegisterType((*CurrentUser_Settings)(nil), "hiber.user.CurrentUser.Settings")
	proto.RegisterType((*CurrentUserRequest)(nil), "hiber.user.CurrentUserRequest")
	proto.RegisterType((*RequestAccessRequest)(nil), "hiber.user.RequestAccessRequest")
	proto.RegisterType((*RequestAccessRequest_Response)(nil), "hiber.user.RequestAccessRequest.Response")
	proto.RegisterType((*CancelAccessRequestRequest)(nil), "hiber.user.CancelAccessRequestRequest")
	proto.RegisterType((*CancelAccessRequestRequest_Response)(nil), "hiber.user.CancelAccessRequestRequest.Response")
	proto.RegisterType((*DeleteCurrentUserRequest)(nil), "hiber.user.DeleteCurrentUserRequest")
	proto.RegisterType((*DeleteCurrentUserRequest_Response)(nil), "hiber.user.DeleteCurrentUserRequest.Response")
	proto.RegisterType((*UpdateDefaultOrganizationRequest)(nil), "hiber.user.UpdateDefaultOrganizationRequest")
	proto.RegisterType((*UpdateDefaultOrganizationRequest_Response)(nil), "hiber.user.UpdateDefaultOrganizationRequest.Response")
	proto.RegisterType((*UpdateSettingsRequest)(nil), "hiber.user.UpdateSettingsRequest")
	proto.RegisterType((*UpdateSettingsRequest_Response)(nil), "hiber.user.UpdateSettingsRequest.Response")
	proto.RegisterType((*AccessibleOrganizationsRequest)(nil), "hiber.user.AccessibleOrganizationsRequest")
	proto.RegisterType((*AccessibleOrganizationsRequest_Response)(nil), "hiber.user.AccessibleOrganizationsRequest.Response")
	proto.RegisterEnum("hiber.user.CurrentUser_Settings_Layout", CurrentUser_Settings_Layout_name, CurrentUser_Settings_Layout_value)
	proto.RegisterEnum("hiber.user.CurrentUser_Settings_MapStyle", CurrentUser_Settings_MapStyle_name, CurrentUser_Settings_MapStyle_value)
	proto.RegisterEnum("hiber.user.CurrentUser_Settings_TimeFormat", CurrentUser_Settings_TimeFormat_name, CurrentUser_Settings_TimeFormat_value)
	proto.RegisterEnum("hiber.user.CurrentUser_Settings_DateFormat", CurrentUser_Settings_DateFormat_name, CurrentUser_Settings_DateFormat_value)
	proto.RegisterEnum("hiber.user.CurrentUser_Settings_ThousandsSeparatorsFormat", CurrentUser_Settings_ThousandsSeparatorsFormat_name, CurrentUser_Settings_ThousandsSeparatorsFormat_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for CurrentUserService service

type CurrentUserServiceClient interface {
	CurrentUser(ctx context.Context, in *CurrentUserRequest, opts ...grpc.CallOption) (*CurrentUser, error)
	RequestAccess(ctx context.Context, in *RequestAccessRequest, opts ...grpc.CallOption) (*RequestAccessRequest_Response, error)
	CancelAccessRequest(ctx context.Context, in *CancelAccessRequestRequest, opts ...grpc.CallOption) (*CancelAccessRequestRequest_Response, error)
	DeleteCurrentUser(ctx context.Context, in *DeleteCurrentUserRequest, opts ...grpc.CallOption) (*DeleteCurrentUserRequest_Response, error)
	UpdateDefaultOrganization(ctx context.Context, in *UpdateDefaultOrganizationRequest, opts ...grpc.CallOption) (*UpdateDefaultOrganizationRequest_Response, error)
	UpdateSettings(ctx context.Context, in *UpdateSettingsRequest, opts ...grpc.CallOption) (*UpdateSettingsRequest_Response, error)
	AccessibleOrganizations(ctx context.Context, in *AccessibleOrganizationsRequest, opts ...grpc.CallOption) (*AccessibleOrganizationsRequest_Response, error)
}

type currentUserServiceClient struct {
	cc *grpc.ClientConn
}

func NewCurrentUserServiceClient(cc *grpc.ClientConn) CurrentUserServiceClient {
	return &currentUserServiceClient{cc}
}

func (c *currentUserServiceClient) CurrentUser(ctx context.Context, in *CurrentUserRequest, opts ...grpc.CallOption) (*CurrentUser, error) {
	out := new(CurrentUser)
	err := grpc.Invoke(ctx, "/hiber.user.CurrentUserService/CurrentUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *currentUserServiceClient) RequestAccess(ctx context.Context, in *RequestAccessRequest, opts ...grpc.CallOption) (*RequestAccessRequest_Response, error) {
	out := new(RequestAccessRequest_Response)
	err := grpc.Invoke(ctx, "/hiber.user.CurrentUserService/RequestAccess", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *currentUserServiceClient) CancelAccessRequest(ctx context.Context, in *CancelAccessRequestRequest, opts ...grpc.CallOption) (*CancelAccessRequestRequest_Response, error) {
	out := new(CancelAccessRequestRequest_Response)
	err := grpc.Invoke(ctx, "/hiber.user.CurrentUserService/CancelAccessRequest", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *currentUserServiceClient) DeleteCurrentUser(ctx context.Context, in *DeleteCurrentUserRequest, opts ...grpc.CallOption) (*DeleteCurrentUserRequest_Response, error) {
	out := new(DeleteCurrentUserRequest_Response)
	err := grpc.Invoke(ctx, "/hiber.user.CurrentUserService/DeleteCurrentUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *currentUserServiceClient) UpdateDefaultOrganization(ctx context.Context, in *UpdateDefaultOrganizationRequest, opts ...grpc.CallOption) (*UpdateDefaultOrganizationRequest_Response, error) {
	out := new(UpdateDefaultOrganizationRequest_Response)
	err := grpc.Invoke(ctx, "/hiber.user.CurrentUserService/UpdateDefaultOrganization", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *currentUserServiceClient) UpdateSettings(ctx context.Context, in *UpdateSettingsRequest, opts ...grpc.CallOption) (*UpdateSettingsRequest_Response, error) {
	out := new(UpdateSettingsRequest_Response)
	err := grpc.Invoke(ctx, "/hiber.user.CurrentUserService/UpdateSettings", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *currentUserServiceClient) AccessibleOrganizations(ctx context.Context, in *AccessibleOrganizationsRequest, opts ...grpc.CallOption) (*AccessibleOrganizationsRequest_Response, error) {
	out := new(AccessibleOrganizationsRequest_Response)
	err := grpc.Invoke(ctx, "/hiber.user.CurrentUserService/AccessibleOrganizations", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for CurrentUserService service

type CurrentUserServiceServer interface {
	CurrentUser(context.Context, *CurrentUserRequest) (*CurrentUser, error)
	RequestAccess(context.Context, *RequestAccessRequest) (*RequestAccessRequest_Response, error)
	CancelAccessRequest(context.Context, *CancelAccessRequestRequest) (*CancelAccessRequestRequest_Response, error)
	DeleteCurrentUser(context.Context, *DeleteCurrentUserRequest) (*DeleteCurrentUserRequest_Response, error)
	UpdateDefaultOrganization(context.Context, *UpdateDefaultOrganizationRequest) (*UpdateDefaultOrganizationRequest_Response, error)
	UpdateSettings(context.Context, *UpdateSettingsRequest) (*UpdateSettingsRequest_Response, error)
	AccessibleOrganizations(context.Context, *AccessibleOrganizationsRequest) (*AccessibleOrganizationsRequest_Response, error)
}

func RegisterCurrentUserServiceServer(s *grpc.Server, srv CurrentUserServiceServer) {
	s.RegisterService(&_CurrentUserService_serviceDesc, srv)
}

func _CurrentUserService_CurrentUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CurrentUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CurrentUserServiceServer).CurrentUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hiber.user.CurrentUserService/CurrentUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CurrentUserServiceServer).CurrentUser(ctx, req.(*CurrentUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CurrentUserService_RequestAccess_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestAccessRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CurrentUserServiceServer).RequestAccess(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hiber.user.CurrentUserService/RequestAccess",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CurrentUserServiceServer).RequestAccess(ctx, req.(*RequestAccessRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CurrentUserService_CancelAccessRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelAccessRequestRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CurrentUserServiceServer).CancelAccessRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hiber.user.CurrentUserService/CancelAccessRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CurrentUserServiceServer).CancelAccessRequest(ctx, req.(*CancelAccessRequestRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CurrentUserService_DeleteCurrentUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCurrentUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CurrentUserServiceServer).DeleteCurrentUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hiber.user.CurrentUserService/DeleteCurrentUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CurrentUserServiceServer).DeleteCurrentUser(ctx, req.(*DeleteCurrentUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CurrentUserService_UpdateDefaultOrganization_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateDefaultOrganizationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CurrentUserServiceServer).UpdateDefaultOrganization(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hiber.user.CurrentUserService/UpdateDefaultOrganization",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CurrentUserServiceServer).UpdateDefaultOrganization(ctx, req.(*UpdateDefaultOrganizationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CurrentUserService_UpdateSettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSettingsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CurrentUserServiceServer).UpdateSettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hiber.user.CurrentUserService/UpdateSettings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CurrentUserServiceServer).UpdateSettings(ctx, req.(*UpdateSettingsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CurrentUserService_AccessibleOrganizations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccessibleOrganizationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CurrentUserServiceServer).AccessibleOrganizations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hiber.user.CurrentUserService/AccessibleOrganizations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CurrentUserServiceServer).AccessibleOrganizations(ctx, req.(*AccessibleOrganizationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CurrentUserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hiber.user.CurrentUserService",
	HandlerType: (*CurrentUserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CurrentUser",
			Handler:    _CurrentUserService_CurrentUser_Handler,
		},
		{
			MethodName: "RequestAccess",
			Handler:    _CurrentUserService_RequestAccess_Handler,
		},
		{
			MethodName: "CancelAccessRequest",
			Handler:    _CurrentUserService_CancelAccessRequest_Handler,
		},
		{
			MethodName: "DeleteCurrentUser",
			Handler:    _CurrentUserService_DeleteCurrentUser_Handler,
		},
		{
			MethodName: "UpdateDefaultOrganization",
			Handler:    _CurrentUserService_UpdateDefaultOrganization_Handler,
		},
		{
			MethodName: "UpdateSettings",
			Handler:    _CurrentUserService_UpdateSettings_Handler,
		},
		{
			MethodName: "AccessibleOrganizations",
			Handler:    _CurrentUserService_AccessibleOrganizations_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "currentuser.proto",
}

func init() { proto.RegisterFile("currentuser.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 991 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x56, 0xdd, 0x6e, 0xe3, 0x44,
	0x14, 0x5e, 0xa7, 0x4d, 0x36, 0x39, 0x6d, 0x53, 0x77, 0xda, 0xa5, 0xa9, 0x11, 0x55, 0x30, 0xcb,
	0x6e, 0x97, 0x9f, 0x00, 0x5d, 0xad, 0x10, 0x08, 0x84, 0xdc, 0xd8, 0x51, 0x23, 0xec, 0x3a, 0xb2,
	0x9d, 0x5d, 0x05, 0x90, 0x2c, 0x27, 0x99, 0x6d, 0x2d, 0x39, 0xb1, 0xb1, 0x27, 0x48, 0xdb, 0x2b,
	0x6e, 0x78, 0x1b, 0x1e, 0x80, 0x4b, 0x1e, 0x8a, 0x07, 0x40, 0x1e, 0x3b, 0xb6, 0x87, 0xc4, 0x4a,
	0xca, 0xdd, 0xcc, 0xf9, 0xf9, 0xbe, 0x6f, 0x8e, 0xcf, 0x9c, 0x31, 0x1c, 0x4d, 0x16, 0x61, 0x88,
	0xe7, 0x64, 0x11, 0xe1, 0xb0, 0x13, 0x84, 0x3e, 0xf1, 0x11, 0xdc, 0xb9, 0x63, 0x1c, 0x76, 0x62,
	0x8b, 0x00, 0x63, 0x27, 0xc2, 0x89, 0x5d, 0xfc, 0x1b, 0x60, 0xaf, 0x9b, 0x44, 0x0f, 0x23, 0x1c,
	0xa2, 0x26, 0x54, 0xdc, 0x69, 0x8b, 0x6b, 0x73, 0x17, 0x0d, 0xa3, 0xe2, 0x4e, 0xd1, 0x09, 0x54,
	0xf1, 0xcc, 0x71, 0xbd, 0x56, 0x85, 0x9a, 0x92, 0x0d, 0x42, 0xb0, 0x3b, 0x77, 0x66, 0xb8, 0xb5,
	0x43, 0x8d, 0x74, 0x8d, 0x9e, 0xc2, 0x81, 0x1f, 0xde, 0x3a, 0x73, 0xf7, 0xde, 0x21, 0xae, 0x3f,
	0x8f, 0x5a, 0xbb, 0xed, 0x9d, 0x8b, 0x86, 0xc1, 0x1a, 0xd1, 0x57, 0x70, 0x32, 0xc5, 0x6f, 0x9d,
	0x85, 0x47, 0xec, 0xa2, 0xa3, 0x55, 0xa5, 0x48, 0xc7, 0xa9, 0x4f, 0x2f, 0xb8, 0xd0, 0xd7, 0x70,
	0x1a, 0xe2, 0x5f, 0x17, 0x38, 0x22, 0x78, 0x6a, 0xb3, 0x14, 0x35, 0x4a, 0xf1, 0x5e, 0xe6, 0xd6,
	0x19, 0xae, 0xef, 0xa0, 0x1e, 0x61, 0x42, 0xdc, 0xf9, 0x6d, 0xd4, 0x7a, 0xdc, 0xe6, 0x2e, 0xf6,
	0x2e, 0xdb, 0x9d, 0xbc, 0x0c, 0x9d, 0xc2, 0xb1, 0x3b, 0x66, 0x1a, 0x67, 0x64, 0x19, 0xb1, 0xd2,
	0xb4, 0x8c, 0xac, 0xd2, 0x7a, 0xa2, 0x34, 0xf5, 0x31, 0x4a, 0x7d, 0x68, 0xaf, 0x4b, 0xb1, 0x03,
	0x1c, 0xce, 0xdc, 0x28, 0xa2, 0x92, 0x1b, 0x54, 0xc8, 0xc7, 0xa9, 0x90, 0x9e, 0xeb, 0x11, 0x1c,
	0x76, 0x8a, 0x28, 0x83, 0x3c, 0xd8, 0x38, 0x5f, 0xc3, 0x52, 0xf0, 0xa3, 0x6b, 0xe0, 0xe3, 0xa3,
	0x30, 0x04, 0x40, 0x09, 0x3e, 0x60, 0x09, 0xe2, 0x43, 0x16, 0x81, 0x0f, 0x17, 0xac, 0x41, 0xf8,
	0xab, 0x06, 0xf5, 0x65, 0x11, 0xd0, 0x0f, 0x50, 0xf3, 0x9c, 0x77, 0xfe, 0x82, 0xd0, 0x46, 0x68,
	0x5e, 0x3e, 0xdf, 0x54, 0xb6, 0x8e, 0x4a, 0xc3, 0x8d, 0x34, 0x0d, 0xf5, 0xa0, 0x31, 0x73, 0x02,
	0x3b, 0x22, 0xef, 0x3c, 0x4c, 0x3b, 0xa7, 0x79, 0xf9, 0x62, 0x23, 0x86, 0xe6, 0x04, 0x66, 0x9c,
	0x60, 0xd4, 0x67, 0xe9, 0x0a, 0xa9, 0xb0, 0x47, 0xdc, 0x19, 0xb6, 0xdf, 0xfa, 0xe1, 0xcc, 0x21,
	0xb4, 0xdd, 0x9a, 0x97, 0x9f, 0x6e, 0x44, 0xb2, 0xdc, 0x19, 0xee, 0xd1, 0x14, 0x03, 0x48, 0xb6,
	0x8e, 0xd1, 0xa6, 0x0e, 0xc9, 0xd0, 0x76, 0xb7, 0x44, 0x93, 0x1d, 0x92, 0xa1, 0x4d, 0xb3, 0x35,
	0xba, 0x87, 0xf7, 0xc9, 0x9d, 0xbf, 0x88, 0x9c, 0xf9, 0x34, 0xb2, 0x23, 0x1c, 0x38, 0xa1, 0x43,
	0xfc, 0x30, 0x5a, 0xa2, 0x57, 0x29, 0xfa, 0xb7, 0x9b, 0xb5, 0x2e, 0x31, 0xcc, 0x0c, 0x22, 0x25,
	0x3b, 0x23, 0x65, 0x2e, 0xf1, 0x1b, 0xa8, 0x25, 0x15, 0x47, 0x08, 0x9a, 0xb2, 0xd2, 0x93, 0x86,
	0xaa, 0x65, 0xab, 0xd2, 0x48, 0x1f, 0x5a, 0xfc, 0x23, 0x74, 0x00, 0x0d, 0x55, 0xba, 0x91, 0xcd,
	0xae, 0x34, 0x50, 0x78, 0x0e, 0xed, 0x43, 0x7d, 0xa0, 0x1b, 0x96, 0x21, 0xf5, 0x2d, 0xbe, 0x22,
	0xea, 0x50, 0x5f, 0x16, 0x1a, 0x3d, 0x81, 0xa3, 0x65, 0xb2, 0x26, 0x0d, 0x6c, 0xd3, 0x1a, 0xa9,
	0x4a, 0x92, 0x6f, 0x4a, 0x96, 0xa2, 0xaa, 0x7d, 0x2b, 0xce, 0xe7, 0x61, 0xff, 0xba, 0x7f, 0xa5,
	0x18, 0xf6, 0xeb, 0xbe, 0xd9, 0xd7, 0x6f, 0xf8, 0x0a, 0xda, 0x83, 0xc7, 0x5d, 0x55, 0x32, 0xcd,
	0x7e, 0x97, 0xdf, 0x11, 0x7f, 0x04, 0xc8, 0xeb, 0x8d, 0x4e, 0xe1, 0x78, 0x09, 0x69, 0xf5, 0x35,
	0xc5, 0xee, 0xe9, 0x86, 0x26, 0xc5, 0xa2, 0x8e, 0xe1, 0xd0, 0x7a, 0xa3, 0xdc, 0x58, 0xa3, 0x9e,
	0x3e, 0x34, 0xec, 0x6b, 0x7d, 0x68, 0xf0, 0x1c, 0x3a, 0x84, 0x3d, 0xeb, 0x8d, 0xa2, 0xbe, 0x56,
	0x12, 0x43, 0x45, 0x1c, 0x02, 0xe4, 0xe5, 0x2e, 0x82, 0xc9, 0x92, 0x55, 0x00, 0x6b, 0x02, 0xc8,
	0xb2, 0xad, 0x69, 0xf6, 0x68, 0x34, 0x1a, 0xf1, 0x5c, 0xbc, 0xd7, 0x34, 0x5b, 0x96, 0x93, 0x7d,
	0x25, 0xde, 0xc7, 0x2b, 0x9b, 0x1a, 0xf9, 0x1d, 0xf1, 0x67, 0x38, 0x2b, 0xad, 0x33, 0x7a, 0x0e,
	0x1f, 0x65, 0x92, 0xaf, 0xf5, 0xa1, 0x19, 0x97, 0xce, 0x36, 0x95, 0x81, 0x64, 0x48, 0x96, 0x6e,
	0x98, 0x39, 0x2b, 0x40, 0x6d, 0xa0, 0x18, 0x7d, 0x5d, 0xe6, 0x39, 0xd4, 0x80, 0x6a, 0x57, 0xd7,
	0x34, 0x89, 0xaf, 0x88, 0x27, 0x80, 0x0a, 0x5f, 0xd6, 0x48, 0x66, 0x91, 0xd8, 0x83, 0x93, 0x74,
	0x29, 0x4d, 0x26, 0x38, 0x8a, 0xd2, 0x0d, 0x12, 0x61, 0x9f, 0x19, 0x27, 0xc9, 0xa8, 0x65, 0x6c,
	0x02, 0x40, 0xdd, 0xc0, 0x51, 0xe0, 0xcf, 0x23, 0x2c, 0xaa, 0x20, 0x74, 0x9d, 0xf9, 0x04, 0x7b,
	0x0c, 0xcc, 0xff, 0x45, 0x7b, 0x06, 0x2d, 0x19, 0x7b, 0x98, 0xe0, 0x55, 0xc5, 0x4c, 0xdc, 0x1f,
	0x1c, 0xb4, 0x87, 0x41, 0xdc, 0xed, 0xf2, 0xea, 0x44, 0x7e, 0x08, 0xf9, 0xf7, 0x39, 0x68, 0xe9,
	0xec, 0xe7, 0x4a, 0x67, 0xbf, 0xf8, 0x27, 0x07, 0x4f, 0x12, 0x1d, 0xd9, 0x84, 0x4e, 0xc9, 0xfb,
	0x70, 0xb8, 0xa0, 0x0e, 0x3b, 0x9b, 0xf1, 0xdc, 0x96, 0x33, 0xbe, 0xb9, 0x60, 0x10, 0x85, 0xeb,
	0x82, 0xc6, 0xe2, 0x9b, 0xc1, 0x3d, 0xf4, 0xcd, 0x10, 0x0d, 0x38, 0x4f, 0x3e, 0x93, 0x3b, 0xf6,
	0x30, 0xf3, 0x18, 0x2d, 0x8b, 0xfc, 0x65, 0x81, 0x6b, 0xe5, 0xc5, 0xe4, 0xd6, 0xbc, 0x98, 0x97,
	0xff, 0x54, 0x99, 0xfe, 0x32, 0x71, 0xf8, 0x9b, 0x3b, 0xc1, 0xa8, 0xc7, 0xbe, 0xdb, 0xe7, 0x25,
	0x2a, 0x97, 0xbc, 0xa7, 0x25, 0x7e, 0xf4, 0x0b, 0x1c, 0x30, 0x7d, 0x8a, 0x98, 0xf3, 0xae, 0x6b,
	0x61, 0xe1, 0xc5, 0xa6, 0x88, 0x4e, 0x76, 0xc4, 0x39, 0x1c, 0xaf, 0xe9, 0x5e, 0xf4, 0x8c, 0x51,
	0x53, 0xda, 0xde, 0xc2, 0x17, 0xdb, 0xc5, 0xe5, 0x7c, 0x77, 0x70, 0xb4, 0xd2, 0xdf, 0xe8, 0x69,
	0x11, 0xa5, 0xb4, 0xfd, 0x3f, 0xdf, 0x26, 0x2a, 0x67, 0xfa, 0x9d, 0x83, 0xb3, 0xd2, 0x1b, 0x82,
	0x3e, 0x2b, 0x82, 0x6d, 0xba, 0x48, 0xc2, 0xab, 0x87, 0x44, 0xe7, 0x12, 0x6c, 0x68, 0xb2, 0x77,
	0x03, 0x7d, 0xb8, 0x0a, 0xf4, 0x9f, 0x7b, 0x23, 0x7c, 0xb2, 0x31, 0x24, 0x27, 0xb8, 0x87, 0xd3,
	0x92, 0x76, 0x46, 0x0c, 0xcc, 0x86, 0x9e, 0x7f, 0xb9, 0x7d, 0x6c, 0xc6, 0x7d, 0xf5, 0x0a, 0x84,
	0x5b, 0xcf, 0x1f, 0x3b, 0x5e, 0x9a, 0xec, 0x04, 0x6e, 0xe7, 0x36, 0x0c, 0x26, 0x14, 0xe5, 0xaa,
	0x59, 0xf8, 0x34, 0x52, 0xe0, 0x0e, 0x1e, 0xfd, 0x54, 0xa5, 0x61, 0xe3, 0x1a, 0xfd, 0xad, 0x7d,
	0xf9, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x06, 0xc2, 0x12, 0xbb, 0x03, 0x0b, 0x00, 0x00,
}
