// Code generated by protoc-gen-go. DO NOT EDIT.
// source: modem_message_body_parser.proto

package hiber

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type SimpleModemMessageBodyParser_Endian int32

const (
	SimpleModemMessageBodyParser_DEFAULT       SimpleModemMessageBodyParser_Endian = 0
	SimpleModemMessageBodyParser_LITTLE_ENDIAN SimpleModemMessageBodyParser_Endian = 1
	SimpleModemMessageBodyParser_BIG_ENDIAN    SimpleModemMessageBodyParser_Endian = 2
)

var SimpleModemMessageBodyParser_Endian_name = map[int32]string{
	0: "DEFAULT",
	1: "LITTLE_ENDIAN",
	2: "BIG_ENDIAN",
}
var SimpleModemMessageBodyParser_Endian_value = map[string]int32{
	"DEFAULT":       0,
	"LITTLE_ENDIAN": 1,
	"BIG_ENDIAN":    2,
}

func (x SimpleModemMessageBodyParser_Endian) String() string {
	return proto.EnumName(SimpleModemMessageBodyParser_Endian_name, int32(x))
}
func (SimpleModemMessageBodyParser_Endian) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor12, []int{1, 0}
}

// * Modem message body parser. This defines a parsing strategy for the body of a message.
// A parser can be defined in two ways: using a .ksy (Kaitai struct) file or using the simple parser.
type ModemMessageBodyParser struct {
	Id           int32                         `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name         string                        `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	ContentKsy   string                        `protobuf:"bytes,3,opt,name=content_ksy,json=contentKsy" json:"content_ksy,omitempty"`
	SimpleParser *SimpleModemMessageBodyParser `protobuf:"bytes,4,opt,name=simple_parser,json=simpleParser" json:"simple_parser,omitempty"`
}

func (m *ModemMessageBodyParser) Reset()                    { *m = ModemMessageBodyParser{} }
func (m *ModemMessageBodyParser) String() string            { return proto.CompactTextString(m) }
func (*ModemMessageBodyParser) ProtoMessage()               {}
func (*ModemMessageBodyParser) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{0} }

func (m *ModemMessageBodyParser) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ModemMessageBodyParser) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ModemMessageBodyParser) GetContentKsy() string {
	if m != nil {
		return m.ContentKsy
	}
	return ""
}

func (m *ModemMessageBodyParser) GetSimpleParser() *SimpleModemMessageBodyParser {
	if m != nil {
		return m.SimpleParser
	}
	return nil
}

// * Simple modem message body parser TODO(WEB-3014) documentation
type SimpleModemMessageBodyParser struct {
	// * Parser name.
	// When this structure is used as a custom type inside a parser, this name is a reduced to
	// a value containing only lowercase letters, numbers and underscores, like field names.
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// * A short, single line description of the field.
	Documentation string `protobuf:"bytes,2,opt,name=documentation" json:"documentation,omitempty"`
	// * The fields in this object.
	Fields []*SimpleModemMessageBodyParser_Field `protobuf:"bytes,3,rep,name=fields" json:"fields,omitempty"`
	// * Sets a default endianness for this parser's fields and any fields in custom types.
	DefaultEndian SimpleModemMessageBodyParser_Endian `protobuf:"varint,4,opt,name=default_endian,json=defaultEndian,enum=hiber.modem.message.bodyparser.SimpleModemMessageBodyParser_Endian" json:"default_endian,omitempty"`
	// * Sets a default string encoding for this parser's fields and any fields in custom types.
	DefaultTextEncoding string `protobuf:"bytes,5,opt,name=default_text_encoding,json=defaultTextEncoding" json:"default_text_encoding,omitempty"`
	// * A list of custom types used for custom types fields.
	// Each is effectively a simple parser, and can have its own custom types again, which can only be used within
	// that parser structure.
	// The parser name is used for custom type fields.
	CustomTypes []*SimpleModemMessageBodyParser `protobuf:"bytes,6,rep,name=custom_types,json=customTypes" json:"custom_types,omitempty"`
}

func (m *SimpleModemMessageBodyParser) Reset()                    { *m = SimpleModemMessageBodyParser{} }
func (m *SimpleModemMessageBodyParser) String() string            { return proto.CompactTextString(m) }
func (*SimpleModemMessageBodyParser) ProtoMessage()               {}
func (*SimpleModemMessageBodyParser) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{1} }

func (m *SimpleModemMessageBodyParser) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SimpleModemMessageBodyParser) GetDocumentation() string {
	if m != nil {
		return m.Documentation
	}
	return ""
}

func (m *SimpleModemMessageBodyParser) GetFields() []*SimpleModemMessageBodyParser_Field {
	if m != nil {
		return m.Fields
	}
	return nil
}

func (m *SimpleModemMessageBodyParser) GetDefaultEndian() SimpleModemMessageBodyParser_Endian {
	if m != nil {
		return m.DefaultEndian
	}
	return SimpleModemMessageBodyParser_DEFAULT
}

func (m *SimpleModemMessageBodyParser) GetDefaultTextEncoding() string {
	if m != nil {
		return m.DefaultTextEncoding
	}
	return ""
}

func (m *SimpleModemMessageBodyParser) GetCustomTypes() []*SimpleModemMessageBodyParser {
	if m != nil {
		return m.CustomTypes
	}
	return nil
}

type SimpleModemMessageBodyParser_Field struct {
	// * Field name. This is a reduced to a value containing only lowercase letters, numbers and underscores.
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// * A short, single line description of the field.
	Documentation string `protobuf:"bytes,2,opt,name=documentation" json:"documentation,omitempty"`
	// Types that are valid to be assigned to Type:
	//	*SimpleModemMessageBodyParser_Field_Integer_
	//	*SimpleModemMessageBodyParser_Field_Float_
	//	*SimpleModemMessageBodyParser_Field_Bytes_
	//	*SimpleModemMessageBodyParser_Field_String_
	//	*SimpleModemMessageBodyParser_Field_Magic
	//	*SimpleModemMessageBodyParser_Field_CustomType
	Type isSimpleModemMessageBodyParser_Field_Type `protobuf_oneof:"type"`
}

func (m *SimpleModemMessageBodyParser_Field) Reset()         { *m = SimpleModemMessageBodyParser_Field{} }
func (m *SimpleModemMessageBodyParser_Field) String() string { return proto.CompactTextString(m) }
func (*SimpleModemMessageBodyParser_Field) ProtoMessage()    {}
func (*SimpleModemMessageBodyParser_Field) Descriptor() ([]byte, []int) {
	return fileDescriptor12, []int{1, 0}
}

type isSimpleModemMessageBodyParser_Field_Type interface{ isSimpleModemMessageBodyParser_Field_Type() }

type SimpleModemMessageBodyParser_Field_Integer_ struct {
	Integer *SimpleModemMessageBodyParser_Field_Integer `protobuf:"bytes,3,opt,name=integer,oneof"`
}
type SimpleModemMessageBodyParser_Field_Float_ struct {
	Float *SimpleModemMessageBodyParser_Field_Float `protobuf:"bytes,4,opt,name=float,oneof"`
}
type SimpleModemMessageBodyParser_Field_Bytes_ struct {
	Bytes *SimpleModemMessageBodyParser_Field_Bytes `protobuf:"bytes,5,opt,name=bytes,oneof"`
}
type SimpleModemMessageBodyParser_Field_String_ struct {
	String_ *SimpleModemMessageBodyParser_Field_String `protobuf:"bytes,6,opt,name=string,oneof"`
}
type SimpleModemMessageBodyParser_Field_Magic struct {
	Magic []byte `protobuf:"bytes,7,opt,name=magic,proto3,oneof"`
}
type SimpleModemMessageBodyParser_Field_CustomType struct {
	CustomType string `protobuf:"bytes,8,opt,name=custom_type,json=customType,oneof"`
}

func (*SimpleModemMessageBodyParser_Field_Integer_) isSimpleModemMessageBodyParser_Field_Type()   {}
func (*SimpleModemMessageBodyParser_Field_Float_) isSimpleModemMessageBodyParser_Field_Type()     {}
func (*SimpleModemMessageBodyParser_Field_Bytes_) isSimpleModemMessageBodyParser_Field_Type()     {}
func (*SimpleModemMessageBodyParser_Field_String_) isSimpleModemMessageBodyParser_Field_Type()    {}
func (*SimpleModemMessageBodyParser_Field_Magic) isSimpleModemMessageBodyParser_Field_Type()      {}
func (*SimpleModemMessageBodyParser_Field_CustomType) isSimpleModemMessageBodyParser_Field_Type() {}

func (m *SimpleModemMessageBodyParser_Field) GetType() isSimpleModemMessageBodyParser_Field_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *SimpleModemMessageBodyParser_Field) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SimpleModemMessageBodyParser_Field) GetDocumentation() string {
	if m != nil {
		return m.Documentation
	}
	return ""
}

func (m *SimpleModemMessageBodyParser_Field) GetInteger() *SimpleModemMessageBodyParser_Field_Integer {
	if x, ok := m.GetType().(*SimpleModemMessageBodyParser_Field_Integer_); ok {
		return x.Integer
	}
	return nil
}

func (m *SimpleModemMessageBodyParser_Field) GetFloat() *SimpleModemMessageBodyParser_Field_Float {
	if x, ok := m.GetType().(*SimpleModemMessageBodyParser_Field_Float_); ok {
		return x.Float
	}
	return nil
}

func (m *SimpleModemMessageBodyParser_Field) GetBytes() *SimpleModemMessageBodyParser_Field_Bytes {
	if x, ok := m.GetType().(*SimpleModemMessageBodyParser_Field_Bytes_); ok {
		return x.Bytes
	}
	return nil
}

func (m *SimpleModemMessageBodyParser_Field) GetString_() *SimpleModemMessageBodyParser_Field_String {
	if x, ok := m.GetType().(*SimpleModemMessageBodyParser_Field_String_); ok {
		return x.String_
	}
	return nil
}

func (m *SimpleModemMessageBodyParser_Field) GetMagic() []byte {
	if x, ok := m.GetType().(*SimpleModemMessageBodyParser_Field_Magic); ok {
		return x.Magic
	}
	return nil
}

func (m *SimpleModemMessageBodyParser_Field) GetCustomType() string {
	if x, ok := m.GetType().(*SimpleModemMessageBodyParser_Field_CustomType); ok {
		return x.CustomType
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*SimpleModemMessageBodyParser_Field) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _SimpleModemMessageBodyParser_Field_OneofMarshaler, _SimpleModemMessageBodyParser_Field_OneofUnmarshaler, _SimpleModemMessageBodyParser_Field_OneofSizer, []interface{}{
		(*SimpleModemMessageBodyParser_Field_Integer_)(nil),
		(*SimpleModemMessageBodyParser_Field_Float_)(nil),
		(*SimpleModemMessageBodyParser_Field_Bytes_)(nil),
		(*SimpleModemMessageBodyParser_Field_String_)(nil),
		(*SimpleModemMessageBodyParser_Field_Magic)(nil),
		(*SimpleModemMessageBodyParser_Field_CustomType)(nil),
	}
}

func _SimpleModemMessageBodyParser_Field_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*SimpleModemMessageBodyParser_Field)
	// type
	switch x := m.Type.(type) {
	case *SimpleModemMessageBodyParser_Field_Integer_:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Integer); err != nil {
			return err
		}
	case *SimpleModemMessageBodyParser_Field_Float_:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Float); err != nil {
			return err
		}
	case *SimpleModemMessageBodyParser_Field_Bytes_:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Bytes); err != nil {
			return err
		}
	case *SimpleModemMessageBodyParser_Field_String_:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.String_); err != nil {
			return err
		}
	case *SimpleModemMessageBodyParser_Field_Magic:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.Magic)
	case *SimpleModemMessageBodyParser_Field_CustomType:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.CustomType)
	case nil:
	default:
		return fmt.Errorf("SimpleModemMessageBodyParser_Field.Type has unexpected type %T", x)
	}
	return nil
}

func _SimpleModemMessageBodyParser_Field_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*SimpleModemMessageBodyParser_Field)
	switch tag {
	case 3: // type.integer
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SimpleModemMessageBodyParser_Field_Integer)
		err := b.DecodeMessage(msg)
		m.Type = &SimpleModemMessageBodyParser_Field_Integer_{msg}
		return true, err
	case 4: // type.float
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SimpleModemMessageBodyParser_Field_Float)
		err := b.DecodeMessage(msg)
		m.Type = &SimpleModemMessageBodyParser_Field_Float_{msg}
		return true, err
	case 5: // type.bytes
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SimpleModemMessageBodyParser_Field_Bytes)
		err := b.DecodeMessage(msg)
		m.Type = &SimpleModemMessageBodyParser_Field_Bytes_{msg}
		return true, err
	case 6: // type.string
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SimpleModemMessageBodyParser_Field_String)
		err := b.DecodeMessage(msg)
		m.Type = &SimpleModemMessageBodyParser_Field_String_{msg}
		return true, err
	case 7: // type.magic
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.Type = &SimpleModemMessageBodyParser_Field_Magic{x}
		return true, err
	case 8: // type.custom_type
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Type = &SimpleModemMessageBodyParser_Field_CustomType{x}
		return true, err
	default:
		return false, nil
	}
}

func _SimpleModemMessageBodyParser_Field_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*SimpleModemMessageBodyParser_Field)
	// type
	switch x := m.Type.(type) {
	case *SimpleModemMessageBodyParser_Field_Integer_:
		s := proto.Size(x.Integer)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SimpleModemMessageBodyParser_Field_Float_:
		s := proto.Size(x.Float)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SimpleModemMessageBodyParser_Field_Bytes_:
		s := proto.Size(x.Bytes)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SimpleModemMessageBodyParser_Field_String_:
		s := proto.Size(x.String_)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SimpleModemMessageBodyParser_Field_Magic:
		n += proto.SizeVarint(7<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Magic)))
		n += len(x.Magic)
	case *SimpleModemMessageBodyParser_Field_CustomType:
		n += proto.SizeVarint(8<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.CustomType)))
		n += len(x.CustomType)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type SimpleModemMessageBodyParser_Field_Integer struct {
	// * Specifies the size of this integer in bytes.
	SizeBytes int32 `protobuf:"varint,3,opt,name=size_bytes,json=sizeBytes" json:"size_bytes,omitempty"`
	// * Specifies whether this integer is signed or unsigned.
	Signed bool `protobuf:"varint,4,opt,name=signed" json:"signed,omitempty"`
	// * Specifies endian encoding for this field. This can be omitted if default endianness specified.
	Endian SimpleModemMessageBodyParser_Endian `protobuf:"varint,5,opt,name=endian,enum=hiber.modem.message.bodyparser.SimpleModemMessageBodyParser_Endian" json:"endian,omitempty"`
}

func (m *SimpleModemMessageBodyParser_Field_Integer) Reset() {
	*m = SimpleModemMessageBodyParser_Field_Integer{}
}
func (m *SimpleModemMessageBodyParser_Field_Integer) String() string {
	return proto.CompactTextString(m)
}
func (*SimpleModemMessageBodyParser_Field_Integer) ProtoMessage() {}
func (*SimpleModemMessageBodyParser_Field_Integer) Descriptor() ([]byte, []int) {
	return fileDescriptor12, []int{1, 0, 0}
}

func (m *SimpleModemMessageBodyParser_Field_Integer) GetSizeBytes() int32 {
	if m != nil {
		return m.SizeBytes
	}
	return 0
}

func (m *SimpleModemMessageBodyParser_Field_Integer) GetSigned() bool {
	if m != nil {
		return m.Signed
	}
	return false
}

func (m *SimpleModemMessageBodyParser_Field_Integer) GetEndian() SimpleModemMessageBodyParser_Endian {
	if m != nil {
		return m.Endian
	}
	return SimpleModemMessageBodyParser_DEFAULT
}

type SimpleModemMessageBodyParser_Field_Float struct {
	// * Specifies the size of this floating point number in bytes.
	SizeBytes int32 `protobuf:"varint,3,opt,name=size_bytes,json=sizeBytes" json:"size_bytes,omitempty"`
	// * Specifies endian encoding for this field. This can be omitted if default endianness specified.
	Endian SimpleModemMessageBodyParser_Endian `protobuf:"varint,5,opt,name=endian,enum=hiber.modem.message.bodyparser.SimpleModemMessageBodyParser_Endian" json:"endian,omitempty"`
}

func (m *SimpleModemMessageBodyParser_Field_Float) Reset() {
	*m = SimpleModemMessageBodyParser_Field_Float{}
}
func (m *SimpleModemMessageBodyParser_Field_Float) String() string { return proto.CompactTextString(m) }
func (*SimpleModemMessageBodyParser_Field_Float) ProtoMessage()    {}
func (*SimpleModemMessageBodyParser_Field_Float) Descriptor() ([]byte, []int) {
	return fileDescriptor12, []int{1, 0, 1}
}

func (m *SimpleModemMessageBodyParser_Field_Float) GetSizeBytes() int32 {
	if m != nil {
		return m.SizeBytes
	}
	return 0
}

func (m *SimpleModemMessageBodyParser_Field_Float) GetEndian() SimpleModemMessageBodyParser_Endian {
	if m != nil {
		return m.Endian
	}
	return SimpleModemMessageBodyParser_DEFAULT
}

type SimpleModemMessageBodyParser_Field_Bytes struct {
	Size *SimpleModemMessageBodyParser_DelimitedSize `protobuf:"bytes,3,opt,name=size" json:"size,omitempty"`
}

func (m *SimpleModemMessageBodyParser_Field_Bytes) Reset() {
	*m = SimpleModemMessageBodyParser_Field_Bytes{}
}
func (m *SimpleModemMessageBodyParser_Field_Bytes) String() string { return proto.CompactTextString(m) }
func (*SimpleModemMessageBodyParser_Field_Bytes) ProtoMessage()    {}
func (*SimpleModemMessageBodyParser_Field_Bytes) Descriptor() ([]byte, []int) {
	return fileDescriptor12, []int{1, 0, 2}
}

func (m *SimpleModemMessageBodyParser_Field_Bytes) GetSize() *SimpleModemMessageBodyParser_DelimitedSize {
	if m != nil {
		return m.Size
	}
	return nil
}

type SimpleModemMessageBodyParser_Field_String struct {
	Size *SimpleModemMessageBodyParser_DelimitedSize `protobuf:"bytes,3,opt,name=size" json:"size,omitempty"`
	// * Specifies encoding for the string. This can be omitted if default encoding specified.
	Encoding string `protobuf:"bytes,4,opt,name=encoding" json:"encoding,omitempty"`
}

func (m *SimpleModemMessageBodyParser_Field_String) Reset() {
	*m = SimpleModemMessageBodyParser_Field_String{}
}
func (m *SimpleModemMessageBodyParser_Field_String) String() string { return proto.CompactTextString(m) }
func (*SimpleModemMessageBodyParser_Field_String) ProtoMessage()    {}
func (*SimpleModemMessageBodyParser_Field_String) Descriptor() ([]byte, []int) {
	return fileDescriptor12, []int{1, 0, 3}
}

func (m *SimpleModemMessageBodyParser_Field_String) GetSize() *SimpleModemMessageBodyParser_DelimitedSize {
	if m != nil {
		return m.Size
	}
	return nil
}

func (m *SimpleModemMessageBodyParser_Field_String) GetEncoding() string {
	if m != nil {
		return m.Encoding
	}
	return ""
}

// * Delimited size definition, used for Bytes and Text.
type SimpleModemMessageBodyParser_DelimitedSize struct {
	// Types that are valid to be assigned to Size:
	//	*SimpleModemMessageBodyParser_DelimitedSize_SizeBytes
	//	*SimpleModemMessageBodyParser_DelimitedSize_EndOfStream
	//	*SimpleModemMessageBodyParser_DelimitedSize_FieldName
	Size isSimpleModemMessageBodyParser_DelimitedSize_Size `protobuf_oneof:"size"`
	// * Specify a terminator that marks the point the field terminates, optionally,
	// and we should continue to the next field. This is typically a single byte (i.e. 0x00).
	// This can be combined with a size to limit the amounts of bytes that are parsed.
	Terminator []byte `protobuf:"bytes,4,opt,name=terminator,proto3" json:"terminator,omitempty"`
}

func (m *SimpleModemMessageBodyParser_DelimitedSize) Reset() {
	*m = SimpleModemMessageBodyParser_DelimitedSize{}
}
func (m *SimpleModemMessageBodyParser_DelimitedSize) String() string {
	return proto.CompactTextString(m)
}
func (*SimpleModemMessageBodyParser_DelimitedSize) ProtoMessage() {}
func (*SimpleModemMessageBodyParser_DelimitedSize) Descriptor() ([]byte, []int) {
	return fileDescriptor12, []int{1, 1}
}

type isSimpleModemMessageBodyParser_DelimitedSize_Size interface{ isSimpleModemMessageBodyParser_DelimitedSize_Size() }

type SimpleModemMessageBodyParser_DelimitedSize_SizeBytes struct {
	SizeBytes int32 `protobuf:"varint,1,opt,name=size_bytes,json=sizeBytes,oneof"`
}
type SimpleModemMessageBodyParser_DelimitedSize_EndOfStream struct {
	EndOfStream bool `protobuf:"varint,2,opt,name=end_of_stream,json=endOfStream,oneof"`
}
type SimpleModemMessageBodyParser_DelimitedSize_FieldName struct {
	FieldName string `protobuf:"bytes,3,opt,name=field_name,json=fieldName,oneof"`
}

func (*SimpleModemMessageBodyParser_DelimitedSize_SizeBytes) isSimpleModemMessageBodyParser_DelimitedSize_Size() {
}
func (*SimpleModemMessageBodyParser_DelimitedSize_EndOfStream) isSimpleModemMessageBodyParser_DelimitedSize_Size() {
}
func (*SimpleModemMessageBodyParser_DelimitedSize_FieldName) isSimpleModemMessageBodyParser_DelimitedSize_Size() {
}

func (m *SimpleModemMessageBodyParser_DelimitedSize) GetSize() isSimpleModemMessageBodyParser_DelimitedSize_Size {
	if m != nil {
		return m.Size
	}
	return nil
}

func (m *SimpleModemMessageBodyParser_DelimitedSize) GetSizeBytes() int32 {
	if x, ok := m.GetSize().(*SimpleModemMessageBodyParser_DelimitedSize_SizeBytes); ok {
		return x.SizeBytes
	}
	return 0
}

func (m *SimpleModemMessageBodyParser_DelimitedSize) GetEndOfStream() bool {
	if x, ok := m.GetSize().(*SimpleModemMessageBodyParser_DelimitedSize_EndOfStream); ok {
		return x.EndOfStream
	}
	return false
}

func (m *SimpleModemMessageBodyParser_DelimitedSize) GetFieldName() string {
	if x, ok := m.GetSize().(*SimpleModemMessageBodyParser_DelimitedSize_FieldName); ok {
		return x.FieldName
	}
	return ""
}

func (m *SimpleModemMessageBodyParser_DelimitedSize) GetTerminator() []byte {
	if m != nil {
		return m.Terminator
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*SimpleModemMessageBodyParser_DelimitedSize) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _SimpleModemMessageBodyParser_DelimitedSize_OneofMarshaler, _SimpleModemMessageBodyParser_DelimitedSize_OneofUnmarshaler, _SimpleModemMessageBodyParser_DelimitedSize_OneofSizer, []interface{}{
		(*SimpleModemMessageBodyParser_DelimitedSize_SizeBytes)(nil),
		(*SimpleModemMessageBodyParser_DelimitedSize_EndOfStream)(nil),
		(*SimpleModemMessageBodyParser_DelimitedSize_FieldName)(nil),
	}
}

func _SimpleModemMessageBodyParser_DelimitedSize_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*SimpleModemMessageBodyParser_DelimitedSize)
	// size
	switch x := m.Size.(type) {
	case *SimpleModemMessageBodyParser_DelimitedSize_SizeBytes:
		b.EncodeVarint(1<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.SizeBytes))
	case *SimpleModemMessageBodyParser_DelimitedSize_EndOfStream:
		t := uint64(0)
		if x.EndOfStream {
			t = 1
		}
		b.EncodeVarint(2<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case *SimpleModemMessageBodyParser_DelimitedSize_FieldName:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.FieldName)
	case nil:
	default:
		return fmt.Errorf("SimpleModemMessageBodyParser_DelimitedSize.Size has unexpected type %T", x)
	}
	return nil
}

func _SimpleModemMessageBodyParser_DelimitedSize_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*SimpleModemMessageBodyParser_DelimitedSize)
	switch tag {
	case 1: // size.size_bytes
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Size = &SimpleModemMessageBodyParser_DelimitedSize_SizeBytes{int32(x)}
		return true, err
	case 2: // size.end_of_stream
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Size = &SimpleModemMessageBodyParser_DelimitedSize_EndOfStream{x != 0}
		return true, err
	case 3: // size.field_name
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Size = &SimpleModemMessageBodyParser_DelimitedSize_FieldName{x}
		return true, err
	default:
		return false, nil
	}
}

func _SimpleModemMessageBodyParser_DelimitedSize_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*SimpleModemMessageBodyParser_DelimitedSize)
	// size
	switch x := m.Size.(type) {
	case *SimpleModemMessageBodyParser_DelimitedSize_SizeBytes:
		n += proto.SizeVarint(1<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.SizeBytes))
	case *SimpleModemMessageBodyParser_DelimitedSize_EndOfStream:
		n += proto.SizeVarint(2<<3 | proto.WireVarint)
		n += 1
	case *SimpleModemMessageBodyParser_DelimitedSize_FieldName:
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.FieldName)))
		n += len(x.FieldName)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ModemMessageBodyParserSelection struct {
	Ids    []int32 `protobuf:"varint,1,rep,packed,name=ids" json:"ids,omitempty"`
	Search string  `protobuf:"bytes,2,opt,name=search" json:"search,omitempty"`
	// * Only return simple parsers, created using SimpleModemMessageBodyParser.
	OnlySimple bool `protobuf:"varint,3,opt,name=only_simple,json=onlySimple" json:"only_simple,omitempty"`
	// * Only return parsers created from an uploaded ksy file.
	OnlyKsyFile bool `protobuf:"varint,4,opt,name=only_ksy_file,json=onlyKsyFile" json:"only_ksy_file,omitempty"`
}

func (m *ModemMessageBodyParserSelection) Reset()         { *m = ModemMessageBodyParserSelection{} }
func (m *ModemMessageBodyParserSelection) String() string { return proto.CompactTextString(m) }
func (*ModemMessageBodyParserSelection) ProtoMessage()    {}
func (*ModemMessageBodyParserSelection) Descriptor() ([]byte, []int) {
	return fileDescriptor12, []int{2}
}

func (m *ModemMessageBodyParserSelection) GetIds() []int32 {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *ModemMessageBodyParserSelection) GetSearch() string {
	if m != nil {
		return m.Search
	}
	return ""
}

func (m *ModemMessageBodyParserSelection) GetOnlySimple() bool {
	if m != nil {
		return m.OnlySimple
	}
	return false
}

func (m *ModemMessageBodyParserSelection) GetOnlyKsyFile() bool {
	if m != nil {
		return m.OnlyKsyFile
	}
	return false
}

type ListModemMessageBodyParsersRequest struct {
	// Pick the organization to use (/impersonate). If unset, your default organization is used.
	Organization string                           `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	Selection    *ModemMessageBodyParserSelection `protobuf:"bytes,2,opt,name=selection" json:"selection,omitempty"`
	Pagination   *Pagination                      `protobuf:"bytes,3,opt,name=pagination" json:"pagination,omitempty"`
}

func (m *ListModemMessageBodyParsersRequest) Reset()         { *m = ListModemMessageBodyParsersRequest{} }
func (m *ListModemMessageBodyParsersRequest) String() string { return proto.CompactTextString(m) }
func (*ListModemMessageBodyParsersRequest) ProtoMessage()    {}
func (*ListModemMessageBodyParsersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor12, []int{3}
}

func (m *ListModemMessageBodyParsersRequest) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *ListModemMessageBodyParsersRequest) GetSelection() *ModemMessageBodyParserSelection {
	if m != nil {
		return m.Selection
	}
	return nil
}

func (m *ListModemMessageBodyParsersRequest) GetPagination() *Pagination {
	if m != nil {
		return m.Pagination
	}
	return nil
}

type ListModemMessageBodyParsersRequest_Response struct {
	Parsers    []*ModemMessageBodyParser           `protobuf:"bytes,1,rep,name=parsers" json:"parsers,omitempty"`
	Pagination *Pagination_Result                  `protobuf:"bytes,2,opt,name=pagination" json:"pagination,omitempty"`
	Request    *ListModemMessageBodyParsersRequest `protobuf:"bytes,3,opt,name=request" json:"request,omitempty"`
}

func (m *ListModemMessageBodyParsersRequest_Response) Reset() {
	*m = ListModemMessageBodyParsersRequest_Response{}
}
func (m *ListModemMessageBodyParsersRequest_Response) String() string {
	return proto.CompactTextString(m)
}
func (*ListModemMessageBodyParsersRequest_Response) ProtoMessage() {}
func (*ListModemMessageBodyParsersRequest_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor12, []int{3, 0}
}

func (m *ListModemMessageBodyParsersRequest_Response) GetParsers() []*ModemMessageBodyParser {
	if m != nil {
		return m.Parsers
	}
	return nil
}

func (m *ListModemMessageBodyParsersRequest_Response) GetPagination() *Pagination_Result {
	if m != nil {
		return m.Pagination
	}
	return nil
}

func (m *ListModemMessageBodyParsersRequest_Response) GetRequest() *ListModemMessageBodyParsersRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

type UploadModemMessageBodyParserRequest struct {
	// Pick the organization to use (/impersonate). If unset, your default organization is used.
	Organization string `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	ContentKsy   string `protobuf:"bytes,3,opt,name=content_ksy,json=contentKsy" json:"content_ksy,omitempty"`
}

func (m *UploadModemMessageBodyParserRequest) Reset()         { *m = UploadModemMessageBodyParserRequest{} }
func (m *UploadModemMessageBodyParserRequest) String() string { return proto.CompactTextString(m) }
func (*UploadModemMessageBodyParserRequest) ProtoMessage()    {}
func (*UploadModemMessageBodyParserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor12, []int{4}
}

func (m *UploadModemMessageBodyParserRequest) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *UploadModemMessageBodyParserRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UploadModemMessageBodyParserRequest) GetContentKsy() string {
	if m != nil {
		return m.ContentKsy
	}
	return ""
}

type UpdateUploadedModemMessageBodyParserRequest struct {
	// Pick the organization to use (/impersonate). If unset, your default organization is used.
	Organization string `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	Id           int32  `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	ContentKsy   string `protobuf:"bytes,3,opt,name=content_ksy,json=contentKsy" json:"content_ksy,omitempty"`
}

func (m *UpdateUploadedModemMessageBodyParserRequest) Reset() {
	*m = UpdateUploadedModemMessageBodyParserRequest{}
}
func (m *UpdateUploadedModemMessageBodyParserRequest) String() string {
	return proto.CompactTextString(m)
}
func (*UpdateUploadedModemMessageBodyParserRequest) ProtoMessage() {}
func (*UpdateUploadedModemMessageBodyParserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor12, []int{5}
}

func (m *UpdateUploadedModemMessageBodyParserRequest) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *UpdateUploadedModemMessageBodyParserRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UpdateUploadedModemMessageBodyParserRequest) GetContentKsy() string {
	if m != nil {
		return m.ContentKsy
	}
	return ""
}

type CreateSimpleModemMessageBodyParserRequest struct {
	// Pick the organization to use (/impersonate). If unset, your default organization is used.
	Organization string                        `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	Parser       *SimpleModemMessageBodyParser `protobuf:"bytes,2,opt,name=parser" json:"parser,omitempty"`
}

func (m *CreateSimpleModemMessageBodyParserRequest) Reset() {
	*m = CreateSimpleModemMessageBodyParserRequest{}
}
func (m *CreateSimpleModemMessageBodyParserRequest) String() string { return proto.CompactTextString(m) }
func (*CreateSimpleModemMessageBodyParserRequest) ProtoMessage()    {}
func (*CreateSimpleModemMessageBodyParserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor12, []int{6}
}

func (m *CreateSimpleModemMessageBodyParserRequest) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *CreateSimpleModemMessageBodyParserRequest) GetParser() *SimpleModemMessageBodyParser {
	if m != nil {
		return m.Parser
	}
	return nil
}

type UpdateSimpleModemMessageBodyParserRequest struct {
	// Pick the organization to use (/impersonate). If unset, your default organization is used.
	Organization string                        `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	Id           int32                         `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	Parser       *SimpleModemMessageBodyParser `protobuf:"bytes,3,opt,name=parser" json:"parser,omitempty"`
}

func (m *UpdateSimpleModemMessageBodyParserRequest) Reset() {
	*m = UpdateSimpleModemMessageBodyParserRequest{}
}
func (m *UpdateSimpleModemMessageBodyParserRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateSimpleModemMessageBodyParserRequest) ProtoMessage()    {}
func (*UpdateSimpleModemMessageBodyParserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor12, []int{7}
}

func (m *UpdateSimpleModemMessageBodyParserRequest) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *UpdateSimpleModemMessageBodyParserRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UpdateSimpleModemMessageBodyParserRequest) GetParser() *SimpleModemMessageBodyParser {
	if m != nil {
		return m.Parser
	}
	return nil
}

type RenameModemMessageBodyParserRequest struct {
	// Pick the organization to use (/impersonate). If unset, your default organization is used.
	Organization string `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	Id           int32  `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	Name         string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
}

func (m *RenameModemMessageBodyParserRequest) Reset()         { *m = RenameModemMessageBodyParserRequest{} }
func (m *RenameModemMessageBodyParserRequest) String() string { return proto.CompactTextString(m) }
func (*RenameModemMessageBodyParserRequest) ProtoMessage()    {}
func (*RenameModemMessageBodyParserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor12, []int{8}
}

func (m *RenameModemMessageBodyParserRequest) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *RenameModemMessageBodyParserRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *RenameModemMessageBodyParserRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type DeleteModemMessageBodyParserRequest struct {
	// Pick the organization to use (/impersonate). If unset, your default organization is used.
	Organization string                           `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	Selection    *ModemMessageBodyParserSelection `protobuf:"bytes,2,opt,name=selection" json:"selection,omitempty"`
}

func (m *DeleteModemMessageBodyParserRequest) Reset()         { *m = DeleteModemMessageBodyParserRequest{} }
func (m *DeleteModemMessageBodyParserRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteModemMessageBodyParserRequest) ProtoMessage()    {}
func (*DeleteModemMessageBodyParserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor12, []int{9}
}

func (m *DeleteModemMessageBodyParserRequest) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *DeleteModemMessageBodyParserRequest) GetSelection() *ModemMessageBodyParserSelection {
	if m != nil {
		return m.Selection
	}
	return nil
}

type DeleteModemMessageBodyParserRequest_Response struct {
}

func (m *DeleteModemMessageBodyParserRequest_Response) Reset() {
	*m = DeleteModemMessageBodyParserRequest_Response{}
}
func (m *DeleteModemMessageBodyParserRequest_Response) String() string {
	return proto.CompactTextString(m)
}
func (*DeleteModemMessageBodyParserRequest_Response) ProtoMessage() {}
func (*DeleteModemMessageBodyParserRequest_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor12, []int{9, 0}
}

type ListAssignedParsersRequest struct {
	Organization   string                           `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	Selection      *ModemMessageBodyParserSelection `protobuf:"bytes,2,opt,name=selection" json:"selection,omitempty"`
	ModemSelection *ModemSelection                  `protobuf:"bytes,3,opt,name=modem_selection,json=modemSelection" json:"modem_selection,omitempty"`
	Pagination     *Pagination                      `protobuf:"bytes,4,opt,name=pagination" json:"pagination,omitempty"`
}

func (m *ListAssignedParsersRequest) Reset()                    { *m = ListAssignedParsersRequest{} }
func (m *ListAssignedParsersRequest) String() string            { return proto.CompactTextString(m) }
func (*ListAssignedParsersRequest) ProtoMessage()               {}
func (*ListAssignedParsersRequest) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{10} }

func (m *ListAssignedParsersRequest) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *ListAssignedParsersRequest) GetSelection() *ModemMessageBodyParserSelection {
	if m != nil {
		return m.Selection
	}
	return nil
}

func (m *ListAssignedParsersRequest) GetModemSelection() *ModemSelection {
	if m != nil {
		return m.ModemSelection
	}
	return nil
}

func (m *ListAssignedParsersRequest) GetPagination() *Pagination {
	if m != nil {
		return m.Pagination
	}
	return nil
}

type ListAssignedParsersRequest_Response struct {
	AssignedParsers []*ListAssignedParsersRequest_Response_AssignedParsers `protobuf:"bytes,1,rep,name=assigned_parsers,json=assignedParsers" json:"assigned_parsers,omitempty"`
	Request         *ListAssignedParsersRequest                            `protobuf:"bytes,2,opt,name=request" json:"request,omitempty"`
	Pagination      *Pagination_Result                                     `protobuf:"bytes,3,opt,name=pagination" json:"pagination,omitempty"`
}

func (m *ListAssignedParsersRequest_Response) Reset()         { *m = ListAssignedParsersRequest_Response{} }
func (m *ListAssignedParsersRequest_Response) String() string { return proto.CompactTextString(m) }
func (*ListAssignedParsersRequest_Response) ProtoMessage()    {}
func (*ListAssignedParsersRequest_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor12, []int{10, 0}
}

func (m *ListAssignedParsersRequest_Response) GetAssignedParsers() []*ListAssignedParsersRequest_Response_AssignedParsers {
	if m != nil {
		return m.AssignedParsers
	}
	return nil
}

func (m *ListAssignedParsersRequest_Response) GetRequest() *ListAssignedParsersRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *ListAssignedParsersRequest_Response) GetPagination() *Pagination_Result {
	if m != nil {
		return m.Pagination
	}
	return nil
}

type ListAssignedParsersRequest_Response_AssignedParsers struct {
	ModemNumber string                    `protobuf:"bytes,1,opt,name=modem_number,json=modemNumber" json:"modem_number,omitempty"`
	Parsers     []*ModemMessageBodyParser `protobuf:"bytes,2,rep,name=parsers" json:"parsers,omitempty"`
}

func (m *ListAssignedParsersRequest_Response_AssignedParsers) Reset() {
	*m = ListAssignedParsersRequest_Response_AssignedParsers{}
}
func (m *ListAssignedParsersRequest_Response_AssignedParsers) String() string {
	return proto.CompactTextString(m)
}
func (*ListAssignedParsersRequest_Response_AssignedParsers) ProtoMessage() {}
func (*ListAssignedParsersRequest_Response_AssignedParsers) Descriptor() ([]byte, []int) {
	return fileDescriptor12, []int{10, 0, 0}
}

func (m *ListAssignedParsersRequest_Response_AssignedParsers) GetModemNumber() string {
	if m != nil {
		return m.ModemNumber
	}
	return ""
}

func (m *ListAssignedParsersRequest_Response_AssignedParsers) GetParsers() []*ModemMessageBodyParser {
	if m != nil {
		return m.Parsers
	}
	return nil
}

type AssignModemMessageBodyParserToModemsRequest struct {
	// Pick the organization to use (/impersonate). If unset, your default organization is used.
	Organization   string                           `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	Selection      *ModemMessageBodyParserSelection `protobuf:"bytes,2,opt,name=selection" json:"selection,omitempty"`
	ModemSelection *ModemSelection                  `protobuf:"bytes,3,opt,name=modem_selection,json=modemSelection" json:"modem_selection,omitempty"`
}

func (m *AssignModemMessageBodyParserToModemsRequest) Reset() {
	*m = AssignModemMessageBodyParserToModemsRequest{}
}
func (m *AssignModemMessageBodyParserToModemsRequest) String() string {
	return proto.CompactTextString(m)
}
func (*AssignModemMessageBodyParserToModemsRequest) ProtoMessage() {}
func (*AssignModemMessageBodyParserToModemsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor12, []int{11}
}

func (m *AssignModemMessageBodyParserToModemsRequest) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *AssignModemMessageBodyParserToModemsRequest) GetSelection() *ModemMessageBodyParserSelection {
	if m != nil {
		return m.Selection
	}
	return nil
}

func (m *AssignModemMessageBodyParserToModemsRequest) GetModemSelection() *ModemSelection {
	if m != nil {
		return m.ModemSelection
	}
	return nil
}

type AssignModemMessageBodyParserToModemsRequest_Response struct {
	AssignedParsers []*ListAssignedParsersRequest_Response_AssignedParsers `protobuf:"bytes,3,rep,name=assigned_parsers,json=assignedParsers" json:"assigned_parsers,omitempty"`
	Request         *AssignModemMessageBodyParserToModemsRequest           `protobuf:"bytes,2,opt,name=request" json:"request,omitempty"`
}

func (m *AssignModemMessageBodyParserToModemsRequest_Response) Reset() {
	*m = AssignModemMessageBodyParserToModemsRequest_Response{}
}
func (m *AssignModemMessageBodyParserToModemsRequest_Response) String() string {
	return proto.CompactTextString(m)
}
func (*AssignModemMessageBodyParserToModemsRequest_Response) ProtoMessage() {}
func (*AssignModemMessageBodyParserToModemsRequest_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor12, []int{11, 0}
}

func (m *AssignModemMessageBodyParserToModemsRequest_Response) GetAssignedParsers() []*ListAssignedParsersRequest_Response_AssignedParsers {
	if m != nil {
		return m.AssignedParsers
	}
	return nil
}

func (m *AssignModemMessageBodyParserToModemsRequest_Response) GetRequest() *AssignModemMessageBodyParserToModemsRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

type RemoveModemMessageBodyParserFromModemsRequest struct {
	// Pick the organization to use (/impersonate). If unset, your default organization is used.
	Organization   string                           `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	Selection      *ModemMessageBodyParserSelection `protobuf:"bytes,2,opt,name=selection" json:"selection,omitempty"`
	ModemSelection *ModemSelection                  `protobuf:"bytes,3,opt,name=modem_selection,json=modemSelection" json:"modem_selection,omitempty"`
}

func (m *RemoveModemMessageBodyParserFromModemsRequest) Reset() {
	*m = RemoveModemMessageBodyParserFromModemsRequest{}
}
func (m *RemoveModemMessageBodyParserFromModemsRequest) String() string {
	return proto.CompactTextString(m)
}
func (*RemoveModemMessageBodyParserFromModemsRequest) ProtoMessage() {}
func (*RemoveModemMessageBodyParserFromModemsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor12, []int{12}
}

func (m *RemoveModemMessageBodyParserFromModemsRequest) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *RemoveModemMessageBodyParserFromModemsRequest) GetSelection() *ModemMessageBodyParserSelection {
	if m != nil {
		return m.Selection
	}
	return nil
}

func (m *RemoveModemMessageBodyParserFromModemsRequest) GetModemSelection() *ModemSelection {
	if m != nil {
		return m.ModemSelection
	}
	return nil
}

type RemoveModemMessageBodyParserFromModemsRequest_Response struct {
	AssignedParsers []*ListAssignedParsersRequest_Response_AssignedParsers `protobuf:"bytes,3,rep,name=assigned_parsers,json=assignedParsers" json:"assigned_parsers,omitempty"`
	Request         *RemoveModemMessageBodyParserFromModemsRequest         `protobuf:"bytes,2,opt,name=request" json:"request,omitempty"`
}

func (m *RemoveModemMessageBodyParserFromModemsRequest_Response) Reset() {
	*m = RemoveModemMessageBodyParserFromModemsRequest_Response{}
}
func (m *RemoveModemMessageBodyParserFromModemsRequest_Response) String() string {
	return proto.CompactTextString(m)
}
func (*RemoveModemMessageBodyParserFromModemsRequest_Response) ProtoMessage() {}
func (*RemoveModemMessageBodyParserFromModemsRequest_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor12, []int{12, 0}
}

func (m *RemoveModemMessageBodyParserFromModemsRequest_Response) GetAssignedParsers() []*ListAssignedParsersRequest_Response_AssignedParsers {
	if m != nil {
		return m.AssignedParsers
	}
	return nil
}

func (m *RemoveModemMessageBodyParserFromModemsRequest_Response) GetRequest() *RemoveModemMessageBodyParserFromModemsRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

func init() {
	proto.RegisterType((*ModemMessageBodyParser)(nil), "hiber.modem.message.bodyparser.ModemMessageBodyParser")
	proto.RegisterType((*SimpleModemMessageBodyParser)(nil), "hiber.modem.message.bodyparser.SimpleModemMessageBodyParser")
	proto.RegisterType((*SimpleModemMessageBodyParser_Field)(nil), "hiber.modem.message.bodyparser.SimpleModemMessageBodyParser.Field")
	proto.RegisterType((*SimpleModemMessageBodyParser_Field_Integer)(nil), "hiber.modem.message.bodyparser.SimpleModemMessageBodyParser.Field.Integer")
	proto.RegisterType((*SimpleModemMessageBodyParser_Field_Float)(nil), "hiber.modem.message.bodyparser.SimpleModemMessageBodyParser.Field.Float")
	proto.RegisterType((*SimpleModemMessageBodyParser_Field_Bytes)(nil), "hiber.modem.message.bodyparser.SimpleModemMessageBodyParser.Field.Bytes")
	proto.RegisterType((*SimpleModemMessageBodyParser_Field_String)(nil), "hiber.modem.message.bodyparser.SimpleModemMessageBodyParser.Field.String")
	proto.RegisterType((*SimpleModemMessageBodyParser_DelimitedSize)(nil), "hiber.modem.message.bodyparser.SimpleModemMessageBodyParser.DelimitedSize")
	proto.RegisterType((*ModemMessageBodyParserSelection)(nil), "hiber.modem.message.bodyparser.ModemMessageBodyParserSelection")
	proto.RegisterType((*ListModemMessageBodyParsersRequest)(nil), "hiber.modem.message.bodyparser.ListModemMessageBodyParsersRequest")
	proto.RegisterType((*ListModemMessageBodyParsersRequest_Response)(nil), "hiber.modem.message.bodyparser.ListModemMessageBodyParsersRequest.Response")
	proto.RegisterType((*UploadModemMessageBodyParserRequest)(nil), "hiber.modem.message.bodyparser.UploadModemMessageBodyParserRequest")
	proto.RegisterType((*UpdateUploadedModemMessageBodyParserRequest)(nil), "hiber.modem.message.bodyparser.UpdateUploadedModemMessageBodyParserRequest")
	proto.RegisterType((*CreateSimpleModemMessageBodyParserRequest)(nil), "hiber.modem.message.bodyparser.CreateSimpleModemMessageBodyParserRequest")
	proto.RegisterType((*UpdateSimpleModemMessageBodyParserRequest)(nil), "hiber.modem.message.bodyparser.UpdateSimpleModemMessageBodyParserRequest")
	proto.RegisterType((*RenameModemMessageBodyParserRequest)(nil), "hiber.modem.message.bodyparser.RenameModemMessageBodyParserRequest")
	proto.RegisterType((*DeleteModemMessageBodyParserRequest)(nil), "hiber.modem.message.bodyparser.DeleteModemMessageBodyParserRequest")
	proto.RegisterType((*DeleteModemMessageBodyParserRequest_Response)(nil), "hiber.modem.message.bodyparser.DeleteModemMessageBodyParserRequest.Response")
	proto.RegisterType((*ListAssignedParsersRequest)(nil), "hiber.modem.message.bodyparser.ListAssignedParsersRequest")
	proto.RegisterType((*ListAssignedParsersRequest_Response)(nil), "hiber.modem.message.bodyparser.ListAssignedParsersRequest.Response")
	proto.RegisterType((*ListAssignedParsersRequest_Response_AssignedParsers)(nil), "hiber.modem.message.bodyparser.ListAssignedParsersRequest.Response.AssignedParsers")
	proto.RegisterType((*AssignModemMessageBodyParserToModemsRequest)(nil), "hiber.modem.message.bodyparser.AssignModemMessageBodyParserToModemsRequest")
	proto.RegisterType((*AssignModemMessageBodyParserToModemsRequest_Response)(nil), "hiber.modem.message.bodyparser.AssignModemMessageBodyParserToModemsRequest.Response")
	proto.RegisterType((*RemoveModemMessageBodyParserFromModemsRequest)(nil), "hiber.modem.message.bodyparser.RemoveModemMessageBodyParserFromModemsRequest")
	proto.RegisterType((*RemoveModemMessageBodyParserFromModemsRequest_Response)(nil), "hiber.modem.message.bodyparser.RemoveModemMessageBodyParserFromModemsRequest.Response")
	proto.RegisterEnum("hiber.modem.message.bodyparser.SimpleModemMessageBodyParser_Endian", SimpleModemMessageBodyParser_Endian_name, SimpleModemMessageBodyParser_Endian_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ModemMessageBodyParserService service

type ModemMessageBodyParserServiceClient interface {
	List(ctx context.Context, in *ListModemMessageBodyParsersRequest, opts ...grpc.CallOption) (*ListModemMessageBodyParsersRequest_Response, error)
	Upload(ctx context.Context, in *UploadModemMessageBodyParserRequest, opts ...grpc.CallOption) (*ModemMessageBodyParser, error)
	UpdateUploaded(ctx context.Context, in *UpdateUploadedModemMessageBodyParserRequest, opts ...grpc.CallOption) (*ModemMessageBodyParser, error)
	CreateSimple(ctx context.Context, in *CreateSimpleModemMessageBodyParserRequest, opts ...grpc.CallOption) (*ModemMessageBodyParser, error)
	UpdateSimple(ctx context.Context, in *UpdateSimpleModemMessageBodyParserRequest, opts ...grpc.CallOption) (*ModemMessageBodyParser, error)
	Rename(ctx context.Context, in *RenameModemMessageBodyParserRequest, opts ...grpc.CallOption) (*ModemMessageBodyParser, error)
	Delete(ctx context.Context, in *DeleteModemMessageBodyParserRequest, opts ...grpc.CallOption) (*DeleteModemMessageBodyParserRequest_Response, error)
	ListAssignedParsers(ctx context.Context, in *ListAssignedParsersRequest, opts ...grpc.CallOption) (*ListAssignedParsersRequest_Response, error)
	AssignToModems(ctx context.Context, in *AssignModemMessageBodyParserToModemsRequest, opts ...grpc.CallOption) (*AssignModemMessageBodyParserToModemsRequest_Response, error)
	RemoveFromModems(ctx context.Context, in *RemoveModemMessageBodyParserFromModemsRequest, opts ...grpc.CallOption) (*RemoveModemMessageBodyParserFromModemsRequest_Response, error)
}

type modemMessageBodyParserServiceClient struct {
	cc *grpc.ClientConn
}

func NewModemMessageBodyParserServiceClient(cc *grpc.ClientConn) ModemMessageBodyParserServiceClient {
	return &modemMessageBodyParserServiceClient{cc}
}

func (c *modemMessageBodyParserServiceClient) List(ctx context.Context, in *ListModemMessageBodyParsersRequest, opts ...grpc.CallOption) (*ListModemMessageBodyParsersRequest_Response, error) {
	out := new(ListModemMessageBodyParsersRequest_Response)
	err := grpc.Invoke(ctx, "/hiber.modem.message.bodyparser.ModemMessageBodyParserService/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *modemMessageBodyParserServiceClient) Upload(ctx context.Context, in *UploadModemMessageBodyParserRequest, opts ...grpc.CallOption) (*ModemMessageBodyParser, error) {
	out := new(ModemMessageBodyParser)
	err := grpc.Invoke(ctx, "/hiber.modem.message.bodyparser.ModemMessageBodyParserService/Upload", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *modemMessageBodyParserServiceClient) UpdateUploaded(ctx context.Context, in *UpdateUploadedModemMessageBodyParserRequest, opts ...grpc.CallOption) (*ModemMessageBodyParser, error) {
	out := new(ModemMessageBodyParser)
	err := grpc.Invoke(ctx, "/hiber.modem.message.bodyparser.ModemMessageBodyParserService/UpdateUploaded", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *modemMessageBodyParserServiceClient) CreateSimple(ctx context.Context, in *CreateSimpleModemMessageBodyParserRequest, opts ...grpc.CallOption) (*ModemMessageBodyParser, error) {
	out := new(ModemMessageBodyParser)
	err := grpc.Invoke(ctx, "/hiber.modem.message.bodyparser.ModemMessageBodyParserService/CreateSimple", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *modemMessageBodyParserServiceClient) UpdateSimple(ctx context.Context, in *UpdateSimpleModemMessageBodyParserRequest, opts ...grpc.CallOption) (*ModemMessageBodyParser, error) {
	out := new(ModemMessageBodyParser)
	err := grpc.Invoke(ctx, "/hiber.modem.message.bodyparser.ModemMessageBodyParserService/UpdateSimple", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *modemMessageBodyParserServiceClient) Rename(ctx context.Context, in *RenameModemMessageBodyParserRequest, opts ...grpc.CallOption) (*ModemMessageBodyParser, error) {
	out := new(ModemMessageBodyParser)
	err := grpc.Invoke(ctx, "/hiber.modem.message.bodyparser.ModemMessageBodyParserService/Rename", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *modemMessageBodyParserServiceClient) Delete(ctx context.Context, in *DeleteModemMessageBodyParserRequest, opts ...grpc.CallOption) (*DeleteModemMessageBodyParserRequest_Response, error) {
	out := new(DeleteModemMessageBodyParserRequest_Response)
	err := grpc.Invoke(ctx, "/hiber.modem.message.bodyparser.ModemMessageBodyParserService/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *modemMessageBodyParserServiceClient) ListAssignedParsers(ctx context.Context, in *ListAssignedParsersRequest, opts ...grpc.CallOption) (*ListAssignedParsersRequest_Response, error) {
	out := new(ListAssignedParsersRequest_Response)
	err := grpc.Invoke(ctx, "/hiber.modem.message.bodyparser.ModemMessageBodyParserService/ListAssignedParsers", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *modemMessageBodyParserServiceClient) AssignToModems(ctx context.Context, in *AssignModemMessageBodyParserToModemsRequest, opts ...grpc.CallOption) (*AssignModemMessageBodyParserToModemsRequest_Response, error) {
	out := new(AssignModemMessageBodyParserToModemsRequest_Response)
	err := grpc.Invoke(ctx, "/hiber.modem.message.bodyparser.ModemMessageBodyParserService/AssignToModems", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *modemMessageBodyParserServiceClient) RemoveFromModems(ctx context.Context, in *RemoveModemMessageBodyParserFromModemsRequest, opts ...grpc.CallOption) (*RemoveModemMessageBodyParserFromModemsRequest_Response, error) {
	out := new(RemoveModemMessageBodyParserFromModemsRequest_Response)
	err := grpc.Invoke(ctx, "/hiber.modem.message.bodyparser.ModemMessageBodyParserService/RemoveFromModems", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ModemMessageBodyParserService service

type ModemMessageBodyParserServiceServer interface {
	List(context.Context, *ListModemMessageBodyParsersRequest) (*ListModemMessageBodyParsersRequest_Response, error)
	Upload(context.Context, *UploadModemMessageBodyParserRequest) (*ModemMessageBodyParser, error)
	UpdateUploaded(context.Context, *UpdateUploadedModemMessageBodyParserRequest) (*ModemMessageBodyParser, error)
	CreateSimple(context.Context, *CreateSimpleModemMessageBodyParserRequest) (*ModemMessageBodyParser, error)
	UpdateSimple(context.Context, *UpdateSimpleModemMessageBodyParserRequest) (*ModemMessageBodyParser, error)
	Rename(context.Context, *RenameModemMessageBodyParserRequest) (*ModemMessageBodyParser, error)
	Delete(context.Context, *DeleteModemMessageBodyParserRequest) (*DeleteModemMessageBodyParserRequest_Response, error)
	ListAssignedParsers(context.Context, *ListAssignedParsersRequest) (*ListAssignedParsersRequest_Response, error)
	AssignToModems(context.Context, *AssignModemMessageBodyParserToModemsRequest) (*AssignModemMessageBodyParserToModemsRequest_Response, error)
	RemoveFromModems(context.Context, *RemoveModemMessageBodyParserFromModemsRequest) (*RemoveModemMessageBodyParserFromModemsRequest_Response, error)
}

func RegisterModemMessageBodyParserServiceServer(s *grpc.Server, srv ModemMessageBodyParserServiceServer) {
	s.RegisterService(&_ModemMessageBodyParserService_serviceDesc, srv)
}

func _ModemMessageBodyParserService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListModemMessageBodyParsersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModemMessageBodyParserServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hiber.modem.message.bodyparser.ModemMessageBodyParserService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModemMessageBodyParserServiceServer).List(ctx, req.(*ListModemMessageBodyParsersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModemMessageBodyParserService_Upload_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UploadModemMessageBodyParserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModemMessageBodyParserServiceServer).Upload(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hiber.modem.message.bodyparser.ModemMessageBodyParserService/Upload",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModemMessageBodyParserServiceServer).Upload(ctx, req.(*UploadModemMessageBodyParserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModemMessageBodyParserService_UpdateUploaded_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUploadedModemMessageBodyParserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModemMessageBodyParserServiceServer).UpdateUploaded(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hiber.modem.message.bodyparser.ModemMessageBodyParserService/UpdateUploaded",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModemMessageBodyParserServiceServer).UpdateUploaded(ctx, req.(*UpdateUploadedModemMessageBodyParserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModemMessageBodyParserService_CreateSimple_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSimpleModemMessageBodyParserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModemMessageBodyParserServiceServer).CreateSimple(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hiber.modem.message.bodyparser.ModemMessageBodyParserService/CreateSimple",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModemMessageBodyParserServiceServer).CreateSimple(ctx, req.(*CreateSimpleModemMessageBodyParserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModemMessageBodyParserService_UpdateSimple_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSimpleModemMessageBodyParserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModemMessageBodyParserServiceServer).UpdateSimple(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hiber.modem.message.bodyparser.ModemMessageBodyParserService/UpdateSimple",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModemMessageBodyParserServiceServer).UpdateSimple(ctx, req.(*UpdateSimpleModemMessageBodyParserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModemMessageBodyParserService_Rename_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RenameModemMessageBodyParserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModemMessageBodyParserServiceServer).Rename(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hiber.modem.message.bodyparser.ModemMessageBodyParserService/Rename",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModemMessageBodyParserServiceServer).Rename(ctx, req.(*RenameModemMessageBodyParserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModemMessageBodyParserService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteModemMessageBodyParserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModemMessageBodyParserServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hiber.modem.message.bodyparser.ModemMessageBodyParserService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModemMessageBodyParserServiceServer).Delete(ctx, req.(*DeleteModemMessageBodyParserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModemMessageBodyParserService_ListAssignedParsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAssignedParsersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModemMessageBodyParserServiceServer).ListAssignedParsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hiber.modem.message.bodyparser.ModemMessageBodyParserService/ListAssignedParsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModemMessageBodyParserServiceServer).ListAssignedParsers(ctx, req.(*ListAssignedParsersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModemMessageBodyParserService_AssignToModems_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AssignModemMessageBodyParserToModemsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModemMessageBodyParserServiceServer).AssignToModems(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hiber.modem.message.bodyparser.ModemMessageBodyParserService/AssignToModems",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModemMessageBodyParserServiceServer).AssignToModems(ctx, req.(*AssignModemMessageBodyParserToModemsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModemMessageBodyParserService_RemoveFromModems_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveModemMessageBodyParserFromModemsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModemMessageBodyParserServiceServer).RemoveFromModems(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hiber.modem.message.bodyparser.ModemMessageBodyParserService/RemoveFromModems",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModemMessageBodyParserServiceServer).RemoveFromModems(ctx, req.(*RemoveModemMessageBodyParserFromModemsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ModemMessageBodyParserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hiber.modem.message.bodyparser.ModemMessageBodyParserService",
	HandlerType: (*ModemMessageBodyParserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _ModemMessageBodyParserService_List_Handler,
		},
		{
			MethodName: "Upload",
			Handler:    _ModemMessageBodyParserService_Upload_Handler,
		},
		{
			MethodName: "UpdateUploaded",
			Handler:    _ModemMessageBodyParserService_UpdateUploaded_Handler,
		},
		{
			MethodName: "CreateSimple",
			Handler:    _ModemMessageBodyParserService_CreateSimple_Handler,
		},
		{
			MethodName: "UpdateSimple",
			Handler:    _ModemMessageBodyParserService_UpdateSimple_Handler,
		},
		{
			MethodName: "Rename",
			Handler:    _ModemMessageBodyParserService_Rename_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _ModemMessageBodyParserService_Delete_Handler,
		},
		{
			MethodName: "ListAssignedParsers",
			Handler:    _ModemMessageBodyParserService_ListAssignedParsers_Handler,
		},
		{
			MethodName: "AssignToModems",
			Handler:    _ModemMessageBodyParserService_AssignToModems_Handler,
		},
		{
			MethodName: "RemoveFromModems",
			Handler:    _ModemMessageBodyParserService_RemoveFromModems_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "modem_message_body_parser.proto",
}

func init() { proto.RegisterFile("modem_message_body_parser.proto", fileDescriptor12) }

var fileDescriptor12 = []byte{
	// 1428 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x59, 0xcb, 0x6f, 0x1b, 0x45,
	0x18, 0xf7, 0x78, 0x6d, 0xc7, 0xf9, 0xfc, 0x68, 0x3a, 0x15, 0x95, 0x59, 0x68, 0x93, 0x6e, 0x7b,
	0x48, 0x55, 0xb1, 0x12, 0x46, 0x42, 0x15, 0x42, 0x42, 0x71, 0x93, 0xe0, 0x34, 0x69, 0x88, 0x36,
	0x2e, 0x87, 0xf2, 0x58, 0xd6, 0xde, 0xb1, 0xbb, 0x74, 0x1f, 0x66, 0x67, 0x53, 0xd5, 0x3d, 0xf4,
	0xc0, 0xeb, 0x0c, 0x07, 0xe0, 0x80, 0x10, 0x07, 0xc4, 0x89, 0x1b, 0x8f, 0x03, 0x17, 0xe0, 0x5f,
	0xe0, 0x3f, 0xe1, 0x50, 0x09, 0x71, 0x43, 0xf3, 0xf0, 0x13, 0xa7, 0xeb, 0xd8, 0x5b, 0x54, 0xf5,
	0xe6, 0x99, 0x9d, 0xfd, 0xfd, 0x7e, 0xf3, 0x7d, 0xdf, 0xfc, 0xe6, 0xdb, 0x04, 0x56, 0xbd, 0xc0,
	0x26, 0x9e, 0xe9, 0x11, 0x4a, 0xad, 0x0e, 0x31, 0x9b, 0x81, 0xdd, 0x33, 0xbb, 0x56, 0x48, 0x49,
	0xa8, 0x77, 0xc3, 0x20, 0x0a, 0xf0, 0xf9, 0xdb, 0x4e, 0x93, 0x84, 0x3a, 0x5f, 0xa6, 0xcb, 0x65,
	0x3a, 0x5b, 0x26, 0x56, 0xa9, 0xd0, 0xb4, 0x28, 0x11, 0x6b, 0xd5, 0x82, 0x58, 0xc5, 0x07, 0xda,
	0x1f, 0x08, 0xce, 0xde, 0x60, 0xe3, 0x1b, 0xe2, 0xa5, 0x5a, 0x60, 0xf7, 0x0e, 0xf8, 0x3b, 0xb8,
	0x0c, 0x69, 0xc7, 0xae, 0xa0, 0x35, 0xb4, 0x9e, 0x35, 0xd2, 0x8e, 0x8d, 0x31, 0x64, 0x7c, 0xcb,
	0x23, 0x95, 0xf4, 0x1a, 0x5a, 0x5f, 0x36, 0xf8, 0x6f, 0xbc, 0x0a, 0x85, 0x56, 0xe0, 0x47, 0xc4,
	0x8f, 0xcc, 0x3b, 0xb4, 0x57, 0x51, 0xf8, 0x23, 0x90, 0x53, 0xbb, 0xb4, 0x87, 0x2d, 0x28, 0x51,
	0xc7, 0xeb, 0xba, 0x44, 0xea, 0xad, 0x64, 0xd6, 0xd0, 0x7a, 0xa1, 0xfa, 0xaa, 0xfe, 0x68, 0xc1,
	0xfa, 0x21, 0x7f, 0x69, 0xba, 0x32, 0xa3, 0x28, 0x20, 0xc5, 0x48, 0xfb, 0xbd, 0x04, 0xcf, 0x3f,
	0x6a, 0xf9, 0x40, 0x38, 0x1a, 0x11, 0x7e, 0x09, 0x4a, 0x76, 0xd0, 0x3a, 0xf2, 0x88, 0x1f, 0x59,
	0x91, 0x13, 0xf8, 0x72, 0x57, 0xe3, 0x93, 0xf8, 0x16, 0xe4, 0xda, 0x0e, 0x71, 0x6d, 0x5a, 0x51,
	0xd6, 0x94, 0xf5, 0x42, 0xb5, 0xb6, 0x88, 0x6c, 0x7d, 0x9b, 0x41, 0x19, 0x12, 0x11, 0xbf, 0x0f,
	0x65, 0x9b, 0xb4, 0xad, 0x23, 0x37, 0x32, 0x89, 0x6f, 0x3b, 0x96, 0xcf, 0x43, 0x53, 0xae, 0x5e,
	0x5b, 0x88, 0x63, 0x8b, 0x43, 0x19, 0x25, 0x09, 0x2d, 0x86, 0xb8, 0x0a, 0xcf, 0xf4, 0xb9, 0x22,
	0x72, 0x8f, 0x11, 0xb6, 0x02, 0xdb, 0xf1, 0x3b, 0x95, 0x2c, 0xdf, 0xf5, 0x19, 0xf9, 0xb0, 0x41,
	0xee, 0x45, 0x5b, 0xf2, 0x11, 0x36, 0xa1, 0xd8, 0x3a, 0xa2, 0x51, 0xe0, 0x99, 0x51, 0xaf, 0x4b,
	0x68, 0x25, 0xc7, 0x23, 0xb0, 0x58, 0xe2, 0x0a, 0x02, 0xb1, 0xc1, 0x00, 0xd5, 0x1f, 0xf2, 0x90,
	0xe5, 0x21, 0x59, 0x20, 0x41, 0x6d, 0x58, 0x72, 0xfc, 0x88, 0x74, 0x48, 0xc8, 0x6b, 0xaf, 0x50,
	0xbd, 0xbe, 0x78, 0x86, 0xf4, 0x1d, 0x81, 0x58, 0x4f, 0x19, 0x7d, 0x70, 0xfc, 0x1e, 0x64, 0xdb,
	0x6e, 0x60, 0x45, 0xb2, 0x7c, 0xeb, 0x09, 0xb0, 0x6c, 0x33, 0xbc, 0x7a, 0xca, 0x10, 0xc0, 0x8c,
	0xa1, 0xd9, 0x8b, 0x08, 0xe5, 0x29, 0x49, 0x86, 0xa1, 0xc6, 0xf0, 0x18, 0x03, 0x07, 0xc6, 0x2d,
	0xc8, 0xd1, 0x28, 0x64, 0x59, 0xcf, 0x71, 0x8a, 0x9d, 0x04, 0x28, 0x0e, 0x39, 0x60, 0x3d, 0x65,
	0x48, 0x68, 0x7c, 0x16, 0xb2, 0x9e, 0xd5, 0x71, 0x5a, 0x95, 0xa5, 0x35, 0xb4, 0x5e, 0x64, 0xe4,
	0x7c, 0x88, 0x2f, 0x40, 0x61, 0xa4, 0x9a, 0x2a, 0x79, 0x96, 0xcc, 0x7a, 0xca, 0x80, 0x61, 0x41,
	0xa8, 0xdf, 0x20, 0x58, 0x92, 0xa1, 0xc7, 0xe7, 0x00, 0xa8, 0x73, 0x9f, 0x98, 0x22, 0x24, 0x0a,
	0xf7, 0xa0, 0x65, 0x36, 0xc3, 0xf7, 0x84, 0xcf, 0x42, 0x8e, 0x3a, 0x1d, 0x9f, 0xd8, 0x3c, 0x1f,
	0x79, 0x43, 0x8e, 0xf0, 0x5b, 0x90, 0x93, 0x67, 0x29, 0x9b, 0xdc, 0x59, 0x92, 0x90, 0xea, 0x47,
	0x08, 0xb2, 0x3c, 0x69, 0x71, 0xea, 0x1e, 0xab, 0x8a, 0x0e, 0x64, 0x05, 0xcb, 0xbb, 0x90, 0x61,
	0x94, 0x89, 0xd4, 0xfd, 0x26, 0x71, 0x1d, 0xcf, 0x89, 0x88, 0x7d, 0xe8, 0xdc, 0x27, 0x06, 0xc7,
	0x55, 0x3f, 0x46, 0x90, 0x13, 0xe9, 0x7d, 0xdc, 0x54, 0x58, 0x85, 0xfc, 0xc0, 0x91, 0x32, 0xfc,
	0x98, 0x0f, 0xc6, 0xb5, 0x1c, 0x64, 0x58, 0xc5, 0xa8, 0xdf, 0x22, 0x28, 0x8d, 0xbd, 0x8b, 0x57,
	0xc7, 0xb2, 0xc0, 0xef, 0xa9, 0x7a, 0x6a, 0x34, 0x0f, 0x97, 0xa0, 0x44, 0x7c, 0xdb, 0x0c, 0xda,
	0x26, 0x8d, 0x42, 0x62, 0x79, 0xdc, 0x42, 0xf2, 0xf5, 0x94, 0x51, 0x20, 0xbe, 0xfd, 0x46, 0xfb,
	0x90, 0x4f, 0x32, 0x18, 0xee, 0xc8, 0x26, 0xb7, 0x20, 0x45, 0x16, 0xe6, 0x32, 0x9f, 0xdb, 0x67,
	0x4e, 0x74, 0x1e, 0x20, 0x22, 0xa1, 0xe7, 0xf8, 0x56, 0x14, 0x88, 0xfb, 0xab, 0x68, 0x8c, 0xcc,
	0x30, 0x85, 0x8c, 0x53, 0xbb, 0x0a, 0x39, 0x69, 0xb7, 0x05, 0x58, 0xda, 0xdc, 0xda, 0xde, 0xb8,
	0xb9, 0xd7, 0x58, 0x49, 0xe1, 0xd3, 0x50, 0xda, 0xdb, 0x69, 0x34, 0xf6, 0xb6, 0xcc, 0xad, 0xfd,
	0xcd, 0x9d, 0x8d, 0xfd, 0x15, 0x84, 0xcb, 0x00, 0xb5, 0x9d, 0xd7, 0xfb, 0xe3, 0xb4, 0xf6, 0x19,
	0x82, 0xd5, 0xe9, 0xe1, 0x3a, 0x24, 0x2e, 0x69, 0x71, 0xa7, 0x5b, 0x01, 0xc5, 0xb1, 0xd9, 0x36,
	0x95, 0xf5, 0xac, 0xc1, 0x7e, 0xf2, 0x43, 0x40, 0xac, 0xb0, 0x75, 0x5b, 0x5a, 0xa3, 0x1c, 0xb1,
	0x3b, 0x39, 0xf0, 0xdd, 0x9e, 0x29, 0x2e, 0x49, 0xbe, 0xa3, 0xbc, 0x01, 0x6c, 0x4a, 0x24, 0x06,
	0x6b, 0x50, 0xe2, 0x0b, 0xee, 0xd0, 0x9e, 0xd9, 0x76, 0x5c, 0x22, 0x0f, 0x11, 0x7f, 0x6b, 0x97,
	0xf6, 0xb6, 0x1d, 0x97, 0x68, 0x7f, 0x2a, 0xa0, 0xed, 0x39, 0x34, 0x9a, 0x2e, 0x8b, 0x1a, 0xe4,
	0x83, 0x23, 0x42, 0x23, 0xac, 0x41, 0x31, 0x08, 0x3b, 0x96, 0xef, 0xdc, 0x17, 0x26, 0x2d, 0x1c,
	0x7c, 0x6c, 0x0e, 0xbf, 0x03, 0xcb, 0xb4, 0xbf, 0x0d, 0x2e, 0xb5, 0x50, 0x7d, 0x2d, 0xae, 0x84,
	0x62, 0xa2, 0x61, 0x0c, 0x11, 0xf1, 0x8b, 0x00, 0x5d, 0xab, 0xc3, 0x72, 0xc1, 0xf0, 0x45, 0x89,
	0x9e, 0x96, 0xf8, 0x07, 0x83, 0x07, 0xc6, 0xc8, 0x22, 0xf5, 0x21, 0x82, 0xbc, 0x41, 0x68, 0x37,
	0xf0, 0x29, 0xc1, 0x07, 0xb0, 0x24, 0x48, 0x45, 0x70, 0x0b, 0xd5, 0x97, 0xe7, 0x13, 0x67, 0xf4,
	0x61, 0xf0, 0xd5, 0x31, 0x45, 0x62, 0xc7, 0x95, 0xff, 0x28, 0xd2, 0x0d, 0x42, 0x8f, 0xdc, 0x68,
	0x54, 0x18, 0x7e, 0x1b, 0x96, 0x42, 0x11, 0x59, 0xb9, 0x91, 0xd8, 0x86, 0x23, 0x3e, 0x47, 0x46,
	0x1f, 0x52, 0x7b, 0x00, 0x17, 0x6f, 0x76, 0xdd, 0xc0, 0xb2, 0x8f, 0xd9, 0xc0, 0x09, 0x72, 0x3a,
	0x4f, 0x2f, 0xa8, 0x7d, 0x88, 0xe0, 0xca, 0xcd, 0xae, 0x6d, 0x45, 0x44, 0xc8, 0x20, 0x09, 0x08,
	0x11, 0x4d, 0x6a, 0x7a, 0xd0, 0xa4, 0xc6, 0x8a, 0xf8, 0x1e, 0xc1, 0xe5, 0x6b, 0x21, 0xb1, 0x22,
	0xf2, 0xc8, 0x4e, 0xe5, 0x04, 0x12, 0x1a, 0x90, 0x93, 0xbd, 0x6d, 0x3a, 0x81, 0xde, 0x56, 0x62,
	0x69, 0xbf, 0x20, 0xb8, 0x2c, 0x82, 0x95, 0x94, 0xce, 0xc9, 0x50, 0x0d, 0x75, 0x2b, 0x09, 0xea,
	0xf6, 0xe0, 0xa2, 0x41, 0x58, 0x3d, 0x24, 0x2f, 0xb8, 0x5f, 0x74, 0xca, 0xb0, 0xe8, 0xb4, 0x9f,
	0x11, 0x5c, 0xdc, 0x24, 0x2e, 0x89, 0x12, 0xe0, 0x7b, 0xbc, 0x46, 0xa5, 0xc2, 0xd0, 0x74, 0xb4,
	0xdf, 0xb2, 0xa0, 0xb2, 0xa3, 0xbb, 0x41, 0x45, 0xe7, 0xf2, 0xe4, 0xd9, 0xea, 0x26, 0x9c, 0x12,
	0x1f, 0x9d, 0x43, 0x12, 0x51, 0x26, 0xcf, 0x8d, 0x91, 0x70, 0xc4, 0x21, 0x40, 0xd9, 0x1b, 0x1b,
	0x4f, 0x98, 0x73, 0x66, 0x16, 0x73, 0xfe, 0x4e, 0x19, 0x31, 0xe7, 0x07, 0xb0, 0x62, 0xc9, 0x10,
	0x99, 0xe3, 0x2e, 0x7d, 0x38, 0x8b, 0x33, 0x4e, 0x0f, 0xaf, 0xde, 0x87, 0xd7, 0x27, 0x9f, 0x9f,
	0xb2, 0xc6, 0x27, 0x70, 0x63, 0x68, 0xc8, 0x22, 0xc4, 0xaf, 0xcc, 0x4f, 0x3b, 0x30, 0xe2, 0x89,
	0x0b, 0x42, 0x99, 0xfd, 0x82, 0x50, 0x3f, 0x45, 0x70, 0x6a, 0x02, 0x1d, 0x5f, 0x80, 0xa2, 0xc8,
	0x94, 0x7f, 0xe4, 0x35, 0x49, 0x28, 0x8b, 0x45, 0x7c, 0xe5, 0xef, 0xf3, 0xa9, 0xd1, 0x3b, 0x2e,
	0x9d, 0xc8, 0x1d, 0xa7, 0xfd, 0xa5, 0xc0, 0x15, 0x21, 0x64, 0xfa, 0xca, 0x46, 0xc0, 0xe7, 0x9f,
	0xba, 0x8a, 0x56, 0xff, 0x46, 0x31, 0xe5, 0xa9, 0xfc, 0x8f, 0xe5, 0x49, 0x26, 0xcb, 0x73, 0x37,
	0x8e, 0xf6, 0x04, 0x39, 0x1b, 0xd4, 0xeb, 0xf5, 0x4c, 0x1e, 0xad, 0xa4, 0xb5, 0x87, 0x0a, 0xbc,
	0x60, 0x10, 0x2f, 0xb8, 0x7b, 0x8c, 0xd5, 0x6e, 0x87, 0x81, 0xf7, 0x94, 0x26, 0xfd, 0x9f, 0x27,
	0x29, 0xe9, 0x9d, 0xc9, 0xa4, 0xdf, 0x88, 0xa3, 0x3d, 0x51, 0xd6, 0x26, 0xd2, 0x5e, 0xfd, 0xb1,
	0x08, 0xe7, 0x8e, 0x0b, 0x78, 0x78, 0xd7, 0x69, 0x11, 0xfc, 0x15, 0x82, 0x0c, 0xdb, 0x19, 0x4e,
	0xa0, 0x5b, 0x55, 0x77, 0x17, 0xc7, 0x18, 0xc4, 0x12, 0x7f, 0x82, 0x20, 0x27, 0x7a, 0x4d, 0x1c,
	0xfb, 0x11, 0x3e, 0x43, 0x6b, 0xac, 0xce, 0x69, 0x9b, 0xf8, 0x0b, 0x04, 0xe5, 0xf1, 0xce, 0x17,
	0xef, 0xc6, 0xeb, 0x99, 0xb9, 0x53, 0x9e, 0x5b, 0xd7, 0xe7, 0x08, 0x8a, 0xa3, 0xcd, 0x30, 0x8e,
	0xfd, 0x9b, 0xd0, 0xcc, 0xad, 0xf3, 0x42, 0x9a, 0x46, 0x1b, 0xdf, 0x78, 0x4d, 0x33, 0xb7, 0xc9,
	0x73, 0x6b, 0x62, 0x75, 0x24, 0xba, 0xda, 0xf8, 0x3a, 0x9a, 0xa1, 0xfb, 0x9d, 0x5b, 0xc7, 0xd7,
	0x08, 0x72, 0xa2, 0xdb, 0x8d, 0xd7, 0x31, 0x43, 0x57, 0xac, 0xee, 0x25, 0x00, 0x32, 0x3c, 0x6d,
	0x5f, 0x22, 0x38, 0x33, 0xc5, 0xe1, 0xf0, 0x02, 0x3d, 0x93, 0x7a, 0x2d, 0x01, 0x4b, 0xc5, 0x3f,
	0x21, 0x28, 0x8b, 0x35, 0xfd, 0x2b, 0x0e, 0x27, 0x79, 0x51, 0xaa, 0x8d, 0x04, 0xc1, 0x86, 0xaa,
	0x7f, 0x45, 0xb0, 0x22, 0x9c, 0x7b, 0xe8, 0xd1, 0x38, 0x59, 0xaf, 0x57, 0xdf, 0x4c, 0x14, 0x6e,
	0xa0, 0xbd, 0xd6, 0x00, 0xbd, 0xe3, 0x06, 0x4d, 0xcb, 0x95, 0xf8, 0x56, 0xd7, 0xd1, 0x3b, 0x61,
	0xb7, 0x75, 0x2c, 0x51, 0xed, 0xd9, 0xe9, 0x1c, 0x1b, 0x5d, 0xe7, 0x20, 0x75, 0x2b, 0xcb, 0x51,
	0x9a, 0x39, 0xfe, 0x3f, 0xab, 0x97, 0xfe, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x0a, 0xc6, 0x44, 0xf7,
	0x0f, 0x1b, 0x00, 0x00,
}
