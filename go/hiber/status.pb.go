// Code generated by protoc-gen-go.
// source: status.proto
// DO NOT EDIT!

package hiber

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type NetworkStatus struct {
	Health      Health     `protobuf:"varint,1,opt,name=health,enum=hiber.Health" json:"health,omitempty"`
	Message     string     `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	LastUpdated *Timestamp `protobuf:"bytes,3,opt,name=last_updated,json=lastUpdated" json:"last_updated,omitempty"`
}

func (m *NetworkStatus) Reset()                    { *m = NetworkStatus{} }
func (m *NetworkStatus) String() string            { return proto.CompactTextString(m) }
func (*NetworkStatus) ProtoMessage()               {}
func (*NetworkStatus) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{0} }

func (m *NetworkStatus) GetHealth() Health {
	if m != nil {
		return m.Health
	}
	return Health_OK
}

func (m *NetworkStatus) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *NetworkStatus) GetLastUpdated() *Timestamp {
	if m != nil {
		return m.LastUpdated
	}
	return nil
}

type AreaStatus struct {
	Area        *Area      `protobuf:"bytes,1,opt,name=area" json:"area,omitempty"`
	Health      Health     `protobuf:"varint,2,opt,name=health,enum=hiber.Health" json:"health,omitempty"`
	Message     string     `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	LastUpdated *Timestamp `protobuf:"bytes,4,opt,name=last_updated,json=lastUpdated" json:"last_updated,omitempty"`
}

func (m *AreaStatus) Reset()                    { *m = AreaStatus{} }
func (m *AreaStatus) String() string            { return proto.CompactTextString(m) }
func (*AreaStatus) ProtoMessage()               {}
func (*AreaStatus) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{1} }

func (m *AreaStatus) GetArea() *Area {
	if m != nil {
		return m.Area
	}
	return nil
}

func (m *AreaStatus) GetHealth() Health {
	if m != nil {
		return m.Health
	}
	return Health_OK
}

func (m *AreaStatus) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *AreaStatus) GetLastUpdated() *Timestamp {
	if m != nil {
		return m.LastUpdated
	}
	return nil
}

type OrganizationStatus struct {
	// Organization health, based on the values below.
	Health Health `protobuf:"varint,1,opt,name=health,enum=hiber.Health" json:"health,omitempty"`
	// Health for modems, based on the most severe state for all your modems.
	Modems Health `protobuf:"varint,2,opt,name=modems,enum=hiber.Health" json:"modems,omitempty"`
	// Health for publishers, based on the most severe state for all your publishers.
	Publishers Health `protobuf:"varint,3,opt,name=publishers,enum=hiber.Health" json:"publishers,omitempty"`
	// A detailed list of modems with a non-OK status.
	RelevantModems []*OrganizationStatus_ModemStatus `protobuf:"bytes,4,rep,name=relevant_modems,json=relevantModems" json:"relevant_modems,omitempty"`
	// A detailed list of publishers with a non-OK status.
	RelevantPublishers []*OrganizationStatus_PublisherStatus `protobuf:"bytes,5,rep,name=relevant_publishers,json=relevantPublishers" json:"relevant_publishers,omitempty"`
}

func (m *OrganizationStatus) Reset()                    { *m = OrganizationStatus{} }
func (m *OrganizationStatus) String() string            { return proto.CompactTextString(m) }
func (*OrganizationStatus) ProtoMessage()               {}
func (*OrganizationStatus) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{2} }

func (m *OrganizationStatus) GetHealth() Health {
	if m != nil {
		return m.Health
	}
	return Health_OK
}

func (m *OrganizationStatus) GetModems() Health {
	if m != nil {
		return m.Modems
	}
	return Health_OK
}

func (m *OrganizationStatus) GetPublishers() Health {
	if m != nil {
		return m.Publishers
	}
	return Health_OK
}

func (m *OrganizationStatus) GetRelevantModems() []*OrganizationStatus_ModemStatus {
	if m != nil {
		return m.RelevantModems
	}
	return nil
}

func (m *OrganizationStatus) GetRelevantPublishers() []*OrganizationStatus_PublisherStatus {
	if m != nil {
		return m.RelevantPublishers
	}
	return nil
}

type OrganizationStatus_ModemStatus struct {
	ModemNumber string   `protobuf:"bytes,1,opt,name=modem_number,json=modemNumber" json:"modem_number,omitempty"`
	Health      Health   `protobuf:"varint,2,opt,name=health,enum=hiber.Health" json:"health,omitempty"`
	Messages    []string `protobuf:"bytes,3,rep,name=messages" json:"messages,omitempty"`
}

func (m *OrganizationStatus_ModemStatus) Reset()         { *m = OrganizationStatus_ModemStatus{} }
func (m *OrganizationStatus_ModemStatus) String() string { return proto.CompactTextString(m) }
func (*OrganizationStatus_ModemStatus) ProtoMessage()    {}
func (*OrganizationStatus_ModemStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor13, []int{2, 0}
}

func (m *OrganizationStatus_ModemStatus) GetModemNumber() string {
	if m != nil {
		return m.ModemNumber
	}
	return ""
}

func (m *OrganizationStatus_ModemStatus) GetHealth() Health {
	if m != nil {
		return m.Health
	}
	return Health_OK
}

func (m *OrganizationStatus_ModemStatus) GetMessages() []string {
	if m != nil {
		return m.Messages
	}
	return nil
}

type OrganizationStatus_PublisherStatus struct {
	PublisherId int64    `protobuf:"varint,1,opt,name=publisher_id,json=publisherId" json:"publisher_id,omitempty"`
	Health      Health   `protobuf:"varint,2,opt,name=health,enum=hiber.Health" json:"health,omitempty"`
	Messages    []string `protobuf:"bytes,3,rep,name=messages" json:"messages,omitempty"`
}

func (m *OrganizationStatus_PublisherStatus) Reset()         { *m = OrganizationStatus_PublisherStatus{} }
func (m *OrganizationStatus_PublisherStatus) String() string { return proto.CompactTextString(m) }
func (*OrganizationStatus_PublisherStatus) ProtoMessage()    {}
func (*OrganizationStatus_PublisherStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor13, []int{2, 1}
}

func (m *OrganizationStatus_PublisherStatus) GetPublisherId() int64 {
	if m != nil {
		return m.PublisherId
	}
	return 0
}

func (m *OrganizationStatus_PublisherStatus) GetHealth() Health {
	if m != nil {
		return m.Health
	}
	return Health_OK
}

func (m *OrganizationStatus_PublisherStatus) GetMessages() []string {
	if m != nil {
		return m.Messages
	}
	return nil
}

type StatusRequest struct {
	// Pick the organization to use (/impersonate). If unset, your default organization is used.
	Organization string `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	// Whether to include a detailed list of modems with a non-OK status.
	IncludeModems bool `protobuf:"varint,2,opt,name=include_modems,json=includeModems" json:"include_modems,omitempty"`
	// Whether to include a detailed list of publishers with a non-OK status.
	IncludePublishers bool `protobuf:"varint,3,opt,name=include_publishers,json=includePublishers" json:"include_publishers,omitempty"`
}

func (m *StatusRequest) Reset()                    { *m = StatusRequest{} }
func (m *StatusRequest) String() string            { return proto.CompactTextString(m) }
func (*StatusRequest) ProtoMessage()               {}
func (*StatusRequest) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{3} }

func (m *StatusRequest) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *StatusRequest) GetIncludeModems() bool {
	if m != nil {
		return m.IncludeModems
	}
	return false
}

func (m *StatusRequest) GetIncludePublishers() bool {
	if m != nil {
		return m.IncludePublishers
	}
	return false
}

type StatusRequest_Response struct {
	Request *StatusRequest `protobuf:"bytes,1,opt,name=request" json:"request,omitempty"`
	// Status of the satellite network.
	Satellites *NetworkStatus `protobuf:"bytes,2,opt,name=satellites" json:"satellites,omitempty"`
	// Status of the ground station network.
	GroundStations *NetworkStatus `protobuf:"bytes,3,opt,name=ground_stations,json=groundStations" json:"ground_stations,omitempty"`
	// Areas of the globe that have a non-OK status, i.e. regions where coverage is hindered by external forces.
	GlobalAreas []*AreaStatus `protobuf:"bytes,4,rep,name=global_areas,json=globalAreas" json:"global_areas,omitempty"`
	// Status for your organization, i.e. whether you have modems that are having trouble, or failed publishers.
	Organization *OrganizationStatus `protobuf:"bytes,5,opt,name=organization" json:"organization,omitempty"`
}

func (m *StatusRequest_Response) Reset()                    { *m = StatusRequest_Response{} }
func (m *StatusRequest_Response) String() string            { return proto.CompactTextString(m) }
func (*StatusRequest_Response) ProtoMessage()               {}
func (*StatusRequest_Response) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{3, 0} }

func (m *StatusRequest_Response) GetRequest() *StatusRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *StatusRequest_Response) GetSatellites() *NetworkStatus {
	if m != nil {
		return m.Satellites
	}
	return nil
}

func (m *StatusRequest_Response) GetGroundStations() *NetworkStatus {
	if m != nil {
		return m.GroundStations
	}
	return nil
}

func (m *StatusRequest_Response) GetGlobalAreas() []*AreaStatus {
	if m != nil {
		return m.GlobalAreas
	}
	return nil
}

func (m *StatusRequest_Response) GetOrganization() *OrganizationStatus {
	if m != nil {
		return m.Organization
	}
	return nil
}

func init() {
	proto.RegisterType((*NetworkStatus)(nil), "hiber.status.NetworkStatus")
	proto.RegisterType((*AreaStatus)(nil), "hiber.status.AreaStatus")
	proto.RegisterType((*OrganizationStatus)(nil), "hiber.status.OrganizationStatus")
	proto.RegisterType((*OrganizationStatus_ModemStatus)(nil), "hiber.status.OrganizationStatus.ModemStatus")
	proto.RegisterType((*OrganizationStatus_PublisherStatus)(nil), "hiber.status.OrganizationStatus.PublisherStatus")
	proto.RegisterType((*StatusRequest)(nil), "hiber.status.StatusRequest")
	proto.RegisterType((*StatusRequest_Response)(nil), "hiber.status.StatusRequest.Response")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for StatusService service

type StatusServiceClient interface {
	Status(ctx context.Context, in *StatusRequest, opts ...grpc.CallOption) (*StatusRequest_Response, error)
}

type statusServiceClient struct {
	cc *grpc.ClientConn
}

func NewStatusServiceClient(cc *grpc.ClientConn) StatusServiceClient {
	return &statusServiceClient{cc}
}

func (c *statusServiceClient) Status(ctx context.Context, in *StatusRequest, opts ...grpc.CallOption) (*StatusRequest_Response, error) {
	out := new(StatusRequest_Response)
	err := grpc.Invoke(ctx, "/hiber.status.StatusService/Status", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for StatusService service

type StatusServiceServer interface {
	Status(context.Context, *StatusRequest) (*StatusRequest_Response, error)
}

func RegisterStatusServiceServer(s *grpc.Server, srv StatusServiceServer) {
	s.RegisterService(&_StatusService_serviceDesc, srv)
}

func _StatusService_Status_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatusServiceServer).Status(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hiber.status.StatusService/Status",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatusServiceServer).Status(ctx, req.(*StatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _StatusService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hiber.status.StatusService",
	HandlerType: (*StatusServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Status",
			Handler:    _StatusService_Status_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "status.proto",
}

func init() { proto.RegisterFile("status.proto", fileDescriptor13) }

var fileDescriptor13 = []byte{
	// 591 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x94, 0xcf, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0x71, 0x9d, 0xa6, 0xc9, 0xd8, 0x49, 0x61, 0xb9, 0x44, 0x01, 0x89, 0x10, 0x51, 0x29,
	0x07, 0xb0, 0x90, 0x2b, 0x4e, 0x3d, 0xb5, 0xe2, 0x00, 0x42, 0x2d, 0xd5, 0x96, 0x5e, 0x10, 0x92,
	0xb5, 0xae, 0x47, 0xc9, 0x0a, 0xff, 0x63, 0x77, 0xdd, 0x4a, 0xdc, 0x79, 0x12, 0x9e, 0x82, 0x27,
	0xe0, 0x01, 0x78, 0x21, 0xe4, 0xdd, 0x75, 0xb0, 0x5b, 0x91, 0x16, 0x89, 0x5b, 0x3c, 0xf3, 0xcd,
	0xb7, 0xbf, 0x9d, 0x99, 0x2c, 0xf8, 0x52, 0x31, 0x55, 0xc9, 0xa0, 0x14, 0x85, 0x2a, 0x88, 0xbf,
	0xe2, 0x31, 0x8a, 0xc0, 0xc4, 0xa6, 0x10, 0x33, 0x89, 0x26, 0x33, 0xff, 0xe6, 0xc0, 0xe8, 0x04,
	0xd5, 0x55, 0x21, 0x3e, 0x9f, 0xe9, 0x2c, 0xd9, 0x83, 0xfe, 0x0a, 0x59, 0xaa, 0x56, 0x13, 0x67,
	0xe6, 0x2c, 0xc6, 0xe1, 0x28, 0x30, 0xc5, 0x6f, 0x74, 0x90, 0xda, 0x24, 0x99, 0xc0, 0x4e, 0x86,
	0x52, 0xb2, 0x25, 0x4e, 0xb6, 0x66, 0xce, 0x62, 0x48, 0x9b, 0x4f, 0xb2, 0x0f, 0x7e, 0xca, 0xa4,
	0x8a, 0xaa, 0x32, 0x61, 0x0a, 0x93, 0x89, 0x3b, 0x73, 0x16, 0x5e, 0x78, 0xdf, 0xda, 0x7c, 0xe0,
	0x19, 0x4a, 0xc5, 0xb2, 0x92, 0x7a, 0xb5, 0xea, 0xdc, 0x88, 0xe6, 0xdf, 0x1d, 0x80, 0x43, 0x81,
	0xcc, 0x42, 0x3c, 0x81, 0x1e, 0x13, 0xc8, 0x34, 0x82, 0x17, 0x7a, 0xb6, 0xb6, 0x16, 0x50, 0x9d,
	0x68, 0x51, 0x6e, 0xdd, 0x91, 0xd2, 0xdd, 0x4c, 0xd9, 0xbb, 0x0b, 0xe5, 0x8f, 0x1e, 0x90, 0xf7,
	0x62, 0xc9, 0x72, 0xfe, 0x95, 0x29, 0x5e, 0xe4, 0xff, 0xd6, 0xb2, 0x3d, 0xe8, 0x67, 0x45, 0x82,
	0x99, 0xfc, 0x0b, 0xb3, 0x49, 0x92, 0x17, 0x00, 0x65, 0x15, 0xa7, 0x5c, 0xae, 0x50, 0x48, 0x8d,
	0x7d, 0x43, 0xda, 0x12, 0x90, 0x73, 0xd8, 0x15, 0x98, 0xe2, 0x25, 0xcb, 0x55, 0x64, 0xed, 0x7b,
	0x33, 0x77, 0xe1, 0x85, 0xcf, 0x83, 0xf6, 0xd4, 0x83, 0x9b, 0xdc, 0xc1, 0x71, 0x2d, 0x37, 0xbf,
	0xe9, 0xb8, 0x31, 0x39, 0x36, 0x14, 0x0c, 0x1e, 0xae, 0x6d, 0x5b, 0x38, 0xdb, 0xda, 0xfa, 0xe5,
	0xad, 0xd6, 0xa7, 0x4d, 0x89, 0xb5, 0x27, 0x8d, 0xd9, 0x3a, 0x21, 0xa7, 0x12, 0xbc, 0x16, 0x01,
	0x79, 0x0a, 0xbe, 0xe6, 0x8f, 0xf2, 0x2a, 0x8b, 0x51, 0xe8, 0x5e, 0x0e, 0xa9, 0xa7, 0x63, 0x27,
	0x3a, 0x74, 0xd7, 0xa9, 0x4f, 0x61, 0x60, 0xc7, 0x5c, 0xf7, 0xcf, 0x5d, 0x0c, 0xe9, 0xfa, 0x7b,
	0x7a, 0x05, 0xbb, 0xd7, 0xd8, 0xea, 0x83, 0xd7, 0x37, 0x8c, 0x78, 0xa2, 0x0f, 0x76, 0xa9, 0xb7,
	0x8e, 0xbd, 0x4d, 0xfe, 0xc3, 0xc1, 0xf3, 0x5f, 0x2e, 0x8c, 0x6c, 0x33, 0xf0, 0x4b, 0x85, 0x52,
	0x91, 0x39, 0xf8, 0x45, 0xab, 0x73, 0xf6, 0xc2, 0x9d, 0x18, 0xd9, 0x83, 0x31, 0xcf, 0x2f, 0xd2,
	0x2a, 0xc1, 0xa8, 0xb5, 0x3b, 0x03, 0x3a, 0xb2, 0xd1, 0xe3, 0x66, 0x67, 0x48, 0x23, 0xbb, 0xb6,
	0x3b, 0x03, 0xfa, 0xc0, 0x66, 0x5a, 0x9d, 0xff, 0xb9, 0x05, 0x03, 0x8a, 0xb2, 0x2c, 0x72, 0x89,
	0xe4, 0x15, 0xec, 0x08, 0x43, 0x64, 0xff, 0x6e, 0x8f, 0xba, 0xd3, 0xed, 0x40, 0xd3, 0x46, 0x4b,
	0x0e, 0x00, 0x24, 0x53, 0x98, 0xa6, 0x5c, 0xa1, 0xa1, 0xba, 0x51, 0xd9, 0x79, 0x58, 0x68, 0x4b,
	0x4e, 0x5e, 0xc3, 0xee, 0x52, 0x14, 0x55, 0x9e, 0x44, 0xb5, 0x94, 0x17, 0xb9, 0xb4, 0xcf, 0xc4,
	0x46, 0x87, 0xb1, 0xa9, 0x39, 0xb3, 0x25, 0xe4, 0x00, 0xfc, 0x65, 0x5a, 0xc4, 0x2c, 0x8d, 0xea,
	0x37, 0xa1, 0xd9, 0xfb, 0x49, 0xd7, 0xe2, 0xcf, 0xab, 0x42, 0x3d, 0xa3, 0xae, 0x23, 0x35, 0x42,
	0xb7, 0xfb, 0xdb, 0xfa, 0xfc, 0xd9, 0x6d, 0x9b, 0xdd, 0x9d, 0x4f, 0xf8, 0xa9, 0x19, 0xea, 0x19,
	0x8a, 0x4b, 0x7e, 0x81, 0xe4, 0x1d, 0xf4, 0xed, 0x5a, 0x6d, 0x6a, 0xe3, 0xf4, 0xd9, 0x86, 0x64,
	0xd0, 0x8c, 0xe6, 0x28, 0x84, 0xc7, 0x06, 0xd9, 0xaa, 0x59, 0xc9, 0x83, 0xa5, 0x28, 0x2f, 0x6c,
	0xd9, 0xd1, 0xd0, 0xd4, 0x1d, 0x96, 0xfc, 0xf4, 0xde, 0xc7, 0x6d, 0xad, 0x89, 0xfb, 0xfa, 0x61,
	0xdf, 0xff, 0x1d, 0x00, 0x00, 0xff, 0xff, 0xa0, 0x94, 0xc3, 0x5b, 0x02, 0x06, 0x00, 0x00,
}
