// Code generated by protoc-gen-go. DO NOT EDIT.
// source: base.proto

/*
Package hiber is a generated protocol buffer package.

It is generated from these files:
	base.proto
	certificate.proto
	currentuser.proto
	dashboard.proto
	event.proto
	integration_aws_iot.proto
	map.proto
	modem.proto
	modem_claim.proto
	modem_transfer.proto
	organization.proto
	permission.proto
	publisher.proto
	satellite.proto
	sso.proto
	status.proto
	subscription.proto
	tag.proto
	testing.proto
	token.proto
	user.proto
	webhook.proto

It has these top-level messages:
	UpdateZeroableInt
	UpdateClearableString
	UpdateOptionalId
	UpdateBoolean
	TimeRange
	Timestamp
	Date
	Location
	Area
	Shape
	LocationSelection
	BytesOrHex
	Pagination
	Filter
	Certificate
	CertificateSelection
	ListCertificatesRequest
	UploadCertificateRequest
	RenameCertificateRequest
	DeleteCertificateRequest
	CurrentUser
	CurrentUserRequest
	RequestAccessRequest
	CancelAccessRequestRequest
	DeleteCurrentUserRequest
	UpdateDefaultOrganizationRequest
	UpdateMissionControlSettingsRequest
	AccessibleOrganizationsRequest
	DashboardRequest
	Event
	BundledEvent
	EventSelection
	ListEventsRequest
	EventStreamRequest
	AWSIoTConfiguration
	InitializeAWSIoTIntegrationRequest
	AWSIoTIntegrationConfigurationRequest
	EnableAWSIoTIntegrationRequest
	DisableAWSIoTIntegrationRequest
	UpdateAWSIoTIntegrationConfigurationRequest
	GroundStation
	TileCoordinate
	MapTileItem
	TileMapRequest
	Satellite
	SatellitesRequest
	MapSelection
	MapBlock
	MapRequest
	Modem
	ModemSelection
	ModemMessage
	ModemMessageSelection
	GetModemRequest
	ListModemsRequest
	ListModemMessagesRequest
	MessageCountRequest
	RenameModemRequest
	UpdateModemTagsRequest
	UpdatePeripheralsRequest
	LicenseKeysRequest
	ModemClaim
	ModemClaimSelection
	ClaimModemRequest
	ListModemClaimsRequest
	ModemTransfer
	ModemTransferReturnLine
	ModemTransferSelection
	TransferModemsRequest
	ListModemTransfersRequest
	CancelModemTransferRequest
	ReceivedModemTransferRequest
	NotReceivedModemTransferRequest
	PrepareModemForReturnRequest
	DeleteModemTransferReturnLinesRequest
	ListModemTransferReturnLinesRequest
	SendReturnRequest
	Organization
	OrganizationSelection
	GetOrganizationRequest
	UpdateOrganizationRequest
	OrganizationTreeRequest
	OrganizationTree
	ListChildOrganizationsRequest
	CreateOrganizationRequest
	DeleteOrganizationRequest
	DeleteOrganizationConfirmationRequest
	ValidateOrganizationCreationTokenRequest
	Publisher
	PublisherSelection
	PublisherCall
	PublisherHistorySelection
	ListPublishersRequest
	PublisherHistoryRequest
	CreatePublisherRequest
	EnablePublisherRequest
	DisablePublisherRequest
	UpdatePublisherRequest
	UpdatePublisherTagsRequest
	DeletePublisherRequest
	SatelliteInformation
	SatellitePath
	SatelliteSelection
	ListSatellitesRequest
	ListSatellitesPathRequest
	ZendeskTokenRequest
	NetworkStatus
	AreaStatus
	OrganizationStatus
	StatusRequest
	Tag
	TagSelection
	UpdateTagsForItem
	ListTagsRequest
	CreateTagRequest
	UpdateTagRequest
	DeleteTagRequest
	PushModemMessagesRequest
	PushModemMessagesFromDebugPortRequest
	Token
	TokenSelection
	ListTokensRequest
	CreateTokenRequest
	DeleteTokenRequest
	UpdateTokenOrganizationPermissionsRequest
	UpdateTokenUserPermissionsRequest
	User
	UserSelection
	ListUsersRequest
	ListAccessRequestsRequest
	ApproveUserRequest
	RemoveUserRequest
	CreateUserRequest
	CreateUsersRequest
	ResetUserPasswordRequest
	UpdateUserPermissionsRequest
	Webhook
	WebhookSelection
	WebhookCall
	WebhookHistorySelection
	ListWebhooksRequest
	WebhookHistoryRequest
	CreateWebhookRequest
	GetWebhookRequest
	EnableWebhookRequest
	DisableWebhookRequest
	UpdateWebhookFilterRequest
	UpdateWebhookRequest
	UpdateWebhookTagsRequest
	DeleteWebhookRequest
*/
package hiber

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Enum of api-accessible events.
// The event types in this enum have a protobuf implementation, and can be used, for example, in the
// api event stream and publishers.
type EventType int32

const (
	EventType_DEFAULT                                EventType = 0
	EventType_ORGANIZATION_UPDATED                   EventType = 12
	EventType_MODEM_LOCATION_UPDATED                 EventType = 4
	EventType_MODEM_ACTIVATED                        EventType = 33
	EventType_MODEM_STALE                            EventType = 16
	EventType_MODEM_MESSAGE_RECEIVED                 EventType = 5
	EventType_MODEM_MESSAGE_SEQUENCE_SKIP            EventType = 13
	EventType_MODEM_MESSAGE_DELAYED                  EventType = 14
	EventType_MODEM_MESSAGE_CANNOT_BE_PARSED         EventType = 15
	EventType_MODEM_TRANSFER_STARTED                 EventType = 17
	EventType_MODEM_TRANSFER_RECEIVED                EventType = 18
	EventType_MODEM_TRANSFER_CANCELLED               EventType = 19
	EventType_MODEM_TRANSFER_NOT_RECEIVED            EventType = 20
	EventType_MODEM_TRANSFER_RETURN_TRANSFER_STARTED EventType = 21
	EventType_MODEM_CLAIMED                          EventType = 22
	EventType_PUBLISHER_CREATED                      EventType = 1
	EventType_PUBLISHER_UPDATED                      EventType = 2
	EventType_PUBLISHER_DELETED                      EventType = 3
	EventType_PUBLISHER_FAILED                       EventType = 11
	EventType_USER_ACCESS_REQUEST                    EventType = 8
	EventType_USER_ADDED                             EventType = 9
	EventType_USER_REMOVED                           EventType = 10
	EventType_TOKEN_CREATED                          EventType = 31
	EventType_TOKEN_EXPIRY_WARNING                   EventType = 25
	EventType_TOKEN_EXPIRED                          EventType = 26
	EventType_TOKEN_DELETED                          EventType = 32
)

var EventType_name = map[int32]string{
	0:  "DEFAULT",
	12: "ORGANIZATION_UPDATED",
	4:  "MODEM_LOCATION_UPDATED",
	33: "MODEM_ACTIVATED",
	16: "MODEM_STALE",
	5:  "MODEM_MESSAGE_RECEIVED",
	13: "MODEM_MESSAGE_SEQUENCE_SKIP",
	14: "MODEM_MESSAGE_DELAYED",
	15: "MODEM_MESSAGE_CANNOT_BE_PARSED",
	17: "MODEM_TRANSFER_STARTED",
	18: "MODEM_TRANSFER_RECEIVED",
	19: "MODEM_TRANSFER_CANCELLED",
	20: "MODEM_TRANSFER_NOT_RECEIVED",
	21: "MODEM_TRANSFER_RETURN_TRANSFER_STARTED",
	22: "MODEM_CLAIMED",
	1:  "PUBLISHER_CREATED",
	2:  "PUBLISHER_UPDATED",
	3:  "PUBLISHER_DELETED",
	11: "PUBLISHER_FAILED",
	8:  "USER_ACCESS_REQUEST",
	9:  "USER_ADDED",
	10: "USER_REMOVED",
	31: "TOKEN_CREATED",
	25: "TOKEN_EXPIRY_WARNING",
	26: "TOKEN_EXPIRED",
	32: "TOKEN_DELETED",
}
var EventType_value = map[string]int32{
	"DEFAULT":                                0,
	"ORGANIZATION_UPDATED":                   12,
	"MODEM_LOCATION_UPDATED":                 4,
	"MODEM_ACTIVATED":                        33,
	"MODEM_STALE":                            16,
	"MODEM_MESSAGE_RECEIVED":                 5,
	"MODEM_MESSAGE_SEQUENCE_SKIP":            13,
	"MODEM_MESSAGE_DELAYED":                  14,
	"MODEM_MESSAGE_CANNOT_BE_PARSED":         15,
	"MODEM_TRANSFER_STARTED":                 17,
	"MODEM_TRANSFER_RECEIVED":                18,
	"MODEM_TRANSFER_CANCELLED":               19,
	"MODEM_TRANSFER_NOT_RECEIVED":            20,
	"MODEM_TRANSFER_RETURN_TRANSFER_STARTED": 21,
	"MODEM_CLAIMED":                          22,
	"PUBLISHER_CREATED":                      1,
	"PUBLISHER_UPDATED":                      2,
	"PUBLISHER_DELETED":                      3,
	"PUBLISHER_FAILED":                       11,
	"USER_ACCESS_REQUEST":                    8,
	"USER_ADDED":                             9,
	"USER_REMOVED":                           10,
	"TOKEN_CREATED":                          31,
	"TOKEN_EXPIRY_WARNING":                   25,
	"TOKEN_EXPIRED":                          26,
	"TOKEN_DELETED":                          32,
}

func (x EventType) String() string {
	return proto.EnumName(EventType_name, int32(x))
}
func (EventType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// Health is an indicator for issues. It is used for modems and publishers to give a quick indication of issues.
type Health int32

const (
	Health_OK      Health = 0
	Health_WARNING Health = 1
	Health_ERROR   Health = 2
)

var Health_name = map[int32]string{
	0: "OK",
	1: "WARNING",
	2: "ERROR",
}
var Health_value = map[string]int32{
	"OK":      0,
	"WARNING": 1,
	"ERROR":   2,
}

func (x Health) String() string {
	return proto.EnumName(Health_name, int32(x))
}
func (Health) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

// Update object for an int that can be set to 0.
// Since 0 is also the default value, we need to distinguish between an omitted value and setting the value to 0,
// in an update object.
//
// To use this to update, set a value and set updated to true
type UpdateZeroableInt struct {
	Updated bool   `protobuf:"varint,1,opt,name=updated" json:"updated,omitempty"`
	Value   uint32 `protobuf:"varint,2,opt,name=value" json:"value,omitempty"`
}

func (m *UpdateZeroableInt) Reset()                    { *m = UpdateZeroableInt{} }
func (m *UpdateZeroableInt) String() string            { return proto.CompactTextString(m) }
func (*UpdateZeroableInt) ProtoMessage()               {}
func (*UpdateZeroableInt) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *UpdateZeroableInt) GetUpdated() bool {
	if m != nil {
		return m.Updated
	}
	return false
}

func (m *UpdateZeroableInt) GetValue() uint32 {
	if m != nil {
		return m.Value
	}
	return 0
}

// Update object for a string that can be empty.
// Since an empty string is also the default value, we need to distinguish between an omitted value and
// setting the value to an empty string, in an update object.
//
// To use this to update, set a value and set updated to true
type UpdateClearableString struct {
	Updated bool   `protobuf:"varint,1,opt,name=updated" json:"updated,omitempty"`
	Value   string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *UpdateClearableString) Reset()                    { *m = UpdateClearableString{} }
func (m *UpdateClearableString) String() string            { return proto.CompactTextString(m) }
func (*UpdateClearableString) ProtoMessage()               {}
func (*UpdateClearableString) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *UpdateClearableString) GetUpdated() bool {
	if m != nil {
		return m.Updated
	}
	return false
}

func (m *UpdateClearableString) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// Update object for an optional id.
//
// To use this to update, set a value and set updated to true. To clear the id, set updated to true, but set no value.
type UpdateOptionalId struct {
	Updated bool  `protobuf:"varint,1,opt,name=updated" json:"updated,omitempty"`
	Value   int64 `protobuf:"varint,2,opt,name=value" json:"value,omitempty"`
}

func (m *UpdateOptionalId) Reset()                    { *m = UpdateOptionalId{} }
func (m *UpdateOptionalId) String() string            { return proto.CompactTextString(m) }
func (*UpdateOptionalId) ProtoMessage()               {}
func (*UpdateOptionalId) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *UpdateOptionalId) GetUpdated() bool {
	if m != nil {
		return m.Updated
	}
	return false
}

func (m *UpdateOptionalId) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

// Update object for a boolean.
// Since false is the default value, we need to distinguish between an omitted value and setting the value to false,
// in an update object.
//
// To use this to update, set a value and set updated to true
type UpdateBoolean struct {
	Updated bool `protobuf:"varint,1,opt,name=updated" json:"updated,omitempty"`
	Value   bool `protobuf:"varint,2,opt,name=value" json:"value,omitempty"`
}

func (m *UpdateBoolean) Reset()                    { *m = UpdateBoolean{} }
func (m *UpdateBoolean) String() string            { return proto.CompactTextString(m) }
func (*UpdateBoolean) ProtoMessage()               {}
func (*UpdateBoolean) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *UpdateBoolean) GetUpdated() bool {
	if m != nil {
		return m.Updated
	}
	return false
}

func (m *UpdateBoolean) GetValue() bool {
	if m != nil {
		return m.Value
	}
	return false
}

// Period of time between two timestamps. Typically used for filtering.
type TimeRange struct {
	Start *Timestamp `protobuf:"bytes,1,opt,name=start" json:"start,omitempty"`
	End   *Timestamp `protobuf:"bytes,2,opt,name=end" json:"end,omitempty"`
}

func (m *TimeRange) Reset()                    { *m = TimeRange{} }
func (m *TimeRange) String() string            { return proto.CompactTextString(m) }
func (*TimeRange) ProtoMessage()               {}
func (*TimeRange) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *TimeRange) GetStart() *Timestamp {
	if m != nil {
		return m.Start
	}
	return nil
}

func (m *TimeRange) GetEnd() *Timestamp {
	if m != nil {
		return m.End
	}
	return nil
}

// Timestamp type for convenience.
// Some clients are better at parsing Google's seconds/nanos based timestamp, while others prefer a text-based format.
// To accommodate this, this Timestamp type supports both.
// When used as API output, both the timestamp and textual fields will be set. The textual field has the commonly
// used ISO 8601 format (i.e. "2018-01-01T13:00:00Z").
// When used an API input, only one of the fields is needed, there is no need to set both. When both are set, the
// timestamp field will be used, the textual field will be discarded.
type Timestamp struct {
	Timestamp *google_protobuf.Timestamp `protobuf:"bytes,1,opt,name=timestamp" json:"timestamp,omitempty"`
	Textual   string                     `protobuf:"bytes,4,opt,name=textual" json:"textual,omitempty"`
}

func (m *Timestamp) Reset()                    { *m = Timestamp{} }
func (m *Timestamp) String() string            { return proto.CompactTextString(m) }
func (*Timestamp) ProtoMessage()               {}
func (*Timestamp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Timestamp) GetTimestamp() *google_protobuf.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *Timestamp) GetTextual() string {
	if m != nil {
		return m.Textual
	}
	return ""
}

// Date type for convenience.
// Some clients are better at parsing year, month and day of month as separate fields, while others prefer a
// text-based format. To accommodate this, this Date type supports both.
// When used as API output, both the int fields and textual fields will be set. The textual field has the commonly
// used ISO 8601 local date format (i.e. "2018-01-01").
// When used an API input, either specify the int fields or the textual field. If both are specified, the textual
// field will be discarded.
type Date struct {
	Year    uint32 `protobuf:"varint,1,opt,name=year" json:"year,omitempty"`
	Month   uint32 `protobuf:"varint,2,opt,name=month" json:"month,omitempty"`
	Day     uint32 `protobuf:"varint,3,opt,name=day" json:"day,omitempty"`
	Textual string `protobuf:"bytes,4,opt,name=textual" json:"textual,omitempty"`
}

func (m *Date) Reset()                    { *m = Date{} }
func (m *Date) String() string            { return proto.CompactTextString(m) }
func (*Date) ProtoMessage()               {}
func (*Date) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Date) GetYear() uint32 {
	if m != nil {
		return m.Year
	}
	return 0
}

func (m *Date) GetMonth() uint32 {
	if m != nil {
		return m.Month
	}
	return 0
}

func (m *Date) GetDay() uint32 {
	if m != nil {
		return m.Day
	}
	return 0
}

func (m *Date) GetTextual() string {
	if m != nil {
		return m.Textual
	}
	return ""
}

// Geographic latitude and longitude coordinates specified in decimal degrees.
type Location struct {
	Latitude  float64 `protobuf:"fixed64,1,opt,name=latitude" json:"latitude,omitempty"`
	Longitude float64 `protobuf:"fixed64,2,opt,name=longitude" json:"longitude,omitempty"`
}

func (m *Location) Reset()                    { *m = Location{} }
func (m *Location) String() string            { return proto.CompactTextString(m) }
func (*Location) ProtoMessage()               {}
func (*Location) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *Location) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *Location) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

// Area between two locations, normalized to bottom-left and top-right points.
// Center point is added for convenience; it's simple the point directly between the two corner points.
// When sending an Area to the api, the center location is ignored.
type Area struct {
	Center     *Location `protobuf:"bytes,1,opt,name=center" json:"center,omitempty"`
	BottomLeft *Location `protobuf:"bytes,2,opt,name=bottom_left,json=bottomLeft" json:"bottom_left,omitempty"`
	TopRight   *Location `protobuf:"bytes,4,opt,name=top_right,json=topRight" json:"top_right,omitempty"`
}

func (m *Area) Reset()                    { *m = Area{} }
func (m *Area) String() string            { return proto.CompactTextString(m) }
func (*Area) ProtoMessage()               {}
func (*Area) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *Area) GetCenter() *Location {
	if m != nil {
		return m.Center
	}
	return nil
}

func (m *Area) GetBottomLeft() *Location {
	if m != nil {
		return m.BottomLeft
	}
	return nil
}

func (m *Area) GetTopRight() *Location {
	if m != nil {
		return m.TopRight
	}
	return nil
}

type Shape struct {
	Path []*Location `protobuf:"bytes,1,rep,name=path" json:"path,omitempty"`
}

func (m *Shape) Reset()                    { *m = Shape{} }
func (m *Shape) String() string            { return proto.CompactTextString(m) }
func (*Shape) ProtoMessage()               {}
func (*Shape) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *Shape) GetPath() []*Location {
	if m != nil {
		return m.Path
	}
	return nil
}

// Selection object for map data. Filter modems on the map by id, (child)organization.
// Also, filter the map data by level and area restriction, to only display a small area at a detailed map level,
// for example
type LocationSelection struct {
	Areas  []*Area  `protobuf:"bytes,1,rep,name=areas" json:"areas,omitempty"`
	Shapes []*Shape `protobuf:"bytes,2,rep,name=shapes" json:"shapes,omitempty"`
}

func (m *LocationSelection) Reset()                    { *m = LocationSelection{} }
func (m *LocationSelection) String() string            { return proto.CompactTextString(m) }
func (*LocationSelection) ProtoMessage()               {}
func (*LocationSelection) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *LocationSelection) GetAreas() []*Area {
	if m != nil {
		return m.Areas
	}
	return nil
}

func (m *LocationSelection) GetShapes() []*Shape {
	if m != nil {
		return m.Shapes
	}
	return nil
}

// Some clients may prefer direct binary data, while other prefer a hexadecimal string,
// both for input and output. To support both methods, this object is used to represent binary data.
// When you receive this from the api, both fields are set. When sending it to the api, only one field is required.
type BytesOrHex struct {
	Bytes []byte `protobuf:"bytes,1,opt,name=bytes,proto3" json:"bytes,omitempty"`
	Hex   string `protobuf:"bytes,2,opt,name=hex" json:"hex,omitempty"`
}

func (m *BytesOrHex) Reset()                    { *m = BytesOrHex{} }
func (m *BytesOrHex) String() string            { return proto.CompactTextString(m) }
func (*BytesOrHex) ProtoMessage()               {}
func (*BytesOrHex) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *BytesOrHex) GetBytes() []byte {
	if m != nil {
		return m.Bytes
	}
	return nil
}

func (m *BytesOrHex) GetHex() string {
	if m != nil {
		return m.Hex
	}
	return ""
}

// Pagination is normalized across the api. Provide a pagination object to get a specific page or offset,
// or limit your data.
//
// Calls that have a pagination option automatically return a Pagination.Result, which contains
// either the specified pagination options or the defaults, as well as total counts. It also contains Pagination
// objects that can be used for the previous and next page.
//
// This effectively means that an api user would never need to create their own pagination object; as long as they
// start at the first page and continue to the next, they can use the provided Pagination object.
type Pagination struct {
	Size int32 `protobuf:"varint,1,opt,name=size" json:"size,omitempty"`
	Page int32 `protobuf:"varint,2,opt,name=page" json:"page,omitempty"`
}

func (m *Pagination) Reset()                    { *m = Pagination{} }
func (m *Pagination) String() string            { return proto.CompactTextString(m) }
func (*Pagination) ProtoMessage()               {}
func (*Pagination) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *Pagination) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Pagination) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

type Pagination_Result struct {
	Size       int32       `protobuf:"varint,1,opt,name=size" json:"size,omitempty"`
	Page       int32       `protobuf:"varint,2,opt,name=page" json:"page,omitempty"`
	Total      int32       `protobuf:"varint,3,opt,name=total" json:"total,omitempty"`
	TotalPages int32       `protobuf:"varint,4,opt,name=total_pages,json=totalPages" json:"total_pages,omitempty"`
	Previous   *Pagination `protobuf:"bytes,6,opt,name=previous" json:"previous,omitempty"`
	Next       *Pagination `protobuf:"bytes,7,opt,name=next" json:"next,omitempty"`
}

func (m *Pagination_Result) Reset()                    { *m = Pagination_Result{} }
func (m *Pagination_Result) String() string            { return proto.CompactTextString(m) }
func (*Pagination_Result) ProtoMessage()               {}
func (*Pagination_Result) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12, 0} }

func (m *Pagination_Result) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Pagination_Result) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *Pagination_Result) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *Pagination_Result) GetTotalPages() int32 {
	if m != nil {
		return m.TotalPages
	}
	return 0
}

func (m *Pagination_Result) GetPrevious() *Pagination {
	if m != nil {
		return m.Previous
	}
	return nil
}

func (m *Pagination_Result) GetNext() *Pagination {
	if m != nil {
		return m.Next
	}
	return nil
}

// Filters used in many api calls to filter the data sources, results, etc.
//
// "Include" fields filter out anything not in the include set.
// When not set, all items will be returned (except excluded items)
// "Exclude" fields filter out anything in the exclude set.
// When combined with include, exclude takes precedence when determining whether an item is filtered
type Filter struct {
}

func (m *Filter) Reset()                    { *m = Filter{} }
func (m *Filter) String() string            { return proto.CompactTextString(m) }
func (*Filter) ProtoMessage()               {}
func (*Filter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

// Specify which organizations to get data from. By default, data is only retrieved for the current organization, but
// using ChildOrganizations we can specify to include a number of, or all, sub-organizations.
//
// Note: ChildOrganization differs from other filters in that it defaults to not allowing anything, where the
// other filters default to allowing everything
type Filter_ChildOrganizations struct {
	IncludeAll bool     `protobuf:"varint,1,opt,name=include_all,json=includeAll" json:"include_all,omitempty"`
	Include    []string `protobuf:"bytes,2,rep,name=include" json:"include,omitempty"`
	Exclude    []string `protobuf:"bytes,3,rep,name=exclude" json:"exclude,omitempty"`
}

func (m *Filter_ChildOrganizations) Reset()                    { *m = Filter_ChildOrganizations{} }
func (m *Filter_ChildOrganizations) String() string            { return proto.CompactTextString(m) }
func (*Filter_ChildOrganizations) ProtoMessage()               {}
func (*Filter_ChildOrganizations) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13, 0} }

func (m *Filter_ChildOrganizations) GetIncludeAll() bool {
	if m != nil {
		return m.IncludeAll
	}
	return false
}

func (m *Filter_ChildOrganizations) GetInclude() []string {
	if m != nil {
		return m.Include
	}
	return nil
}

func (m *Filter_ChildOrganizations) GetExclude() []string {
	if m != nil {
		return m.Exclude
	}
	return nil
}

type Filter_Organizations struct {
	Include []string `protobuf:"bytes,1,rep,name=include" json:"include,omitempty"`
	Exclude []string `protobuf:"bytes,2,rep,name=exclude" json:"exclude,omitempty"`
}

func (m *Filter_Organizations) Reset()                    { *m = Filter_Organizations{} }
func (m *Filter_Organizations) String() string            { return proto.CompactTextString(m) }
func (*Filter_Organizations) ProtoMessage()               {}
func (*Filter_Organizations) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13, 1} }

func (m *Filter_Organizations) GetInclude() []string {
	if m != nil {
		return m.Include
	}
	return nil
}

func (m *Filter_Organizations) GetExclude() []string {
	if m != nil {
		return m.Exclude
	}
	return nil
}

type Filter_Events struct {
	Include []EventType `protobuf:"varint,1,rep,packed,name=include,enum=hiber.EventType" json:"include,omitempty"`
	Exclude []EventType `protobuf:"varint,2,rep,packed,name=exclude,enum=hiber.EventType" json:"exclude,omitempty"`
}

func (m *Filter_Events) Reset()                    { *m = Filter_Events{} }
func (m *Filter_Events) String() string            { return proto.CompactTextString(m) }
func (*Filter_Events) ProtoMessage()               {}
func (*Filter_Events) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13, 2} }

func (m *Filter_Events) GetInclude() []EventType {
	if m != nil {
		return m.Include
	}
	return nil
}

func (m *Filter_Events) GetExclude() []EventType {
	if m != nil {
		return m.Exclude
	}
	return nil
}

type Filter_Modems struct {
	Include []string `protobuf:"bytes,1,rep,name=include" json:"include,omitempty"`
	Exclude []string `protobuf:"bytes,2,rep,name=exclude" json:"exclude,omitempty"`
}

func (m *Filter_Modems) Reset()                    { *m = Filter_Modems{} }
func (m *Filter_Modems) String() string            { return proto.CompactTextString(m) }
func (*Filter_Modems) ProtoMessage()               {}
func (*Filter_Modems) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13, 3} }

func (m *Filter_Modems) GetInclude() []string {
	if m != nil {
		return m.Include
	}
	return nil
}

func (m *Filter_Modems) GetExclude() []string {
	if m != nil {
		return m.Exclude
	}
	return nil
}

type Filter_Tags struct {
	Include []int64 `protobuf:"varint,1,rep,packed,name=include" json:"include,omitempty"`
	Exclude []int64 `protobuf:"varint,2,rep,packed,name=exclude" json:"exclude,omitempty"`
}

func (m *Filter_Tags) Reset()                    { *m = Filter_Tags{} }
func (m *Filter_Tags) String() string            { return proto.CompactTextString(m) }
func (*Filter_Tags) ProtoMessage()               {}
func (*Filter_Tags) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13, 4} }

func (m *Filter_Tags) GetInclude() []int64 {
	if m != nil {
		return m.Include
	}
	return nil
}

func (m *Filter_Tags) GetExclude() []int64 {
	if m != nil {
		return m.Exclude
	}
	return nil
}

type Filter_Webhooks struct {
	Include    []int64 `protobuf:"varint,1,rep,packed,name=include" json:"include,omitempty"`
	Exclude    []int64 `protobuf:"varint,2,rep,packed,name=exclude" json:"exclude,omitempty"`
	OnlyActive bool    `protobuf:"varint,3,opt,name=only_active,json=onlyActive" json:"only_active,omitempty"`
}

func (m *Filter_Webhooks) Reset()                    { *m = Filter_Webhooks{} }
func (m *Filter_Webhooks) String() string            { return proto.CompactTextString(m) }
func (*Filter_Webhooks) ProtoMessage()               {}
func (*Filter_Webhooks) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13, 5} }

func (m *Filter_Webhooks) GetInclude() []int64 {
	if m != nil {
		return m.Include
	}
	return nil
}

func (m *Filter_Webhooks) GetExclude() []int64 {
	if m != nil {
		return m.Exclude
	}
	return nil
}

func (m *Filter_Webhooks) GetOnlyActive() bool {
	if m != nil {
		return m.OnlyActive
	}
	return false
}

type Filter_Publishers struct {
	Include    []int64 `protobuf:"varint,1,rep,packed,name=include" json:"include,omitempty"`
	Exclude    []int64 `protobuf:"varint,2,rep,packed,name=exclude" json:"exclude,omitempty"`
	OnlyActive bool    `protobuf:"varint,3,opt,name=only_active,json=onlyActive" json:"only_active,omitempty"`
}

func (m *Filter_Publishers) Reset()                    { *m = Filter_Publishers{} }
func (m *Filter_Publishers) String() string            { return proto.CompactTextString(m) }
func (*Filter_Publishers) ProtoMessage()               {}
func (*Filter_Publishers) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13, 6} }

func (m *Filter_Publishers) GetInclude() []int64 {
	if m != nil {
		return m.Include
	}
	return nil
}

func (m *Filter_Publishers) GetExclude() []int64 {
	if m != nil {
		return m.Exclude
	}
	return nil
}

func (m *Filter_Publishers) GetOnlyActive() bool {
	if m != nil {
		return m.OnlyActive
	}
	return false
}

type Filter_Users struct {
	Include []string `protobuf:"bytes,1,rep,name=include" json:"include,omitempty"`
	Exclude []string `protobuf:"bytes,2,rep,name=exclude" json:"exclude,omitempty"`
}

func (m *Filter_Users) Reset()                    { *m = Filter_Users{} }
func (m *Filter_Users) String() string            { return proto.CompactTextString(m) }
func (*Filter_Users) ProtoMessage()               {}
func (*Filter_Users) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13, 7} }

func (m *Filter_Users) GetInclude() []string {
	if m != nil {
		return m.Include
	}
	return nil
}

func (m *Filter_Users) GetExclude() []string {
	if m != nil {
		return m.Exclude
	}
	return nil
}

type Filter_OrganizationPermissions struct {
	IncludeAll bool                     `protobuf:"varint,1,opt,name=include_all,json=includeAll" json:"include_all,omitempty"`
	Include    []OrganizationPermission `protobuf:"varint,2,rep,packed,name=include,enum=hiber.OrganizationPermission" json:"include,omitempty"`
	Exclude    []OrganizationPermission `protobuf:"varint,3,rep,packed,name=exclude,enum=hiber.OrganizationPermission" json:"exclude,omitempty"`
}

func (m *Filter_OrganizationPermissions) Reset()         { *m = Filter_OrganizationPermissions{} }
func (m *Filter_OrganizationPermissions) String() string { return proto.CompactTextString(m) }
func (*Filter_OrganizationPermissions) ProtoMessage()    {}
func (*Filter_OrganizationPermissions) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{13, 8}
}

func (m *Filter_OrganizationPermissions) GetIncludeAll() bool {
	if m != nil {
		return m.IncludeAll
	}
	return false
}

func (m *Filter_OrganizationPermissions) GetInclude() []OrganizationPermission {
	if m != nil {
		return m.Include
	}
	return nil
}

func (m *Filter_OrganizationPermissions) GetExclude() []OrganizationPermission {
	if m != nil {
		return m.Exclude
	}
	return nil
}

type Filter_UserPermissions struct {
	IncludeAll bool             `protobuf:"varint,1,opt,name=include_all,json=includeAll" json:"include_all,omitempty"`
	Include    []UserPermission `protobuf:"varint,2,rep,packed,name=include,enum=hiber.UserPermission" json:"include,omitempty"`
	Exclude    []UserPermission `protobuf:"varint,3,rep,packed,name=exclude,enum=hiber.UserPermission" json:"exclude,omitempty"`
}

func (m *Filter_UserPermissions) Reset()                    { *m = Filter_UserPermissions{} }
func (m *Filter_UserPermissions) String() string            { return proto.CompactTextString(m) }
func (*Filter_UserPermissions) ProtoMessage()               {}
func (*Filter_UserPermissions) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13, 9} }

func (m *Filter_UserPermissions) GetIncludeAll() bool {
	if m != nil {
		return m.IncludeAll
	}
	return false
}

func (m *Filter_UserPermissions) GetInclude() []UserPermission {
	if m != nil {
		return m.Include
	}
	return nil
}

func (m *Filter_UserPermissions) GetExclude() []UserPermission {
	if m != nil {
		return m.Exclude
	}
	return nil
}

func init() {
	proto.RegisterType((*UpdateZeroableInt)(nil), "hiber.UpdateZeroableInt")
	proto.RegisterType((*UpdateClearableString)(nil), "hiber.UpdateClearableString")
	proto.RegisterType((*UpdateOptionalId)(nil), "hiber.UpdateOptionalId")
	proto.RegisterType((*UpdateBoolean)(nil), "hiber.UpdateBoolean")
	proto.RegisterType((*TimeRange)(nil), "hiber.TimeRange")
	proto.RegisterType((*Timestamp)(nil), "hiber.Timestamp")
	proto.RegisterType((*Date)(nil), "hiber.Date")
	proto.RegisterType((*Location)(nil), "hiber.Location")
	proto.RegisterType((*Area)(nil), "hiber.Area")
	proto.RegisterType((*Shape)(nil), "hiber.Shape")
	proto.RegisterType((*LocationSelection)(nil), "hiber.LocationSelection")
	proto.RegisterType((*BytesOrHex)(nil), "hiber.BytesOrHex")
	proto.RegisterType((*Pagination)(nil), "hiber.Pagination")
	proto.RegisterType((*Pagination_Result)(nil), "hiber.Pagination.Result")
	proto.RegisterType((*Filter)(nil), "hiber.Filter")
	proto.RegisterType((*Filter_ChildOrganizations)(nil), "hiber.Filter.ChildOrganizations")
	proto.RegisterType((*Filter_Organizations)(nil), "hiber.Filter.Organizations")
	proto.RegisterType((*Filter_Events)(nil), "hiber.Filter.Events")
	proto.RegisterType((*Filter_Modems)(nil), "hiber.Filter.Modems")
	proto.RegisterType((*Filter_Tags)(nil), "hiber.Filter.Tags")
	proto.RegisterType((*Filter_Webhooks)(nil), "hiber.Filter.Webhooks")
	proto.RegisterType((*Filter_Publishers)(nil), "hiber.Filter.Publishers")
	proto.RegisterType((*Filter_Users)(nil), "hiber.Filter.Users")
	proto.RegisterType((*Filter_OrganizationPermissions)(nil), "hiber.Filter.OrganizationPermissions")
	proto.RegisterType((*Filter_UserPermissions)(nil), "hiber.Filter.UserPermissions")
	proto.RegisterEnum("hiber.EventType", EventType_name, EventType_value)
	proto.RegisterEnum("hiber.Health", Health_name, Health_value)
}

func init() { proto.RegisterFile("base.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1249 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0x6f, 0x6e, 0xdb, 0xc6,
	0x13, 0x0d, 0x25, 0x51, 0x96, 0x46, 0xfe, 0x43, 0x6f, 0xec, 0x44, 0x51, 0xf2, 0xfb, 0xd9, 0x51,
	0xdb, 0x34, 0x30, 0x52, 0xbb, 0x48, 0x0b, 0xa4, 0x68, 0x0b, 0x14, 0x34, 0xb9, 0x76, 0x84, 0xc8,
	0x92, 0xba, 0xa4, 0x92, 0x26, 0x08, 0xc0, 0xae, 0xac, 0x8d, 0x44, 0x94, 0x22, 0x09, 0x72, 0x65,
	0xd8, 0xb9, 0x44, 0xfb, 0xa1, 0xc7, 0xe8, 0x15, 0x7a, 0x92, 0x5e, 0xa3, 0x07, 0x28, 0x76, 0x49,
	0x8a, 0xa6, 0xff, 0xb4, 0x6e, 0x80, 0x7e, 0xdb, 0x79, 0x6f, 0xe6, 0xed, 0xdb, 0x99, 0x91, 0x4d,
	0x80, 0x11, 0x8d, 0xd9, 0x6e, 0x18, 0x05, 0x3c, 0x40, 0xea, 0xd4, 0x1d, 0xb1, 0xa8, 0xb5, 0x35,
	0x09, 0x82, 0x89, 0xc7, 0xf6, 0x24, 0x38, 0x9a, 0xbf, 0xdb, 0xe3, 0xee, 0x8c, 0xc5, 0x9c, 0xce,
	0xc2, 0x24, 0xaf, 0xa5, 0x85, 0x2c, 0x9a, 0xb9, 0x71, 0xec, 0x06, 0x7e, 0x82, 0xb4, 0x0d, 0x58,
	0x1f, 0x86, 0x63, 0xca, 0xd9, 0x1b, 0x16, 0x05, 0x74, 0xe4, 0xb1, 0x8e, 0xcf, 0x51, 0x13, 0x96,
	0xe6, 0x12, 0x1c, 0x37, 0x95, 0x6d, 0xe5, 0x71, 0x8d, 0x64, 0x21, 0xda, 0x00, 0xf5, 0x84, 0x7a,
	0x73, 0xd6, 0x2c, 0x6d, 0x2b, 0x8f, 0x57, 0x48, 0x12, 0xb4, 0x0f, 0x61, 0x33, 0x11, 0x31, 0x3c,
	0x46, 0x23, 0xa1, 0x62, 0xf1, 0xc8, 0xf5, 0x27, 0x37, 0x15, 0xaa, 0x67, 0x42, 0xfb, 0xa0, 0x25,
	0x42, 0xfd, 0x90, 0xbb, 0x81, 0x4f, 0xbd, 0xce, 0xf8, 0xa6, 0x1a, 0xe5, 0x4c, 0xe3, 0x3b, 0x58,
	0x49, 0x34, 0xf6, 0x83, 0xc0, 0x63, 0xd4, 0xbf, 0xa9, 0x40, 0x2d, 0x13, 0x78, 0x05, 0x75, 0xdb,
	0x9d, 0x31, 0x42, 0xfd, 0x09, 0x43, 0x8f, 0x40, 0x8d, 0x39, 0x8d, 0xb8, 0x2c, 0x6d, 0x3c, 0xd5,
	0x76, 0x65, 0xa7, 0x77, 0xed, 0xac, 0xb1, 0x24, 0xa1, 0x51, 0x1b, 0xca, 0xcc, 0x1f, 0x4b, 0xa1,
	0xab, 0xb2, 0x04, 0xd9, 0x76, 0x12, 0x61, 0x89, 0xa0, 0xaf, 0xa0, 0xbe, 0x98, 0x4e, 0x2a, 0xde,
	0xda, 0x4d, 0xe6, 0xb7, 0x9b, 0xcd, 0xef, 0x9c, 0x40, 0x9e, 0x2c, 0xde, 0xc3, 0xd9, 0x29, 0x9f,
	0x53, 0xaf, 0x59, 0x91, 0xcd, 0xcb, 0xc2, 0xf6, 0x5b, 0xa8, 0x98, 0x94, 0x33, 0x84, 0xa0, 0x72,
	0xc6, 0x68, 0x24, 0x65, 0x57, 0x88, 0x3c, 0x8b, 0xb7, 0xce, 0x02, 0x9f, 0x4f, 0xb3, 0xc9, 0xc9,
	0x00, 0x69, 0x50, 0x1e, 0xd3, 0xb3, 0x66, 0x59, 0x62, 0xe2, 0xf8, 0x37, 0xea, 0x26, 0xd4, 0xba,
	0xc1, 0x31, 0x15, 0x83, 0x41, 0x2d, 0xa8, 0x79, 0x94, 0xbb, 0x7c, 0x3e, 0x66, 0xf2, 0x16, 0x85,
	0x2c, 0x62, 0xf4, 0x00, 0xea, 0x5e, 0xe0, 0x4f, 0x12, 0xb2, 0x24, 0xc9, 0x1c, 0x68, 0xff, 0xac,
	0x40, 0x45, 0x8f, 0x18, 0x45, 0x9f, 0x42, 0xf5, 0x98, 0xf9, 0x9c, 0x45, 0xe9, 0xeb, 0xd7, 0xd2,
	0xa6, 0x65, 0x77, 0x90, 0x94, 0x46, 0x9f, 0x43, 0x63, 0x14, 0x70, 0x1e, 0xcc, 0x1c, 0x8f, 0xbd,
	0xe3, 0x69, 0x8b, 0x2f, 0x65, 0x43, 0x92, 0xd3, 0x65, 0xef, 0x38, 0x7a, 0x02, 0x75, 0x1e, 0x84,
	0x4e, 0xe4, 0x4e, 0xa6, 0x5c, 0xbe, 0xe2, 0x8a, 0xfc, 0x1a, 0x0f, 0x42, 0x22, 0x12, 0xda, 0x4f,
	0x40, 0xb5, 0xa6, 0x34, 0x64, 0xe8, 0x23, 0xa8, 0x84, 0x94, 0x4f, 0x9b, 0xca, 0x76, 0xf9, 0xaa,
	0x0a, 0x49, 0xb6, 0xdf, 0xc2, 0x7a, 0x86, 0x58, 0xcc, 0x63, 0xc7, 0xb2, 0x1d, 0x0f, 0x41, 0xa5,
	0x11, 0xa3, 0x71, 0x5a, 0xda, 0x48, 0x4b, 0xc5, 0x3b, 0x49, 0xc2, 0xa0, 0x8f, 0xa1, 0x1a, 0x8b,
	0x5b, 0xe2, 0x66, 0x49, 0xe6, 0x2c, 0xa7, 0x39, 0xf2, 0x6a, 0x92, 0x72, 0xed, 0x2f, 0x01, 0xf6,
	0xcf, 0x38, 0x8b, 0xfb, 0xd1, 0x73, 0x76, 0x2a, 0x66, 0x36, 0x12, 0x91, 0xec, 0xd0, 0x32, 0x49,
	0x02, 0x31, 0xb3, 0x29, 0x3b, 0x4d, 0x7f, 0x38, 0xe2, 0xd8, 0xfe, 0x53, 0x01, 0x18, 0xd0, 0x89,
	0xeb, 0x27, 0xc3, 0x41, 0x50, 0x89, 0xdd, 0xf7, 0xc9, 0x60, 0x54, 0x22, 0xcf, 0x02, 0x0b, 0xe9,
	0x24, 0x99, 0x87, 0x4a, 0xe4, 0xb9, 0xf5, 0xbb, 0x02, 0x55, 0xc2, 0xe2, 0xb9, 0xc7, 0x6f, 0x5a,
	0x22, 0x1c, 0xf1, 0x80, 0x53, 0x4f, 0x6e, 0x8c, 0x4a, 0x92, 0x00, 0x6d, 0x41, 0x43, 0x1e, 0x1c,
	0x91, 0x13, 0xcb, 0x8e, 0xab, 0x04, 0x24, 0x34, 0x10, 0x08, 0xfa, 0x0c, 0x6a, 0x61, 0xc4, 0x4e,
	0xdc, 0x60, 0x1e, 0x37, 0xab, 0x72, 0x1e, 0xeb, 0xe9, 0xf3, 0x73, 0xdb, 0x64, 0x91, 0x82, 0x3e,
	0x81, 0x8a, 0xcf, 0x4e, 0x79, 0x73, 0xe9, 0xba, 0x54, 0x49, 0xb7, 0xff, 0x58, 0x82, 0xea, 0x81,
	0xeb, 0x71, 0x16, 0xb5, 0x5c, 0x40, 0xc6, 0xd4, 0xf5, 0xc6, 0xfd, 0x68, 0x42, 0x7d, 0xf7, 0xbd,
	0xcc, 0x8a, 0x85, 0x2f, 0xd7, 0x3f, 0xf6, 0xe6, 0x63, 0xe6, 0x50, 0xcf, 0x4b, 0x7f, 0xfd, 0x90,
	0x42, 0xba, 0xe7, 0x89, 0x65, 0x4f, 0x23, 0x39, 0x95, 0x3a, 0xc9, 0x42, 0xc1, 0xb0, 0xd3, 0x84,
	0x29, 0x27, 0x4c, 0x1a, 0xb6, 0x0c, 0x58, 0x29, 0xde, 0x72, 0x4e, 0x44, 0xb9, 0x56, 0xa4, 0x54,
	0x14, 0xf9, 0x11, 0xaa, 0xf8, 0x84, 0xf9, 0x3c, 0x46, 0x3b, 0xc5, 0xea, 0xd5, 0xc5, 0x1f, 0x0f,
	0xc9, 0xdb, 0x67, 0x21, 0xcb, 0xf5, 0x76, 0x8a, 0x7a, 0x57, 0xe6, 0x66, 0x37, 0x7c, 0x0b, 0xd5,
	0xa3, 0x60, 0xcc, 0x66, 0x1f, 0xe6, 0xef, 0x6b, 0xa8, 0xd8, 0x74, 0x72, 0xa9, 0xb6, 0x7c, 0x6d,
	0x6d, 0x39, 0xaf, 0x75, 0xa0, 0xf6, 0x8a, 0x8d, 0xa6, 0x41, 0xf0, 0xd3, 0x07, 0xd5, 0x8b, 0xa9,
	0x05, 0xbe, 0x77, 0xe6, 0xd0, 0x63, 0xee, 0x9e, 0x30, 0xb9, 0x69, 0x35, 0x02, 0x02, 0xd2, 0x25,
	0xd2, 0xa2, 0x00, 0x83, 0xf9, 0xc8, 0x73, 0xe3, 0x29, 0x8b, 0xfe, 0xa3, 0x2b, 0xbe, 0x01, 0x75,
	0x18, 0x5f, 0xa1, 0x7e, 0xa3, 0xe6, 0xfd, 0xa6, 0xc0, 0xdd, 0xf3, 0x2b, 0x32, 0x58, 0xfc, 0xd3,
	0xbd, 0xc1, 0x4a, 0x3e, 0x2b, 0xae, 0xe4, 0xea, 0xd3, 0xff, 0xa5, 0x33, 0xbe, 0x5a, 0x31, 0xf7,
	0xf3, 0xac, 0xb8, 0xb1, 0xff, 0x5c, 0x98, 0xd9, 0xfd, 0x55, 0x81, 0x35, 0xf1, 0xd8, 0x7f, 0x65,
	0x73, 0xef, 0xa2, 0xcd, 0xcd, 0xf4, 0xb6, 0xa2, 0x52, 0x6e, 0x6f, 0xef, 0xa2, 0xbd, 0xeb, 0x0a,
	0xd2, 0xac, 0x9d, 0x5f, 0x54, 0xa8, 0x2f, 0xf6, 0x1a, 0x35, 0x60, 0xc9, 0xc4, 0x07, 0xfa, 0xb0,
	0x6b, 0x6b, 0xb7, 0x50, 0x13, 0x36, 0xfa, 0xe4, 0x50, 0xef, 0x75, 0xde, 0xe8, 0x76, 0xa7, 0xdf,
	0x73, 0x86, 0x03, 0x53, 0xb7, 0xb1, 0xa9, 0x2d, 0xa3, 0x16, 0xdc, 0x39, 0xea, 0x9b, 0xf8, 0xc8,
	0xe9, 0xf6, 0x8d, 0x22, 0x57, 0x41, 0xb7, 0x61, 0x2d, 0xe1, 0x74, 0xc3, 0xee, 0xbc, 0x94, 0xe0,
	0x43, 0xb4, 0x06, 0x8d, 0x04, 0xb4, 0x6c, 0xbd, 0x8b, 0x35, 0x2d, 0x57, 0x38, 0xc2, 0x96, 0xa5,
	0x1f, 0x62, 0x87, 0x60, 0x03, 0x77, 0x5e, 0x62, 0x53, 0x53, 0xd1, 0x16, 0xdc, 0x2f, 0x72, 0x16,
	0xfe, 0x7e, 0x88, 0x7b, 0x06, 0x76, 0xac, 0x17, 0x9d, 0x81, 0xb6, 0x82, 0xee, 0xc1, 0x66, 0x31,
	0xc1, 0xc4, 0x5d, 0xfd, 0x35, 0x36, 0xb5, 0x55, 0xd4, 0x86, 0xff, 0x17, 0x29, 0x43, 0xef, 0xf5,
	0xfa, 0xb6, 0xb3, 0x8f, 0x9d, 0x81, 0x4e, 0x2c, 0x6c, 0x6a, 0x6b, 0xf9, 0xdd, 0x36, 0xd1, 0x7b,
	0xd6, 0x01, 0x26, 0xc2, 0x15, 0x11, 0x46, 0xd7, 0xd1, 0x7d, 0xb8, 0x7b, 0x81, 0x5b, 0x18, 0x43,
	0xe8, 0x01, 0x34, 0x2f, 0x90, 0x86, 0xde, 0x33, 0x70, 0xb7, 0x8b, 0x4d, 0xed, 0x76, 0x6e, 0x7b,
	0xc1, 0x8a, 0x8b, 0x17, 0xe5, 0x1b, 0x68, 0x07, 0x1e, 0x5d, 0xd2, 0xb6, 0x87, 0xa4, 0x77, 0xd9,
	0xc7, 0x26, 0x5a, 0x87, 0x95, 0x24, 0xd7, 0xe8, 0xea, 0x9d, 0x23, 0x6c, 0x6a, 0x77, 0xd0, 0x26,
	0xac, 0x0f, 0x86, 0xfb, 0xdd, 0x8e, 0xf5, 0x5c, 0x5c, 0x4c, 0xb0, 0x6c, 0xad, 0x52, 0x84, 0xb3,
	0x31, 0x94, 0x8a, 0xb0, 0x89, 0xbb, 0x58, 0xc0, 0x65, 0xb4, 0x01, 0x5a, 0x0e, 0x1f, 0xe8, 0x1d,
	0x61, 0xbd, 0x81, 0xee, 0xc2, 0xed, 0xa1, 0x85, 0x89, 0xa3, 0x1b, 0x06, 0xb6, 0x2c, 0x87, 0x88,
	0x7e, 0x5b, 0xb6, 0x56, 0x43, 0xab, 0x00, 0x09, 0x61, 0x9a, 0xd8, 0xd4, 0xea, 0x48, 0x83, 0x65,
	0x19, 0x13, 0x7c, 0xd4, 0x17, 0x8f, 0x02, 0x61, 0xd4, 0xee, 0xbf, 0xc0, 0xbd, 0x85, 0xa3, 0x2d,
	0xb1, 0x37, 0x09, 0x84, 0x7f, 0x18, 0x74, 0xc8, 0x6b, 0xe7, 0x95, 0x4e, 0x7a, 0x9d, 0xde, 0xa1,
	0x76, 0x2f, 0x4f, 0x96, 0x0c, 0x36, 0xb5, 0x56, 0x0e, 0x65, 0x1e, 0xb7, 0x77, 0x1e, 0x43, 0xf5,
	0x39, 0xa3, 0x1e, 0x9f, 0xa2, 0x2a, 0x94, 0xfa, 0x2f, 0xb4, 0x5b, 0x62, 0x2d, 0x33, 0x11, 0x05,
	0xd5, 0x41, 0xc5, 0x84, 0xf4, 0x89, 0x56, 0xda, 0xdf, 0x86, 0xcd, 0x89, 0x17, 0x8c, 0xa8, 0x97,
	0x2e, 0x39, 0x0d, 0xdd, 0xdd, 0x49, 0x14, 0x1e, 0x0f, 0x94, 0x37, 0xc9, 0xb7, 0xfa, 0xa8, 0x2a,
	0x3f, 0xf2, 0xbe, 0xf8, 0x2b, 0x00, 0x00, 0xff, 0xff, 0x14, 0x48, 0x92, 0xaa, 0xc7, 0x0b, 0x00,
	0x00,
}
