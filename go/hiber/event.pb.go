// Code generated by protoc-gen-go. DO NOT EDIT.
// source: event.proto

package hiber

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ListEventsRequest_Sort int32

const (
	ListEventsRequest_TIME_DESCENDING        ListEventsRequest_Sort = 0
	ListEventsRequest_TIME_ASCENDING         ListEventsRequest_Sort = 1
	ListEventsRequest_MODEM_NUMBER_ASC       ListEventsRequest_Sort = 2
	ListEventsRequest_MODEM_NUMBER_DESC      ListEventsRequest_Sort = 3
	ListEventsRequest_MODEM_NUMBER_SPECIFIED ListEventsRequest_Sort = 4
)

var ListEventsRequest_Sort_name = map[int32]string{
	0: "TIME_DESCENDING",
	1: "TIME_ASCENDING",
	2: "MODEM_NUMBER_ASC",
	3: "MODEM_NUMBER_DESC",
	4: "MODEM_NUMBER_SPECIFIED",
}
var ListEventsRequest_Sort_value = map[string]int32{
	"TIME_DESCENDING":        0,
	"TIME_ASCENDING":         1,
	"MODEM_NUMBER_ASC":       2,
	"MODEM_NUMBER_DESC":      3,
	"MODEM_NUMBER_SPECIFIED": 4,
}

func (x ListEventsRequest_Sort) String() string {
	return proto.EnumName(ListEventsRequest_Sort_name, int32(x))
}
func (ListEventsRequest_Sort) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{3, 0} }

// Generic Event object, used in streams where events are mixed. Protobuf provides helper methods to extract
// the contained object.
type Event struct {
	IsError bool `protobuf:"varint,1,opt,name=is_error,json=isError" json:"is_error,omitempty"`
	// Types that are valid to be assigned to Event:
	//	*Event_ModemUpdated
	//	*Event_ModemLocationUpdated
	//	*Event_ModemActivated
	//	*Event_ModemStale
	//	*Event_ModemMessageReceived
	//	*Event_ModemMessageDropped
	//	*Event_ModemMessageDelayed
	//	*Event_ModemMessageCannotBeParsed
	//	*Event_UserAdded
	//	*Event_UserRemoved
	//	*Event_UserInvited
	//	*Event_UserAccessRequest
	//	*Event_ModemTransferStarted
	//	*Event_ModemTransferCancelled
	//	*Event_ModemTransferReceived
	//	*Event_ModemTransferNotReceived
	//	*Event_ModemTransferReturnTransferStarted
	//	*Event_ModemClaimedEvent
	//	*Event_TokenExpiryWarning
	//	*Event_TokenExpired
	//	*Event_TokenCreated
	//	*Event_TokenDeleted
	//	*Event_OrganizationCreated
	//	*Event_OrganizationUpdated
	//	*Event_OrganizationDeleted
	//	*Event_PublisherCreated
	//	*Event_PublisherUpdated
	//	*Event_PublisherDeleted
	//	*Event_PublisherAutoDisabled
	//	*Event_PublisherFailed
	Event isEvent_Event `protobuf_oneof:"event"`
}

func (m *Event) Reset()                    { *m = Event{} }
func (m *Event) String() string            { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()               {}
func (*Event) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{0} }

type isEvent_Event interface{ isEvent_Event() }

type Event_ModemUpdated struct {
	ModemUpdated *Event_ModemEvent_ModemUpdatedEvent `protobuf:"bytes,39,opt,name=modem_updated,json=modemUpdated,oneof"`
}
type Event_ModemLocationUpdated struct {
	ModemLocationUpdated *Event_ModemEvent_ModemLocationUpdatedEvent `protobuf:"bytes,2,opt,name=modem_location_updated,json=modemLocationUpdated,oneof"`
}
type Event_ModemActivated struct {
	ModemActivated *Event_ModemEvent_ModemActivatedEvent `protobuf:"bytes,36,opt,name=modem_activated,json=modemActivated,oneof"`
}
type Event_ModemStale struct {
	ModemStale *Event_ModemEvent_ModemStaleEvent `protobuf:"bytes,3,opt,name=modem_stale,json=modemStale,oneof"`
}
type Event_ModemMessageReceived struct {
	ModemMessageReceived *Event_ModemEvent_MessageEvent_ModemMessageReceivedEvent `protobuf:"bytes,4,opt,name=modem_message_received,json=modemMessageReceived,oneof"`
}
type Event_ModemMessageDropped struct {
	ModemMessageDropped *Event_ModemEvent_MessageEvent_ModemMessageDroppedEvent `protobuf:"bytes,5,opt,name=modem_message_dropped,json=modemMessageDropped,oneof"`
}
type Event_ModemMessageDelayed struct {
	ModemMessageDelayed *Event_ModemEvent_MessageEvent_ModemMessageDelayedEvent `protobuf:"bytes,6,opt,name=modem_message_delayed,json=modemMessageDelayed,oneof"`
}
type Event_ModemMessageCannotBeParsed struct {
	ModemMessageCannotBeParsed *Event_ModemEvent_MessageEvent_ModemMessageCannotBeParsedEvent `protobuf:"bytes,7,opt,name=modem_message_cannot_be_parsed,json=modemMessageCannotBeParsed,oneof"`
}
type Event_UserAdded struct {
	UserAdded *Event_UserEvent_UserAddedEvent `protobuf:"bytes,8,opt,name=user_added,json=userAdded,oneof"`
}
type Event_UserRemoved struct {
	UserRemoved *Event_UserEvent_UserRemovedEvent `protobuf:"bytes,9,opt,name=user_removed,json=userRemoved,oneof"`
}
type Event_UserInvited struct {
	UserInvited *Event_UserEvent_UserInvitedEvent `protobuf:"bytes,41,opt,name=user_invited,json=userInvited,oneof"`
}
type Event_UserAccessRequest struct {
	UserAccessRequest *Event_UserEvent_UserAccessRequestEvent `protobuf:"bytes,10,opt,name=user_access_request,json=userAccessRequest,oneof"`
}
type Event_ModemTransferStarted struct {
	ModemTransferStarted *Event_ModemTransferEvent_ModemTransferStartedEvent `protobuf:"bytes,15,opt,name=modem_transfer_started,json=modemTransferStarted,oneof"`
}
type Event_ModemTransferCancelled struct {
	ModemTransferCancelled *Event_ModemTransferEvent_ModemTransferCancelledEvent `protobuf:"bytes,16,opt,name=modem_transfer_cancelled,json=modemTransferCancelled,oneof"`
}
type Event_ModemTransferReceived struct {
	ModemTransferReceived *Event_ModemTransferEvent_ModemTransferReceivedEvent `protobuf:"bytes,17,opt,name=modem_transfer_received,json=modemTransferReceived,oneof"`
}
type Event_ModemTransferNotReceived struct {
	ModemTransferNotReceived *Event_ModemTransferEvent_ModemTransferNotReceivedEvent `protobuf:"bytes,18,opt,name=modem_transfer_not_received,json=modemTransferNotReceived,oneof"`
}
type Event_ModemTransferReturnTransferStarted struct {
	ModemTransferReturnTransferStarted *Event_ModemTransferEvent_ModemTransferReturnTransferStartedEvent `protobuf:"bytes,19,opt,name=modem_transfer_return_transfer_started,json=modemTransferReturnTransferStarted,oneof"`
}
type Event_ModemClaimedEvent struct {
	ModemClaimedEvent *Event_ModemEvent_ClaimEvent_ModemClaimedEvent `protobuf:"bytes,20,opt,name=modem_claimed_event,json=modemClaimedEvent,oneof"`
}
type Event_TokenExpiryWarning struct {
	TokenExpiryWarning *Event_TokenEvent_TokenExpiryWarningEvent `protobuf:"bytes,23,opt,name=token_expiry_warning,json=tokenExpiryWarning,oneof"`
}
type Event_TokenExpired struct {
	TokenExpired *Event_TokenEvent_TokenExpiredEvent `protobuf:"bytes,24,opt,name=token_expired,json=tokenExpired,oneof"`
}
type Event_TokenCreated struct {
	TokenCreated *Event_TokenEvent_TokenCreatedEvent `protobuf:"bytes,30,opt,name=token_created,json=tokenCreated,oneof"`
}
type Event_TokenDeleted struct {
	TokenDeleted *Event_TokenEvent_TokenDeletedEvent `protobuf:"bytes,35,opt,name=token_deleted,json=tokenDeleted,oneof"`
}
type Event_OrganizationCreated struct {
	OrganizationCreated *Event_OrganizationEvent_OrganizationCreatedEvent `protobuf:"bytes,37,opt,name=organization_created,json=organizationCreated,oneof"`
}
type Event_OrganizationUpdated struct {
	OrganizationUpdated *Event_OrganizationEvent_OrganizationUpdatedEvent `protobuf:"bytes,25,opt,name=organization_updated,json=organizationUpdated,oneof"`
}
type Event_OrganizationDeleted struct {
	OrganizationDeleted *Event_OrganizationEvent_OrganizationDeletedEvent `protobuf:"bytes,38,opt,name=organization_deleted,json=organizationDeleted,oneof"`
}
type Event_PublisherCreated struct {
	PublisherCreated *Event_PublisherEvent_CreatedEvent `protobuf:"bytes,31,opt,name=publisher_created,json=publisherCreated,oneof"`
}
type Event_PublisherUpdated struct {
	PublisherUpdated *Event_PublisherEvent_UpdatedEvent `protobuf:"bytes,32,opt,name=publisher_updated,json=publisherUpdated,oneof"`
}
type Event_PublisherDeleted struct {
	PublisherDeleted *Event_PublisherEvent_DeletedEvent `protobuf:"bytes,33,opt,name=publisher_deleted,json=publisherDeleted,oneof"`
}
type Event_PublisherAutoDisabled struct {
	PublisherAutoDisabled *Event_PublisherEvent_AutoDisabledEvent `protobuf:"bytes,40,opt,name=publisher_auto_disabled,json=publisherAutoDisabled,oneof"`
}
type Event_PublisherFailed struct {
	PublisherFailed *Event_PublisherEvent_FailedEvent `protobuf:"bytes,34,opt,name=publisher_failed,json=publisherFailed,oneof"`
}

func (*Event_ModemUpdated) isEvent_Event()                       {}
func (*Event_ModemLocationUpdated) isEvent_Event()               {}
func (*Event_ModemActivated) isEvent_Event()                     {}
func (*Event_ModemStale) isEvent_Event()                         {}
func (*Event_ModemMessageReceived) isEvent_Event()               {}
func (*Event_ModemMessageDropped) isEvent_Event()                {}
func (*Event_ModemMessageDelayed) isEvent_Event()                {}
func (*Event_ModemMessageCannotBeParsed) isEvent_Event()         {}
func (*Event_UserAdded) isEvent_Event()                          {}
func (*Event_UserRemoved) isEvent_Event()                        {}
func (*Event_UserInvited) isEvent_Event()                        {}
func (*Event_UserAccessRequest) isEvent_Event()                  {}
func (*Event_ModemTransferStarted) isEvent_Event()               {}
func (*Event_ModemTransferCancelled) isEvent_Event()             {}
func (*Event_ModemTransferReceived) isEvent_Event()              {}
func (*Event_ModemTransferNotReceived) isEvent_Event()           {}
func (*Event_ModemTransferReturnTransferStarted) isEvent_Event() {}
func (*Event_ModemClaimedEvent) isEvent_Event()                  {}
func (*Event_TokenExpiryWarning) isEvent_Event()                 {}
func (*Event_TokenExpired) isEvent_Event()                       {}
func (*Event_TokenCreated) isEvent_Event()                       {}
func (*Event_TokenDeleted) isEvent_Event()                       {}
func (*Event_OrganizationCreated) isEvent_Event()                {}
func (*Event_OrganizationUpdated) isEvent_Event()                {}
func (*Event_OrganizationDeleted) isEvent_Event()                {}
func (*Event_PublisherCreated) isEvent_Event()                   {}
func (*Event_PublisherUpdated) isEvent_Event()                   {}
func (*Event_PublisherDeleted) isEvent_Event()                   {}
func (*Event_PublisherAutoDisabled) isEvent_Event()              {}
func (*Event_PublisherFailed) isEvent_Event()                    {}

func (m *Event) GetEvent() isEvent_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *Event) GetIsError() bool {
	if m != nil {
		return m.IsError
	}
	return false
}

func (m *Event) GetModemUpdated() *Event_ModemEvent_ModemUpdatedEvent {
	if x, ok := m.GetEvent().(*Event_ModemUpdated); ok {
		return x.ModemUpdated
	}
	return nil
}

func (m *Event) GetModemLocationUpdated() *Event_ModemEvent_ModemLocationUpdatedEvent {
	if x, ok := m.GetEvent().(*Event_ModemLocationUpdated); ok {
		return x.ModemLocationUpdated
	}
	return nil
}

func (m *Event) GetModemActivated() *Event_ModemEvent_ModemActivatedEvent {
	if x, ok := m.GetEvent().(*Event_ModemActivated); ok {
		return x.ModemActivated
	}
	return nil
}

func (m *Event) GetModemStale() *Event_ModemEvent_ModemStaleEvent {
	if x, ok := m.GetEvent().(*Event_ModemStale); ok {
		return x.ModemStale
	}
	return nil
}

func (m *Event) GetModemMessageReceived() *Event_ModemEvent_MessageEvent_ModemMessageReceivedEvent {
	if x, ok := m.GetEvent().(*Event_ModemMessageReceived); ok {
		return x.ModemMessageReceived
	}
	return nil
}

func (m *Event) GetModemMessageDropped() *Event_ModemEvent_MessageEvent_ModemMessageDroppedEvent {
	if x, ok := m.GetEvent().(*Event_ModemMessageDropped); ok {
		return x.ModemMessageDropped
	}
	return nil
}

func (m *Event) GetModemMessageDelayed() *Event_ModemEvent_MessageEvent_ModemMessageDelayedEvent {
	if x, ok := m.GetEvent().(*Event_ModemMessageDelayed); ok {
		return x.ModemMessageDelayed
	}
	return nil
}

func (m *Event) GetModemMessageCannotBeParsed() *Event_ModemEvent_MessageEvent_ModemMessageCannotBeParsedEvent {
	if x, ok := m.GetEvent().(*Event_ModemMessageCannotBeParsed); ok {
		return x.ModemMessageCannotBeParsed
	}
	return nil
}

func (m *Event) GetUserAdded() *Event_UserEvent_UserAddedEvent {
	if x, ok := m.GetEvent().(*Event_UserAdded); ok {
		return x.UserAdded
	}
	return nil
}

func (m *Event) GetUserRemoved() *Event_UserEvent_UserRemovedEvent {
	if x, ok := m.GetEvent().(*Event_UserRemoved); ok {
		return x.UserRemoved
	}
	return nil
}

func (m *Event) GetUserInvited() *Event_UserEvent_UserInvitedEvent {
	if x, ok := m.GetEvent().(*Event_UserInvited); ok {
		return x.UserInvited
	}
	return nil
}

func (m *Event) GetUserAccessRequest() *Event_UserEvent_UserAccessRequestEvent {
	if x, ok := m.GetEvent().(*Event_UserAccessRequest); ok {
		return x.UserAccessRequest
	}
	return nil
}

func (m *Event) GetModemTransferStarted() *Event_ModemTransferEvent_ModemTransferStartedEvent {
	if x, ok := m.GetEvent().(*Event_ModemTransferStarted); ok {
		return x.ModemTransferStarted
	}
	return nil
}

func (m *Event) GetModemTransferCancelled() *Event_ModemTransferEvent_ModemTransferCancelledEvent {
	if x, ok := m.GetEvent().(*Event_ModemTransferCancelled); ok {
		return x.ModemTransferCancelled
	}
	return nil
}

func (m *Event) GetModemTransferReceived() *Event_ModemTransferEvent_ModemTransferReceivedEvent {
	if x, ok := m.GetEvent().(*Event_ModemTransferReceived); ok {
		return x.ModemTransferReceived
	}
	return nil
}

func (m *Event) GetModemTransferNotReceived() *Event_ModemTransferEvent_ModemTransferNotReceivedEvent {
	if x, ok := m.GetEvent().(*Event_ModemTransferNotReceived); ok {
		return x.ModemTransferNotReceived
	}
	return nil
}

func (m *Event) GetModemTransferReturnTransferStarted() *Event_ModemTransferEvent_ModemTransferReturnTransferStartedEvent {
	if x, ok := m.GetEvent().(*Event_ModemTransferReturnTransferStarted); ok {
		return x.ModemTransferReturnTransferStarted
	}
	return nil
}

func (m *Event) GetModemClaimedEvent() *Event_ModemEvent_ClaimEvent_ModemClaimedEvent {
	if x, ok := m.GetEvent().(*Event_ModemClaimedEvent); ok {
		return x.ModemClaimedEvent
	}
	return nil
}

func (m *Event) GetTokenExpiryWarning() *Event_TokenEvent_TokenExpiryWarningEvent {
	if x, ok := m.GetEvent().(*Event_TokenExpiryWarning); ok {
		return x.TokenExpiryWarning
	}
	return nil
}

func (m *Event) GetTokenExpired() *Event_TokenEvent_TokenExpiredEvent {
	if x, ok := m.GetEvent().(*Event_TokenExpired); ok {
		return x.TokenExpired
	}
	return nil
}

func (m *Event) GetTokenCreated() *Event_TokenEvent_TokenCreatedEvent {
	if x, ok := m.GetEvent().(*Event_TokenCreated); ok {
		return x.TokenCreated
	}
	return nil
}

func (m *Event) GetTokenDeleted() *Event_TokenEvent_TokenDeletedEvent {
	if x, ok := m.GetEvent().(*Event_TokenDeleted); ok {
		return x.TokenDeleted
	}
	return nil
}

func (m *Event) GetOrganizationCreated() *Event_OrganizationEvent_OrganizationCreatedEvent {
	if x, ok := m.GetEvent().(*Event_OrganizationCreated); ok {
		return x.OrganizationCreated
	}
	return nil
}

func (m *Event) GetOrganizationUpdated() *Event_OrganizationEvent_OrganizationUpdatedEvent {
	if x, ok := m.GetEvent().(*Event_OrganizationUpdated); ok {
		return x.OrganizationUpdated
	}
	return nil
}

func (m *Event) GetOrganizationDeleted() *Event_OrganizationEvent_OrganizationDeletedEvent {
	if x, ok := m.GetEvent().(*Event_OrganizationDeleted); ok {
		return x.OrganizationDeleted
	}
	return nil
}

func (m *Event) GetPublisherCreated() *Event_PublisherEvent_CreatedEvent {
	if x, ok := m.GetEvent().(*Event_PublisherCreated); ok {
		return x.PublisherCreated
	}
	return nil
}

func (m *Event) GetPublisherUpdated() *Event_PublisherEvent_UpdatedEvent {
	if x, ok := m.GetEvent().(*Event_PublisherUpdated); ok {
		return x.PublisherUpdated
	}
	return nil
}

func (m *Event) GetPublisherDeleted() *Event_PublisherEvent_DeletedEvent {
	if x, ok := m.GetEvent().(*Event_PublisherDeleted); ok {
		return x.PublisherDeleted
	}
	return nil
}

func (m *Event) GetPublisherAutoDisabled() *Event_PublisherEvent_AutoDisabledEvent {
	if x, ok := m.GetEvent().(*Event_PublisherAutoDisabled); ok {
		return x.PublisherAutoDisabled
	}
	return nil
}

func (m *Event) GetPublisherFailed() *Event_PublisherEvent_FailedEvent {
	if x, ok := m.GetEvent().(*Event_PublisherFailed); ok {
		return x.PublisherFailed
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Event) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Event_OneofMarshaler, _Event_OneofUnmarshaler, _Event_OneofSizer, []interface{}{
		(*Event_ModemUpdated)(nil),
		(*Event_ModemLocationUpdated)(nil),
		(*Event_ModemActivated)(nil),
		(*Event_ModemStale)(nil),
		(*Event_ModemMessageReceived)(nil),
		(*Event_ModemMessageDropped)(nil),
		(*Event_ModemMessageDelayed)(nil),
		(*Event_ModemMessageCannotBeParsed)(nil),
		(*Event_UserAdded)(nil),
		(*Event_UserRemoved)(nil),
		(*Event_UserInvited)(nil),
		(*Event_UserAccessRequest)(nil),
		(*Event_ModemTransferStarted)(nil),
		(*Event_ModemTransferCancelled)(nil),
		(*Event_ModemTransferReceived)(nil),
		(*Event_ModemTransferNotReceived)(nil),
		(*Event_ModemTransferReturnTransferStarted)(nil),
		(*Event_ModemClaimedEvent)(nil),
		(*Event_TokenExpiryWarning)(nil),
		(*Event_TokenExpired)(nil),
		(*Event_TokenCreated)(nil),
		(*Event_TokenDeleted)(nil),
		(*Event_OrganizationCreated)(nil),
		(*Event_OrganizationUpdated)(nil),
		(*Event_OrganizationDeleted)(nil),
		(*Event_PublisherCreated)(nil),
		(*Event_PublisherUpdated)(nil),
		(*Event_PublisherDeleted)(nil),
		(*Event_PublisherAutoDisabled)(nil),
		(*Event_PublisherFailed)(nil),
	}
}

func _Event_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Event)
	// event
	switch x := m.Event.(type) {
	case *Event_ModemUpdated:
		b.EncodeVarint(39<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ModemUpdated); err != nil {
			return err
		}
	case *Event_ModemLocationUpdated:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ModemLocationUpdated); err != nil {
			return err
		}
	case *Event_ModemActivated:
		b.EncodeVarint(36<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ModemActivated); err != nil {
			return err
		}
	case *Event_ModemStale:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ModemStale); err != nil {
			return err
		}
	case *Event_ModemMessageReceived:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ModemMessageReceived); err != nil {
			return err
		}
	case *Event_ModemMessageDropped:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ModemMessageDropped); err != nil {
			return err
		}
	case *Event_ModemMessageDelayed:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ModemMessageDelayed); err != nil {
			return err
		}
	case *Event_ModemMessageCannotBeParsed:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ModemMessageCannotBeParsed); err != nil {
			return err
		}
	case *Event_UserAdded:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UserAdded); err != nil {
			return err
		}
	case *Event_UserRemoved:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UserRemoved); err != nil {
			return err
		}
	case *Event_UserInvited:
		b.EncodeVarint(41<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UserInvited); err != nil {
			return err
		}
	case *Event_UserAccessRequest:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UserAccessRequest); err != nil {
			return err
		}
	case *Event_ModemTransferStarted:
		b.EncodeVarint(15<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ModemTransferStarted); err != nil {
			return err
		}
	case *Event_ModemTransferCancelled:
		b.EncodeVarint(16<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ModemTransferCancelled); err != nil {
			return err
		}
	case *Event_ModemTransferReceived:
		b.EncodeVarint(17<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ModemTransferReceived); err != nil {
			return err
		}
	case *Event_ModemTransferNotReceived:
		b.EncodeVarint(18<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ModemTransferNotReceived); err != nil {
			return err
		}
	case *Event_ModemTransferReturnTransferStarted:
		b.EncodeVarint(19<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ModemTransferReturnTransferStarted); err != nil {
			return err
		}
	case *Event_ModemClaimedEvent:
		b.EncodeVarint(20<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ModemClaimedEvent); err != nil {
			return err
		}
	case *Event_TokenExpiryWarning:
		b.EncodeVarint(23<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TokenExpiryWarning); err != nil {
			return err
		}
	case *Event_TokenExpired:
		b.EncodeVarint(24<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TokenExpired); err != nil {
			return err
		}
	case *Event_TokenCreated:
		b.EncodeVarint(30<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TokenCreated); err != nil {
			return err
		}
	case *Event_TokenDeleted:
		b.EncodeVarint(35<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TokenDeleted); err != nil {
			return err
		}
	case *Event_OrganizationCreated:
		b.EncodeVarint(37<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.OrganizationCreated); err != nil {
			return err
		}
	case *Event_OrganizationUpdated:
		b.EncodeVarint(25<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.OrganizationUpdated); err != nil {
			return err
		}
	case *Event_OrganizationDeleted:
		b.EncodeVarint(38<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.OrganizationDeleted); err != nil {
			return err
		}
	case *Event_PublisherCreated:
		b.EncodeVarint(31<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PublisherCreated); err != nil {
			return err
		}
	case *Event_PublisherUpdated:
		b.EncodeVarint(32<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PublisherUpdated); err != nil {
			return err
		}
	case *Event_PublisherDeleted:
		b.EncodeVarint(33<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PublisherDeleted); err != nil {
			return err
		}
	case *Event_PublisherAutoDisabled:
		b.EncodeVarint(40<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PublisherAutoDisabled); err != nil {
			return err
		}
	case *Event_PublisherFailed:
		b.EncodeVarint(34<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PublisherFailed); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Event.Event has unexpected type %T", x)
	}
	return nil
}

func _Event_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Event)
	switch tag {
	case 39: // event.modem_updated
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Event_ModemEvent_ModemUpdatedEvent)
		err := b.DecodeMessage(msg)
		m.Event = &Event_ModemUpdated{msg}
		return true, err
	case 2: // event.modem_location_updated
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Event_ModemEvent_ModemLocationUpdatedEvent)
		err := b.DecodeMessage(msg)
		m.Event = &Event_ModemLocationUpdated{msg}
		return true, err
	case 36: // event.modem_activated
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Event_ModemEvent_ModemActivatedEvent)
		err := b.DecodeMessage(msg)
		m.Event = &Event_ModemActivated{msg}
		return true, err
	case 3: // event.modem_stale
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Event_ModemEvent_ModemStaleEvent)
		err := b.DecodeMessage(msg)
		m.Event = &Event_ModemStale{msg}
		return true, err
	case 4: // event.modem_message_received
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Event_ModemEvent_MessageEvent_ModemMessageReceivedEvent)
		err := b.DecodeMessage(msg)
		m.Event = &Event_ModemMessageReceived{msg}
		return true, err
	case 5: // event.modem_message_dropped
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Event_ModemEvent_MessageEvent_ModemMessageDroppedEvent)
		err := b.DecodeMessage(msg)
		m.Event = &Event_ModemMessageDropped{msg}
		return true, err
	case 6: // event.modem_message_delayed
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Event_ModemEvent_MessageEvent_ModemMessageDelayedEvent)
		err := b.DecodeMessage(msg)
		m.Event = &Event_ModemMessageDelayed{msg}
		return true, err
	case 7: // event.modem_message_cannot_be_parsed
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Event_ModemEvent_MessageEvent_ModemMessageCannotBeParsedEvent)
		err := b.DecodeMessage(msg)
		m.Event = &Event_ModemMessageCannotBeParsed{msg}
		return true, err
	case 8: // event.user_added
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Event_UserEvent_UserAddedEvent)
		err := b.DecodeMessage(msg)
		m.Event = &Event_UserAdded{msg}
		return true, err
	case 9: // event.user_removed
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Event_UserEvent_UserRemovedEvent)
		err := b.DecodeMessage(msg)
		m.Event = &Event_UserRemoved{msg}
		return true, err
	case 41: // event.user_invited
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Event_UserEvent_UserInvitedEvent)
		err := b.DecodeMessage(msg)
		m.Event = &Event_UserInvited{msg}
		return true, err
	case 10: // event.user_access_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Event_UserEvent_UserAccessRequestEvent)
		err := b.DecodeMessage(msg)
		m.Event = &Event_UserAccessRequest{msg}
		return true, err
	case 15: // event.modem_transfer_started
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Event_ModemTransferEvent_ModemTransferStartedEvent)
		err := b.DecodeMessage(msg)
		m.Event = &Event_ModemTransferStarted{msg}
		return true, err
	case 16: // event.modem_transfer_cancelled
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Event_ModemTransferEvent_ModemTransferCancelledEvent)
		err := b.DecodeMessage(msg)
		m.Event = &Event_ModemTransferCancelled{msg}
		return true, err
	case 17: // event.modem_transfer_received
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Event_ModemTransferEvent_ModemTransferReceivedEvent)
		err := b.DecodeMessage(msg)
		m.Event = &Event_ModemTransferReceived{msg}
		return true, err
	case 18: // event.modem_transfer_not_received
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Event_ModemTransferEvent_ModemTransferNotReceivedEvent)
		err := b.DecodeMessage(msg)
		m.Event = &Event_ModemTransferNotReceived{msg}
		return true, err
	case 19: // event.modem_transfer_return_transfer_started
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Event_ModemTransferEvent_ModemTransferReturnTransferStartedEvent)
		err := b.DecodeMessage(msg)
		m.Event = &Event_ModemTransferReturnTransferStarted{msg}
		return true, err
	case 20: // event.modem_claimed_event
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Event_ModemEvent_ClaimEvent_ModemClaimedEvent)
		err := b.DecodeMessage(msg)
		m.Event = &Event_ModemClaimedEvent{msg}
		return true, err
	case 23: // event.token_expiry_warning
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Event_TokenEvent_TokenExpiryWarningEvent)
		err := b.DecodeMessage(msg)
		m.Event = &Event_TokenExpiryWarning{msg}
		return true, err
	case 24: // event.token_expired
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Event_TokenEvent_TokenExpiredEvent)
		err := b.DecodeMessage(msg)
		m.Event = &Event_TokenExpired{msg}
		return true, err
	case 30: // event.token_created
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Event_TokenEvent_TokenCreatedEvent)
		err := b.DecodeMessage(msg)
		m.Event = &Event_TokenCreated{msg}
		return true, err
	case 35: // event.token_deleted
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Event_TokenEvent_TokenDeletedEvent)
		err := b.DecodeMessage(msg)
		m.Event = &Event_TokenDeleted{msg}
		return true, err
	case 37: // event.organization_created
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Event_OrganizationEvent_OrganizationCreatedEvent)
		err := b.DecodeMessage(msg)
		m.Event = &Event_OrganizationCreated{msg}
		return true, err
	case 25: // event.organization_updated
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Event_OrganizationEvent_OrganizationUpdatedEvent)
		err := b.DecodeMessage(msg)
		m.Event = &Event_OrganizationUpdated{msg}
		return true, err
	case 38: // event.organization_deleted
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Event_OrganizationEvent_OrganizationDeletedEvent)
		err := b.DecodeMessage(msg)
		m.Event = &Event_OrganizationDeleted{msg}
		return true, err
	case 31: // event.publisher_created
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Event_PublisherEvent_CreatedEvent)
		err := b.DecodeMessage(msg)
		m.Event = &Event_PublisherCreated{msg}
		return true, err
	case 32: // event.publisher_updated
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Event_PublisherEvent_UpdatedEvent)
		err := b.DecodeMessage(msg)
		m.Event = &Event_PublisherUpdated{msg}
		return true, err
	case 33: // event.publisher_deleted
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Event_PublisherEvent_DeletedEvent)
		err := b.DecodeMessage(msg)
		m.Event = &Event_PublisherDeleted{msg}
		return true, err
	case 40: // event.publisher_auto_disabled
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Event_PublisherEvent_AutoDisabledEvent)
		err := b.DecodeMessage(msg)
		m.Event = &Event_PublisherAutoDisabled{msg}
		return true, err
	case 34: // event.publisher_failed
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Event_PublisherEvent_FailedEvent)
		err := b.DecodeMessage(msg)
		m.Event = &Event_PublisherFailed{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Event_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Event)
	// event
	switch x := m.Event.(type) {
	case *Event_ModemUpdated:
		s := proto.Size(x.ModemUpdated)
		n += proto.SizeVarint(39<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_ModemLocationUpdated:
		s := proto.Size(x.ModemLocationUpdated)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_ModemActivated:
		s := proto.Size(x.ModemActivated)
		n += proto.SizeVarint(36<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_ModemStale:
		s := proto.Size(x.ModemStale)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_ModemMessageReceived:
		s := proto.Size(x.ModemMessageReceived)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_ModemMessageDropped:
		s := proto.Size(x.ModemMessageDropped)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_ModemMessageDelayed:
		s := proto.Size(x.ModemMessageDelayed)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_ModemMessageCannotBeParsed:
		s := proto.Size(x.ModemMessageCannotBeParsed)
		n += proto.SizeVarint(7<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_UserAdded:
		s := proto.Size(x.UserAdded)
		n += proto.SizeVarint(8<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_UserRemoved:
		s := proto.Size(x.UserRemoved)
		n += proto.SizeVarint(9<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_UserInvited:
		s := proto.Size(x.UserInvited)
		n += proto.SizeVarint(41<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_UserAccessRequest:
		s := proto.Size(x.UserAccessRequest)
		n += proto.SizeVarint(10<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_ModemTransferStarted:
		s := proto.Size(x.ModemTransferStarted)
		n += proto.SizeVarint(15<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_ModemTransferCancelled:
		s := proto.Size(x.ModemTransferCancelled)
		n += proto.SizeVarint(16<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_ModemTransferReceived:
		s := proto.Size(x.ModemTransferReceived)
		n += proto.SizeVarint(17<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_ModemTransferNotReceived:
		s := proto.Size(x.ModemTransferNotReceived)
		n += proto.SizeVarint(18<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_ModemTransferReturnTransferStarted:
		s := proto.Size(x.ModemTransferReturnTransferStarted)
		n += proto.SizeVarint(19<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_ModemClaimedEvent:
		s := proto.Size(x.ModemClaimedEvent)
		n += proto.SizeVarint(20<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_TokenExpiryWarning:
		s := proto.Size(x.TokenExpiryWarning)
		n += proto.SizeVarint(23<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_TokenExpired:
		s := proto.Size(x.TokenExpired)
		n += proto.SizeVarint(24<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_TokenCreated:
		s := proto.Size(x.TokenCreated)
		n += proto.SizeVarint(30<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_TokenDeleted:
		s := proto.Size(x.TokenDeleted)
		n += proto.SizeVarint(35<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_OrganizationCreated:
		s := proto.Size(x.OrganizationCreated)
		n += proto.SizeVarint(37<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_OrganizationUpdated:
		s := proto.Size(x.OrganizationUpdated)
		n += proto.SizeVarint(25<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_OrganizationDeleted:
		s := proto.Size(x.OrganizationDeleted)
		n += proto.SizeVarint(38<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_PublisherCreated:
		s := proto.Size(x.PublisherCreated)
		n += proto.SizeVarint(31<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_PublisherUpdated:
		s := proto.Size(x.PublisherUpdated)
		n += proto.SizeVarint(32<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_PublisherDeleted:
		s := proto.Size(x.PublisherDeleted)
		n += proto.SizeVarint(33<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_PublisherAutoDisabled:
		s := proto.Size(x.PublisherAutoDisabled)
		n += proto.SizeVarint(40<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_PublisherFailed:
		s := proto.Size(x.PublisherFailed)
		n += proto.SizeVarint(34<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Event_ModemEvent struct {
}

func (m *Event_ModemEvent) Reset()                    { *m = Event_ModemEvent{} }
func (m *Event_ModemEvent) String() string            { return proto.CompactTextString(m) }
func (*Event_ModemEvent) ProtoMessage()               {}
func (*Event_ModemEvent) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{0, 0} }

type Event_ModemEvent_ModemUpdatedEvent struct {
	Organization       string                         `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	ModemNumber        string                         `protobuf:"bytes,2,opt,name=modem_number,json=modemNumber" json:"modem_number,omitempty"`
	DisplayName        *UpdateClearableString         `protobuf:"bytes,10,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	Antenna            Modem_Peripherals_HiberAntenna `protobuf:"varint,11,opt,name=antenna,enum=hiber.modem.Modem_Peripherals_HiberAntenna" json:"antenna,omitempty"`
	CustomAntenna      *UpdateClearableString         `protobuf:"bytes,12,opt,name=custom_antenna,json=customAntenna" json:"custom_antenna,omitempty"`
	Gps                *UpdateBoolean                 `protobuf:"bytes,13,opt,name=gps" json:"gps,omitempty"`
	Location           *Location                      `protobuf:"bytes,14,opt,name=location" json:"location,omitempty"`
	Peripherals        map[string]string              `protobuf:"bytes,15,rep,name=peripherals" json:"peripherals,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Notes              *UpdateClearableString         `protobuf:"bytes,16,opt,name=notes" json:"notes,omitempty"`
	SecureNotesUpdated bool                           `protobuf:"varint,17,opt,name=secure_notes_updated,json=secureNotesUpdated" json:"secure_notes_updated,omitempty"`
	Time               *Timestamp                     `protobuf:"bytes,4,opt,name=time" json:"time,omitempty"`
	Tags               []*Tag                         `protobuf:"bytes,5,rep,name=tags" json:"tags,omitempty"`
	Title              string                         `protobuf:"bytes,6,opt,name=title" json:"title,omitempty"`
	Description        string                         `protobuf:"bytes,7,opt,name=description" json:"description,omitempty"`
}

func (m *Event_ModemEvent_ModemUpdatedEvent) Reset()         { *m = Event_ModemEvent_ModemUpdatedEvent{} }
func (m *Event_ModemEvent_ModemUpdatedEvent) String() string { return proto.CompactTextString(m) }
func (*Event_ModemEvent_ModemUpdatedEvent) ProtoMessage()    {}
func (*Event_ModemEvent_ModemUpdatedEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor5, []int{0, 0, 0}
}

func (m *Event_ModemEvent_ModemUpdatedEvent) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *Event_ModemEvent_ModemUpdatedEvent) GetModemNumber() string {
	if m != nil {
		return m.ModemNumber
	}
	return ""
}

func (m *Event_ModemEvent_ModemUpdatedEvent) GetDisplayName() *UpdateClearableString {
	if m != nil {
		return m.DisplayName
	}
	return nil
}

func (m *Event_ModemEvent_ModemUpdatedEvent) GetAntenna() Modem_Peripherals_HiberAntenna {
	if m != nil {
		return m.Antenna
	}
	return Modem_Peripherals_DEFAULT
}

func (m *Event_ModemEvent_ModemUpdatedEvent) GetCustomAntenna() *UpdateClearableString {
	if m != nil {
		return m.CustomAntenna
	}
	return nil
}

func (m *Event_ModemEvent_ModemUpdatedEvent) GetGps() *UpdateBoolean {
	if m != nil {
		return m.Gps
	}
	return nil
}

func (m *Event_ModemEvent_ModemUpdatedEvent) GetLocation() *Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *Event_ModemEvent_ModemUpdatedEvent) GetPeripherals() map[string]string {
	if m != nil {
		return m.Peripherals
	}
	return nil
}

func (m *Event_ModemEvent_ModemUpdatedEvent) GetNotes() *UpdateClearableString {
	if m != nil {
		return m.Notes
	}
	return nil
}

func (m *Event_ModemEvent_ModemUpdatedEvent) GetSecureNotesUpdated() bool {
	if m != nil {
		return m.SecureNotesUpdated
	}
	return false
}

func (m *Event_ModemEvent_ModemUpdatedEvent) GetTime() *Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *Event_ModemEvent_ModemUpdatedEvent) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Event_ModemEvent_ModemUpdatedEvent) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Event_ModemEvent_ModemUpdatedEvent) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

// When a message comes in, the modem's location is updated automatically. This event is generated whenever the
// modem's location is updated
type Event_ModemEvent_ModemLocationUpdatedEvent struct {
	Organization string     `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	ModemNumber  string     `protobuf:"bytes,2,opt,name=modem_number,json=modemNumber" json:"modem_number,omitempty"`
	Location     *Location  `protobuf:"bytes,3,opt,name=location" json:"location,omitempty"`
	Time         *Timestamp `protobuf:"bytes,4,opt,name=time" json:"time,omitempty"`
	Tags         []*Tag     `protobuf:"bytes,5,rep,name=tags" json:"tags,omitempty"`
	Title        string     `protobuf:"bytes,6,opt,name=title" json:"title,omitempty"`
	Description  string     `protobuf:"bytes,7,opt,name=description" json:"description,omitempty"`
}

func (m *Event_ModemEvent_ModemLocationUpdatedEvent) Reset() {
	*m = Event_ModemEvent_ModemLocationUpdatedEvent{}
}
func (m *Event_ModemEvent_ModemLocationUpdatedEvent) String() string {
	return proto.CompactTextString(m)
}
func (*Event_ModemEvent_ModemLocationUpdatedEvent) ProtoMessage() {}
func (*Event_ModemEvent_ModemLocationUpdatedEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor5, []int{0, 0, 1}
}

func (m *Event_ModemEvent_ModemLocationUpdatedEvent) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *Event_ModemEvent_ModemLocationUpdatedEvent) GetModemNumber() string {
	if m != nil {
		return m.ModemNumber
	}
	return ""
}

func (m *Event_ModemEvent_ModemLocationUpdatedEvent) GetLocation() *Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *Event_ModemEvent_ModemLocationUpdatedEvent) GetTime() *Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *Event_ModemEvent_ModemLocationUpdatedEvent) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Event_ModemEvent_ModemLocationUpdatedEvent) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Event_ModemEvent_ModemLocationUpdatedEvent) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

// When a modem hasn't received any message for a configurable period, it is considered stale. This event is
// generated as soon as this condition is determined
type Event_ModemEvent_ModemStaleEvent struct {
	Organization            string     `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	ModemNumber             string     `protobuf:"bytes,2,opt,name=modem_number,json=modemNumber" json:"modem_number,omitempty"`
	MaximumInactivityPeriod int32      `protobuf:"varint,3,opt,name=maximum_inactivity_period,json=maximumInactivityPeriod" json:"maximum_inactivity_period,omitempty"`
	Time                    *Timestamp `protobuf:"bytes,4,opt,name=time" json:"time,omitempty"`
	LastMessage             *Timestamp `protobuf:"bytes,5,opt,name=last_message,json=lastMessage" json:"last_message,omitempty"`
	Tags                    []*Tag     `protobuf:"bytes,6,rep,name=tags" json:"tags,omitempty"`
	Title                   string     `protobuf:"bytes,7,opt,name=title" json:"title,omitempty"`
	Description             string     `protobuf:"bytes,8,opt,name=description" json:"description,omitempty"`
}

func (m *Event_ModemEvent_ModemStaleEvent) Reset()         { *m = Event_ModemEvent_ModemStaleEvent{} }
func (m *Event_ModemEvent_ModemStaleEvent) String() string { return proto.CompactTextString(m) }
func (*Event_ModemEvent_ModemStaleEvent) ProtoMessage()    {}
func (*Event_ModemEvent_ModemStaleEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor5, []int{0, 0, 2}
}

func (m *Event_ModemEvent_ModemStaleEvent) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *Event_ModemEvent_ModemStaleEvent) GetModemNumber() string {
	if m != nil {
		return m.ModemNumber
	}
	return ""
}

func (m *Event_ModemEvent_ModemStaleEvent) GetMaximumInactivityPeriod() int32 {
	if m != nil {
		return m.MaximumInactivityPeriod
	}
	return 0
}

func (m *Event_ModemEvent_ModemStaleEvent) GetTime() *Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *Event_ModemEvent_ModemStaleEvent) GetLastMessage() *Timestamp {
	if m != nil {
		return m.LastMessage
	}
	return nil
}

func (m *Event_ModemEvent_ModemStaleEvent) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Event_ModemEvent_ModemStaleEvent) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Event_ModemEvent_ModemStaleEvent) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

// When the first _real_ message for a modem comes in, the modem is considered to be activated.
// A _real_ message is:
// - a message received through a modem, on an environment that has real modems (hiber.cloud)
// - any test message, on an environment that only has simulated modems (dev.hiber.global)
type Event_ModemEvent_ModemActivatedEvent struct {
	Organization string     `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	ModemNumber  string     `protobuf:"bytes,2,opt,name=modem_number,json=modemNumber" json:"modem_number,omitempty"`
	MessageId    uint64     `protobuf:"varint,3,opt,name=message_id,json=messageId" json:"message_id,omitempty"`
	Time         *Timestamp `protobuf:"bytes,4,opt,name=time" json:"time,omitempty"`
	SentAt       *Timestamp `protobuf:"bytes,10,opt,name=sent_at,json=sentAt" json:"sent_at,omitempty"`
	Tags         []*Tag     `protobuf:"bytes,7,rep,name=tags" json:"tags,omitempty"`
	Title        string     `protobuf:"bytes,8,opt,name=title" json:"title,omitempty"`
	Description  string     `protobuf:"bytes,9,opt,name=description" json:"description,omitempty"`
}

func (m *Event_ModemEvent_ModemActivatedEvent) Reset()         { *m = Event_ModemEvent_ModemActivatedEvent{} }
func (m *Event_ModemEvent_ModemActivatedEvent) String() string { return proto.CompactTextString(m) }
func (*Event_ModemEvent_ModemActivatedEvent) ProtoMessage()    {}
func (*Event_ModemEvent_ModemActivatedEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor5, []int{0, 0, 3}
}

func (m *Event_ModemEvent_ModemActivatedEvent) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *Event_ModemEvent_ModemActivatedEvent) GetModemNumber() string {
	if m != nil {
		return m.ModemNumber
	}
	return ""
}

func (m *Event_ModemEvent_ModemActivatedEvent) GetMessageId() uint64 {
	if m != nil {
		return m.MessageId
	}
	return 0
}

func (m *Event_ModemEvent_ModemActivatedEvent) GetTime() *Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *Event_ModemEvent_ModemActivatedEvent) GetSentAt() *Timestamp {
	if m != nil {
		return m.SentAt
	}
	return nil
}

func (m *Event_ModemEvent_ModemActivatedEvent) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Event_ModemEvent_ModemActivatedEvent) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Event_ModemEvent_ModemActivatedEvent) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type Event_ModemEvent_MessageEvent struct {
}

func (m *Event_ModemEvent_MessageEvent) Reset()         { *m = Event_ModemEvent_MessageEvent{} }
func (m *Event_ModemEvent_MessageEvent) String() string { return proto.CompactTextString(m) }
func (*Event_ModemEvent_MessageEvent) ProtoMessage()    {}
func (*Event_ModemEvent_MessageEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor5, []int{0, 0, 4}
}

// This event is generated whenever a message comes in, after is has been decrypted.
// It contains the relevant data in the message object, including location and the
// user-defined body.
// If any body parser(s) are configured for the modem, the modem message object also contains
// a ParsedBody for each of them.
type Event_ModemEvent_MessageEvent_ModemMessageReceivedEvent struct {
	Organization          string        `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	ModemNumber           string        `protobuf:"bytes,2,opt,name=modem_number,json=modemNumber" json:"modem_number,omitempty"`
	Message               *ModemMessage `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	Tags                  []*Tag        `protobuf:"bytes,4,rep,name=tags" json:"tags,omitempty"`
	ModemExternalDeviceId string        `protobuf:"bytes,8,opt,name=modem_external_device_id,json=modemExternalDeviceId" json:"modem_external_device_id,omitempty"`
	Title                 string        `protobuf:"bytes,5,opt,name=title" json:"title,omitempty"`
	Description           string        `protobuf:"bytes,6,opt,name=description" json:"description,omitempty"`
	Time                  *Timestamp    `protobuf:"bytes,7,opt,name=time" json:"time,omitempty"`
}

func (m *Event_ModemEvent_MessageEvent_ModemMessageReceivedEvent) Reset() {
	*m = Event_ModemEvent_MessageEvent_ModemMessageReceivedEvent{}
}
func (m *Event_ModemEvent_MessageEvent_ModemMessageReceivedEvent) String() string {
	return proto.CompactTextString(m)
}
func (*Event_ModemEvent_MessageEvent_ModemMessageReceivedEvent) ProtoMessage() {}
func (*Event_ModemEvent_MessageEvent_ModemMessageReceivedEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor5, []int{0, 0, 4, 0}
}

func (m *Event_ModemEvent_MessageEvent_ModemMessageReceivedEvent) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *Event_ModemEvent_MessageEvent_ModemMessageReceivedEvent) GetModemNumber() string {
	if m != nil {
		return m.ModemNumber
	}
	return ""
}

func (m *Event_ModemEvent_MessageEvent_ModemMessageReceivedEvent) GetMessage() *ModemMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *Event_ModemEvent_MessageEvent_ModemMessageReceivedEvent) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Event_ModemEvent_MessageEvent_ModemMessageReceivedEvent) GetModemExternalDeviceId() string {
	if m != nil {
		return m.ModemExternalDeviceId
	}
	return ""
}

func (m *Event_ModemEvent_MessageEvent_ModemMessageReceivedEvent) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Event_ModemEvent_MessageEvent_ModemMessageReceivedEvent) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Event_ModemEvent_MessageEvent_ModemMessageReceivedEvent) GetTime() *Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

// Every message has a sequence marker. When we detect a jump in the sequence number, we can determine whether we
// missed a message (or even multiple messages). Typically, this is caused by interference between the modem and
// the satellite. Note that this event is only generated when a message comes in. If no messages come in for a
// certain period, the ModemStaleEvent is used.
type Event_ModemEvent_MessageEvent_ModemMessageDroppedEvent struct {
	Organization    string        `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	ModemNumber     string        `protobuf:"bytes,2,opt,name=modem_number,json=modemNumber" json:"modem_number,omitempty"`
	DroppedMessages int32         `protobuf:"varint,3,opt,name=dropped_messages,json=droppedMessages" json:"dropped_messages,omitempty"`
	Message         *ModemMessage `protobuf:"bytes,4,opt,name=message" json:"message,omitempty"`
	Tags            []*Tag        `protobuf:"bytes,5,rep,name=tags" json:"tags,omitempty"`
	ModemHealth     Health        `protobuf:"varint,6,opt,name=modem_health,json=modemHealth,enum=hiber.Health" json:"modem_health,omitempty"`
	Title           string        `protobuf:"bytes,7,opt,name=title" json:"title,omitempty"`
	Description     string        `protobuf:"bytes,8,opt,name=description" json:"description,omitempty"`
	Time            *Timestamp    `protobuf:"bytes,9,opt,name=time" json:"time,omitempty"`
}

func (m *Event_ModemEvent_MessageEvent_ModemMessageDroppedEvent) Reset() {
	*m = Event_ModemEvent_MessageEvent_ModemMessageDroppedEvent{}
}
func (m *Event_ModemEvent_MessageEvent_ModemMessageDroppedEvent) String() string {
	return proto.CompactTextString(m)
}
func (*Event_ModemEvent_MessageEvent_ModemMessageDroppedEvent) ProtoMessage() {}
func (*Event_ModemEvent_MessageEvent_ModemMessageDroppedEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor5, []int{0, 0, 4, 1}
}

func (m *Event_ModemEvent_MessageEvent_ModemMessageDroppedEvent) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *Event_ModemEvent_MessageEvent_ModemMessageDroppedEvent) GetModemNumber() string {
	if m != nil {
		return m.ModemNumber
	}
	return ""
}

func (m *Event_ModemEvent_MessageEvent_ModemMessageDroppedEvent) GetDroppedMessages() int32 {
	if m != nil {
		return m.DroppedMessages
	}
	return 0
}

func (m *Event_ModemEvent_MessageEvent_ModemMessageDroppedEvent) GetMessage() *ModemMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *Event_ModemEvent_MessageEvent_ModemMessageDroppedEvent) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Event_ModemEvent_MessageEvent_ModemMessageDroppedEvent) GetModemHealth() Health {
	if m != nil {
		return m.ModemHealth
	}
	return Health_OK
}

func (m *Event_ModemEvent_MessageEvent_ModemMessageDroppedEvent) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Event_ModemEvent_MessageEvent_ModemMessageDroppedEvent) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Event_ModemEvent_MessageEvent_ModemMessageDroppedEvent) GetTime() *Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

// Triggered when the time between sending and receiving the message is above a certain threshold. This can
// indicate that there is a communication issue between the modem and the server, i.e. a malfunction ground
// station, so that the satellite takes longer to send its data on.
type Event_ModemEvent_MessageEvent_ModemMessageDelayedEvent struct {
	Organization string        `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	ModemNumber  string        `protobuf:"bytes,2,opt,name=modem_number,json=modemNumber" json:"modem_number,omitempty"`
	Message      *ModemMessage `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	DelaySeconds int64         `protobuf:"varint,4,opt,name=delay_seconds,json=delaySeconds" json:"delay_seconds,omitempty"`
	Tags         []*Tag        `protobuf:"bytes,5,rep,name=tags" json:"tags,omitempty"`
	ModemHealth  Health        `protobuf:"varint,6,opt,name=modem_health,json=modemHealth,enum=hiber.Health" json:"modem_health,omitempty"`
	Title        string        `protobuf:"bytes,7,opt,name=title" json:"title,omitempty"`
	Description  string        `protobuf:"bytes,8,opt,name=description" json:"description,omitempty"`
	Time         *Timestamp    `protobuf:"bytes,9,opt,name=time" json:"time,omitempty"`
}

func (m *Event_ModemEvent_MessageEvent_ModemMessageDelayedEvent) Reset() {
	*m = Event_ModemEvent_MessageEvent_ModemMessageDelayedEvent{}
}
func (m *Event_ModemEvent_MessageEvent_ModemMessageDelayedEvent) String() string {
	return proto.CompactTextString(m)
}
func (*Event_ModemEvent_MessageEvent_ModemMessageDelayedEvent) ProtoMessage() {}
func (*Event_ModemEvent_MessageEvent_ModemMessageDelayedEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor5, []int{0, 0, 4, 2}
}

func (m *Event_ModemEvent_MessageEvent_ModemMessageDelayedEvent) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *Event_ModemEvent_MessageEvent_ModemMessageDelayedEvent) GetModemNumber() string {
	if m != nil {
		return m.ModemNumber
	}
	return ""
}

func (m *Event_ModemEvent_MessageEvent_ModemMessageDelayedEvent) GetMessage() *ModemMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *Event_ModemEvent_MessageEvent_ModemMessageDelayedEvent) GetDelaySeconds() int64 {
	if m != nil {
		return m.DelaySeconds
	}
	return 0
}

func (m *Event_ModemEvent_MessageEvent_ModemMessageDelayedEvent) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Event_ModemEvent_MessageEvent_ModemMessageDelayedEvent) GetModemHealth() Health {
	if m != nil {
		return m.ModemHealth
	}
	return Health_OK
}

func (m *Event_ModemEvent_MessageEvent_ModemMessageDelayedEvent) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Event_ModemEvent_MessageEvent_ModemMessageDelayedEvent) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Event_ModemEvent_MessageEvent_ModemMessageDelayedEvent) GetTime() *Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

// Triggered when a message cannot be parsed. This can have multiple reasons, for example, an invalid
// message version.
type Event_ModemEvent_MessageEvent_ModemMessageCannotBeParsedEvent struct {
	Organization   string     `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	ModemNumber    string     `protobuf:"bytes,2,opt,name=modem_number,json=modemNumber" json:"modem_number,omitempty"`
	ModemMessageId uint64     `protobuf:"varint,3,opt,name=modem_message_id,json=modemMessageId" json:"modem_message_id,omitempty"`
	Time           *Timestamp `protobuf:"bytes,4,opt,name=time" json:"time,omitempty"`
	Reason         string     `protobuf:"bytes,5,opt,name=reason" json:"reason,omitempty"`
	Tags           []*Tag     `protobuf:"bytes,6,rep,name=tags" json:"tags,omitempty"`
	Title          string     `protobuf:"bytes,7,opt,name=title" json:"title,omitempty"`
	Description    string     `protobuf:"bytes,8,opt,name=description" json:"description,omitempty"`
}

func (m *Event_ModemEvent_MessageEvent_ModemMessageCannotBeParsedEvent) Reset() {
	*m = Event_ModemEvent_MessageEvent_ModemMessageCannotBeParsedEvent{}
}
func (m *Event_ModemEvent_MessageEvent_ModemMessageCannotBeParsedEvent) String() string {
	return proto.CompactTextString(m)
}
func (*Event_ModemEvent_MessageEvent_ModemMessageCannotBeParsedEvent) ProtoMessage() {}
func (*Event_ModemEvent_MessageEvent_ModemMessageCannotBeParsedEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor5, []int{0, 0, 4, 3}
}

func (m *Event_ModemEvent_MessageEvent_ModemMessageCannotBeParsedEvent) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *Event_ModemEvent_MessageEvent_ModemMessageCannotBeParsedEvent) GetModemNumber() string {
	if m != nil {
		return m.ModemNumber
	}
	return ""
}

func (m *Event_ModemEvent_MessageEvent_ModemMessageCannotBeParsedEvent) GetModemMessageId() uint64 {
	if m != nil {
		return m.ModemMessageId
	}
	return 0
}

func (m *Event_ModemEvent_MessageEvent_ModemMessageCannotBeParsedEvent) GetTime() *Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *Event_ModemEvent_MessageEvent_ModemMessageCannotBeParsedEvent) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *Event_ModemEvent_MessageEvent_ModemMessageCannotBeParsedEvent) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Event_ModemEvent_MessageEvent_ModemMessageCannotBeParsedEvent) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Event_ModemEvent_MessageEvent_ModemMessageCannotBeParsedEvent) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type Event_ModemEvent_ClaimEvent struct {
}

func (m *Event_ModemEvent_ClaimEvent) Reset()         { *m = Event_ModemEvent_ClaimEvent{} }
func (m *Event_ModemEvent_ClaimEvent) String() string { return proto.CompactTextString(m) }
func (*Event_ModemEvent_ClaimEvent) ProtoMessage()    {}
func (*Event_ModemEvent_ClaimEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor5, []int{0, 0, 5}
}

type Event_ModemEvent_ClaimEvent_ModemClaimedEvent struct {
	Organization string      `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	ModemNumber  string      `protobuf:"bytes,2,opt,name=modem_number,json=modemNumber" json:"modem_number,omitempty"`
	Claim        *ModemClaim `protobuf:"bytes,3,opt,name=claim" json:"claim,omitempty"`
	Time         *Timestamp  `protobuf:"bytes,4,opt,name=time" json:"time,omitempty"`
	Title        string      `protobuf:"bytes,5,opt,name=title" json:"title,omitempty"`
	Description  string      `protobuf:"bytes,6,opt,name=description" json:"description,omitempty"`
	Tags         []*Tag      `protobuf:"bytes,7,rep,name=tags" json:"tags,omitempty"`
}

func (m *Event_ModemEvent_ClaimEvent_ModemClaimedEvent) Reset() {
	*m = Event_ModemEvent_ClaimEvent_ModemClaimedEvent{}
}
func (m *Event_ModemEvent_ClaimEvent_ModemClaimedEvent) String() string {
	return proto.CompactTextString(m)
}
func (*Event_ModemEvent_ClaimEvent_ModemClaimedEvent) ProtoMessage() {}
func (*Event_ModemEvent_ClaimEvent_ModemClaimedEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor5, []int{0, 0, 5, 0}
}

func (m *Event_ModemEvent_ClaimEvent_ModemClaimedEvent) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *Event_ModemEvent_ClaimEvent_ModemClaimedEvent) GetModemNumber() string {
	if m != nil {
		return m.ModemNumber
	}
	return ""
}

func (m *Event_ModemEvent_ClaimEvent_ModemClaimedEvent) GetClaim() *ModemClaim {
	if m != nil {
		return m.Claim
	}
	return nil
}

func (m *Event_ModemEvent_ClaimEvent_ModemClaimedEvent) GetTime() *Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *Event_ModemEvent_ClaimEvent_ModemClaimedEvent) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Event_ModemEvent_ClaimEvent_ModemClaimedEvent) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Event_ModemEvent_ClaimEvent_ModemClaimedEvent) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

type Event_ModemTransferEvent struct {
}

func (m *Event_ModemTransferEvent) Reset()                    { *m = Event_ModemTransferEvent{} }
func (m *Event_ModemTransferEvent) String() string            { return proto.CompactTextString(m) }
func (*Event_ModemTransferEvent) ProtoMessage()               {}
func (*Event_ModemTransferEvent) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{0, 1} }

type Event_ModemTransferEvent_ModemTransferStartedEvent struct {
	Transfer     *ModemTransfer `protobuf:"bytes,1,opt,name=transfer" json:"transfer,omitempty"`
	Organization string         `protobuf:"bytes,2,opt,name=organization" json:"organization,omitempty"`
	Time         *Timestamp     `protobuf:"bytes,3,opt,name=time" json:"time,omitempty"`
	Tags         []*Tag         `protobuf:"bytes,4,rep,name=tags" json:"tags,omitempty"`
	Title        string         `protobuf:"bytes,5,opt,name=title" json:"title,omitempty"`
	Description  string         `protobuf:"bytes,6,opt,name=description" json:"description,omitempty"`
}

func (m *Event_ModemTransferEvent_ModemTransferStartedEvent) Reset() {
	*m = Event_ModemTransferEvent_ModemTransferStartedEvent{}
}
func (m *Event_ModemTransferEvent_ModemTransferStartedEvent) String() string {
	return proto.CompactTextString(m)
}
func (*Event_ModemTransferEvent_ModemTransferStartedEvent) ProtoMessage() {}
func (*Event_ModemTransferEvent_ModemTransferStartedEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor5, []int{0, 1, 0}
}

func (m *Event_ModemTransferEvent_ModemTransferStartedEvent) GetTransfer() *ModemTransfer {
	if m != nil {
		return m.Transfer
	}
	return nil
}

func (m *Event_ModemTransferEvent_ModemTransferStartedEvent) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *Event_ModemTransferEvent_ModemTransferStartedEvent) GetTime() *Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *Event_ModemTransferEvent_ModemTransferStartedEvent) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Event_ModemTransferEvent_ModemTransferStartedEvent) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Event_ModemTransferEvent_ModemTransferStartedEvent) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type Event_ModemTransferEvent_ModemTransferCancelledEvent struct {
	Transfer     *ModemTransfer `protobuf:"bytes,1,opt,name=transfer" json:"transfer,omitempty"`
	Organization string         `protobuf:"bytes,2,opt,name=organization" json:"organization,omitempty"`
	Time         *Timestamp     `protobuf:"bytes,3,opt,name=time" json:"time,omitempty"`
	Tags         []*Tag         `protobuf:"bytes,4,rep,name=tags" json:"tags,omitempty"`
	Title        string         `protobuf:"bytes,5,opt,name=title" json:"title,omitempty"`
	Description  string         `protobuf:"bytes,6,opt,name=description" json:"description,omitempty"`
}

func (m *Event_ModemTransferEvent_ModemTransferCancelledEvent) Reset() {
	*m = Event_ModemTransferEvent_ModemTransferCancelledEvent{}
}
func (m *Event_ModemTransferEvent_ModemTransferCancelledEvent) String() string {
	return proto.CompactTextString(m)
}
func (*Event_ModemTransferEvent_ModemTransferCancelledEvent) ProtoMessage() {}
func (*Event_ModemTransferEvent_ModemTransferCancelledEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor5, []int{0, 1, 1}
}

func (m *Event_ModemTransferEvent_ModemTransferCancelledEvent) GetTransfer() *ModemTransfer {
	if m != nil {
		return m.Transfer
	}
	return nil
}

func (m *Event_ModemTransferEvent_ModemTransferCancelledEvent) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *Event_ModemTransferEvent_ModemTransferCancelledEvent) GetTime() *Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *Event_ModemTransferEvent_ModemTransferCancelledEvent) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Event_ModemTransferEvent_ModemTransferCancelledEvent) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Event_ModemTransferEvent_ModemTransferCancelledEvent) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type Event_ModemTransferEvent_ModemTransferReceivedEvent struct {
	Transfer     *ModemTransfer `protobuf:"bytes,1,opt,name=transfer" json:"transfer,omitempty"`
	Organization string         `protobuf:"bytes,2,opt,name=organization" json:"organization,omitempty"`
	Time         *Timestamp     `protobuf:"bytes,3,opt,name=time" json:"time,omitempty"`
	Tags         []*Tag         `protobuf:"bytes,4,rep,name=tags" json:"tags,omitempty"`
	Title        string         `protobuf:"bytes,5,opt,name=title" json:"title,omitempty"`
	Description  string         `protobuf:"bytes,6,opt,name=description" json:"description,omitempty"`
}

func (m *Event_ModemTransferEvent_ModemTransferReceivedEvent) Reset() {
	*m = Event_ModemTransferEvent_ModemTransferReceivedEvent{}
}
func (m *Event_ModemTransferEvent_ModemTransferReceivedEvent) String() string {
	return proto.CompactTextString(m)
}
func (*Event_ModemTransferEvent_ModemTransferReceivedEvent) ProtoMessage() {}
func (*Event_ModemTransferEvent_ModemTransferReceivedEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor5, []int{0, 1, 2}
}

func (m *Event_ModemTransferEvent_ModemTransferReceivedEvent) GetTransfer() *ModemTransfer {
	if m != nil {
		return m.Transfer
	}
	return nil
}

func (m *Event_ModemTransferEvent_ModemTransferReceivedEvent) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *Event_ModemTransferEvent_ModemTransferReceivedEvent) GetTime() *Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *Event_ModemTransferEvent_ModemTransferReceivedEvent) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Event_ModemTransferEvent_ModemTransferReceivedEvent) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Event_ModemTransferEvent_ModemTransferReceivedEvent) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type Event_ModemTransferEvent_ModemTransferNotReceivedEvent struct {
	Transfer     *ModemTransfer `protobuf:"bytes,1,opt,name=transfer" json:"transfer,omitempty"`
	Organization string         `protobuf:"bytes,2,opt,name=organization" json:"organization,omitempty"`
	Time         *Timestamp     `protobuf:"bytes,3,opt,name=time" json:"time,omitempty"`
	Tags         []*Tag         `protobuf:"bytes,4,rep,name=tags" json:"tags,omitempty"`
	Title        string         `protobuf:"bytes,5,opt,name=title" json:"title,omitempty"`
	Description  string         `protobuf:"bytes,6,opt,name=description" json:"description,omitempty"`
}

func (m *Event_ModemTransferEvent_ModemTransferNotReceivedEvent) Reset() {
	*m = Event_ModemTransferEvent_ModemTransferNotReceivedEvent{}
}
func (m *Event_ModemTransferEvent_ModemTransferNotReceivedEvent) String() string {
	return proto.CompactTextString(m)
}
func (*Event_ModemTransferEvent_ModemTransferNotReceivedEvent) ProtoMessage() {}
func (*Event_ModemTransferEvent_ModemTransferNotReceivedEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor5, []int{0, 1, 3}
}

func (m *Event_ModemTransferEvent_ModemTransferNotReceivedEvent) GetTransfer() *ModemTransfer {
	if m != nil {
		return m.Transfer
	}
	return nil
}

func (m *Event_ModemTransferEvent_ModemTransferNotReceivedEvent) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *Event_ModemTransferEvent_ModemTransferNotReceivedEvent) GetTime() *Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *Event_ModemTransferEvent_ModemTransferNotReceivedEvent) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Event_ModemTransferEvent_ModemTransferNotReceivedEvent) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Event_ModemTransferEvent_ModemTransferNotReceivedEvent) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type Event_ModemTransferEvent_ModemTransferReturnTransferStartedEvent struct {
	ReturnTransfer   *ModemTransfer             `protobuf:"bytes,1,opt,name=return_transfer,json=returnTransfer" json:"return_transfer,omitempty"`
	OriginalTransfer *ModemTransfer             `protobuf:"bytes,2,opt,name=original_transfer,json=originalTransfer" json:"original_transfer,omitempty"`
	ReturnLines      []*ModemTransferReturnLine `protobuf:"bytes,3,rep,name=return_lines,json=returnLines" json:"return_lines,omitempty"`
	Organization     string                     `protobuf:"bytes,4,opt,name=organization" json:"organization,omitempty"`
	Time             *Timestamp                 `protobuf:"bytes,5,opt,name=time" json:"time,omitempty"`
	Tags             []*Tag                     `protobuf:"bytes,6,rep,name=tags" json:"tags,omitempty"`
	Title            string                     `protobuf:"bytes,7,opt,name=title" json:"title,omitempty"`
	Description      string                     `protobuf:"bytes,8,opt,name=description" json:"description,omitempty"`
}

func (m *Event_ModemTransferEvent_ModemTransferReturnTransferStartedEvent) Reset() {
	*m = Event_ModemTransferEvent_ModemTransferReturnTransferStartedEvent{}
}
func (m *Event_ModemTransferEvent_ModemTransferReturnTransferStartedEvent) String() string {
	return proto.CompactTextString(m)
}
func (*Event_ModemTransferEvent_ModemTransferReturnTransferStartedEvent) ProtoMessage() {}
func (*Event_ModemTransferEvent_ModemTransferReturnTransferStartedEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor5, []int{0, 1, 4}
}

func (m *Event_ModemTransferEvent_ModemTransferReturnTransferStartedEvent) GetReturnTransfer() *ModemTransfer {
	if m != nil {
		return m.ReturnTransfer
	}
	return nil
}

func (m *Event_ModemTransferEvent_ModemTransferReturnTransferStartedEvent) GetOriginalTransfer() *ModemTransfer {
	if m != nil {
		return m.OriginalTransfer
	}
	return nil
}

func (m *Event_ModemTransferEvent_ModemTransferReturnTransferStartedEvent) GetReturnLines() []*ModemTransferReturnLine {
	if m != nil {
		return m.ReturnLines
	}
	return nil
}

func (m *Event_ModemTransferEvent_ModemTransferReturnTransferStartedEvent) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *Event_ModemTransferEvent_ModemTransferReturnTransferStartedEvent) GetTime() *Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *Event_ModemTransferEvent_ModemTransferReturnTransferStartedEvent) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Event_ModemTransferEvent_ModemTransferReturnTransferStartedEvent) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Event_ModemTransferEvent_ModemTransferReturnTransferStartedEvent) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type Event_UserEvent struct {
}

func (m *Event_UserEvent) Reset()                    { *m = Event_UserEvent{} }
func (m *Event_UserEvent) String() string            { return proto.CompactTextString(m) }
func (*Event_UserEvent) ProtoMessage()               {}
func (*Event_UserEvent) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{0, 2} }

type Event_UserEvent_UserAddedEvent struct {
	Organization string     `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	User         string     `protobuf:"bytes,2,opt,name=user" json:"user,omitempty"`
	Title        string     `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	Description  string     `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	Time         *Timestamp `protobuf:"bytes,5,opt,name=time" json:"time,omitempty"`
}

func (m *Event_UserEvent_UserAddedEvent) Reset()         { *m = Event_UserEvent_UserAddedEvent{} }
func (m *Event_UserEvent_UserAddedEvent) String() string { return proto.CompactTextString(m) }
func (*Event_UserEvent_UserAddedEvent) ProtoMessage()    {}
func (*Event_UserEvent_UserAddedEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor5, []int{0, 2, 0}
}

func (m *Event_UserEvent_UserAddedEvent) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *Event_UserEvent_UserAddedEvent) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *Event_UserEvent_UserAddedEvent) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Event_UserEvent_UserAddedEvent) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Event_UserEvent_UserAddedEvent) GetTime() *Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

type Event_UserEvent_UserRemovedEvent struct {
	Organization string     `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	User         string     `protobuf:"bytes,2,opt,name=user" json:"user,omitempty"`
	Title        string     `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	Description  string     `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	Time         *Timestamp `protobuf:"bytes,5,opt,name=time" json:"time,omitempty"`
}

func (m *Event_UserEvent_UserRemovedEvent) Reset()         { *m = Event_UserEvent_UserRemovedEvent{} }
func (m *Event_UserEvent_UserRemovedEvent) String() string { return proto.CompactTextString(m) }
func (*Event_UserEvent_UserRemovedEvent) ProtoMessage()    {}
func (*Event_UserEvent_UserRemovedEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor5, []int{0, 2, 1}
}

func (m *Event_UserEvent_UserRemovedEvent) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *Event_UserEvent_UserRemovedEvent) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *Event_UserEvent_UserRemovedEvent) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Event_UserEvent_UserRemovedEvent) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Event_UserEvent_UserRemovedEvent) GetTime() *Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

type Event_UserEvent_UserInvitedEvent struct {
	Organization string     `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	Email        string     `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	Title        string     `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	Description  string     `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	Time         *Timestamp `protobuf:"bytes,5,opt,name=time" json:"time,omitempty"`
}

func (m *Event_UserEvent_UserInvitedEvent) Reset()         { *m = Event_UserEvent_UserInvitedEvent{} }
func (m *Event_UserEvent_UserInvitedEvent) String() string { return proto.CompactTextString(m) }
func (*Event_UserEvent_UserInvitedEvent) ProtoMessage()    {}
func (*Event_UserEvent_UserInvitedEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor5, []int{0, 2, 2}
}

func (m *Event_UserEvent_UserInvitedEvent) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *Event_UserEvent_UserInvitedEvent) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Event_UserEvent_UserInvitedEvent) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Event_UserEvent_UserInvitedEvent) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Event_UserEvent_UserInvitedEvent) GetTime() *Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

type Event_UserEvent_UserAccessRequestEvent struct {
	Organization string     `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	User         string     `protobuf:"bytes,2,opt,name=user" json:"user,omitempty"`
	Time         *Timestamp `protobuf:"bytes,3,opt,name=time" json:"time,omitempty"`
	Title        string     `protobuf:"bytes,4,opt,name=title" json:"title,omitempty"`
	Description  string     `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
}

func (m *Event_UserEvent_UserAccessRequestEvent) Reset() {
	*m = Event_UserEvent_UserAccessRequestEvent{}
}
func (m *Event_UserEvent_UserAccessRequestEvent) String() string { return proto.CompactTextString(m) }
func (*Event_UserEvent_UserAccessRequestEvent) ProtoMessage()    {}
func (*Event_UserEvent_UserAccessRequestEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor5, []int{0, 2, 3}
}

func (m *Event_UserEvent_UserAccessRequestEvent) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *Event_UserEvent_UserAccessRequestEvent) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *Event_UserEvent_UserAccessRequestEvent) GetTime() *Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *Event_UserEvent_UserAccessRequestEvent) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Event_UserEvent_UserAccessRequestEvent) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type Event_PublisherEvent struct {
}

func (m *Event_PublisherEvent) Reset()                    { *m = Event_PublisherEvent{} }
func (m *Event_PublisherEvent) String() string            { return proto.CompactTextString(m) }
func (*Event_PublisherEvent) ProtoMessage()               {}
func (*Event_PublisherEvent) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{0, 3} }

type Event_PublisherEvent_CreatedEvent struct {
	Organization string     `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	Created      *Publisher `protobuf:"bytes,2,opt,name=created" json:"created,omitempty"`
	Tags         []*Tag     `protobuf:"bytes,3,rep,name=tags" json:"tags,omitempty"`
	Title        string     `protobuf:"bytes,4,opt,name=title" json:"title,omitempty"`
	Description  string     `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
	Time         *Timestamp `protobuf:"bytes,6,opt,name=time" json:"time,omitempty"`
}

func (m *Event_PublisherEvent_CreatedEvent) Reset()         { *m = Event_PublisherEvent_CreatedEvent{} }
func (m *Event_PublisherEvent_CreatedEvent) String() string { return proto.CompactTextString(m) }
func (*Event_PublisherEvent_CreatedEvent) ProtoMessage()    {}
func (*Event_PublisherEvent_CreatedEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor5, []int{0, 3, 0}
}

func (m *Event_PublisherEvent_CreatedEvent) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *Event_PublisherEvent_CreatedEvent) GetCreated() *Publisher {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *Event_PublisherEvent_CreatedEvent) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Event_PublisherEvent_CreatedEvent) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Event_PublisherEvent_CreatedEvent) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Event_PublisherEvent_CreatedEvent) GetTime() *Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

type Event_PublisherEvent_UpdatedEvent struct {
	Organization       string                 `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	UpdatedDescription *UpdateClearableString `protobuf:"bytes,2,opt,name=updated_description,json=updatedDescription" json:"updated_description,omitempty"`
	// Deprecated in favor of the new updated_data field
	PartialUpdateData *Publisher_Data `protobuf:"bytes,3,opt,name=partial_update_data,json=partialUpdateData" json:"partial_update_data,omitempty"`
	// Types that are valid to be assigned to UpdatedData:
	//	*Event_PublisherEvent_UpdatedEvent_Webhook
	//	*Event_PublisherEvent_UpdatedEvent_Mqtt
	//	*Event_PublisherEvent_UpdatedEvent_AwsIot
	//	*Event_PublisherEvent_UpdatedEvent_Email
	UpdatedData        isEvent_PublisherEvent_UpdatedEvent_UpdatedData `protobuf_oneof:"updated_data"`
	UpdatedEventFilter *Filter_Events_Update                           `protobuf:"bytes,4,opt,name=updated_event_filter,json=updatedEventFilter" json:"updated_event_filter,omitempty"`
	UpdatedModemFilter *Filter_Modems_Update                           `protobuf:"bytes,5,opt,name=updated_modem_filter,json=updatedModemFilter" json:"updated_modem_filter,omitempty"`
	UpdatedTagFilter   *Filter_Tags_Update                             `protobuf:"bytes,6,opt,name=updated_tag_filter,json=updatedTagFilter" json:"updated_tag_filter,omitempty"`
	UpdatedActiveState *UpdateBoolean                                  `protobuf:"bytes,7,opt,name=updated_active_state,json=updatedActiveState" json:"updated_active_state,omitempty"`
	Tags               []*Tag                                          `protobuf:"bytes,8,rep,name=tags" json:"tags,omitempty"`
	Title              string                                          `protobuf:"bytes,9,opt,name=title" json:"title,omitempty"`
	Description        string                                          `protobuf:"bytes,10,opt,name=description" json:"description,omitempty"`
	Time               *Timestamp                                      `protobuf:"bytes,11,opt,name=time" json:"time,omitempty"`
}

func (m *Event_PublisherEvent_UpdatedEvent) Reset()         { *m = Event_PublisherEvent_UpdatedEvent{} }
func (m *Event_PublisherEvent_UpdatedEvent) String() string { return proto.CompactTextString(m) }
func (*Event_PublisherEvent_UpdatedEvent) ProtoMessage()    {}
func (*Event_PublisherEvent_UpdatedEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor5, []int{0, 3, 1}
}

type isEvent_PublisherEvent_UpdatedEvent_UpdatedData interface{ isEvent_PublisherEvent_UpdatedEvent_UpdatedData() }

type Event_PublisherEvent_UpdatedEvent_Webhook struct {
	Webhook *Event_PublisherEvent_UpdatedEvent_WebhookUpdate `protobuf:"bytes,15,opt,name=webhook,oneof"`
}
type Event_PublisherEvent_UpdatedEvent_Mqtt struct {
	Mqtt *Event_PublisherEvent_UpdatedEvent_MQTTUpdate `protobuf:"bytes,16,opt,name=mqtt,oneof"`
}
type Event_PublisherEvent_UpdatedEvent_AwsIot struct {
	AwsIot *Event_PublisherEvent_UpdatedEvent_AWSIoTUpdate `protobuf:"bytes,17,opt,name=aws_iot,json=awsIot,oneof"`
}
type Event_PublisherEvent_UpdatedEvent_Email struct {
	Email *Event_PublisherEvent_UpdatedEvent_EmailUpdate `protobuf:"bytes,18,opt,name=email,oneof"`
}

func (*Event_PublisherEvent_UpdatedEvent_Webhook) isEvent_PublisherEvent_UpdatedEvent_UpdatedData() {}
func (*Event_PublisherEvent_UpdatedEvent_Mqtt) isEvent_PublisherEvent_UpdatedEvent_UpdatedData()    {}
func (*Event_PublisherEvent_UpdatedEvent_AwsIot) isEvent_PublisherEvent_UpdatedEvent_UpdatedData()  {}
func (*Event_PublisherEvent_UpdatedEvent_Email) isEvent_PublisherEvent_UpdatedEvent_UpdatedData()   {}

func (m *Event_PublisherEvent_UpdatedEvent) GetUpdatedData() isEvent_PublisherEvent_UpdatedEvent_UpdatedData {
	if m != nil {
		return m.UpdatedData
	}
	return nil
}

func (m *Event_PublisherEvent_UpdatedEvent) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *Event_PublisherEvent_UpdatedEvent) GetUpdatedDescription() *UpdateClearableString {
	if m != nil {
		return m.UpdatedDescription
	}
	return nil
}

func (m *Event_PublisherEvent_UpdatedEvent) GetPartialUpdateData() *Publisher_Data {
	if m != nil {
		return m.PartialUpdateData
	}
	return nil
}

func (m *Event_PublisherEvent_UpdatedEvent) GetWebhook() *Event_PublisherEvent_UpdatedEvent_WebhookUpdate {
	if x, ok := m.GetUpdatedData().(*Event_PublisherEvent_UpdatedEvent_Webhook); ok {
		return x.Webhook
	}
	return nil
}

func (m *Event_PublisherEvent_UpdatedEvent) GetMqtt() *Event_PublisherEvent_UpdatedEvent_MQTTUpdate {
	if x, ok := m.GetUpdatedData().(*Event_PublisherEvent_UpdatedEvent_Mqtt); ok {
		return x.Mqtt
	}
	return nil
}

func (m *Event_PublisherEvent_UpdatedEvent) GetAwsIot() *Event_PublisherEvent_UpdatedEvent_AWSIoTUpdate {
	if x, ok := m.GetUpdatedData().(*Event_PublisherEvent_UpdatedEvent_AwsIot); ok {
		return x.AwsIot
	}
	return nil
}

func (m *Event_PublisherEvent_UpdatedEvent) GetEmail() *Event_PublisherEvent_UpdatedEvent_EmailUpdate {
	if x, ok := m.GetUpdatedData().(*Event_PublisherEvent_UpdatedEvent_Email); ok {
		return x.Email
	}
	return nil
}

func (m *Event_PublisherEvent_UpdatedEvent) GetUpdatedEventFilter() *Filter_Events_Update {
	if m != nil {
		return m.UpdatedEventFilter
	}
	return nil
}

func (m *Event_PublisherEvent_UpdatedEvent) GetUpdatedModemFilter() *Filter_Modems_Update {
	if m != nil {
		return m.UpdatedModemFilter
	}
	return nil
}

func (m *Event_PublisherEvent_UpdatedEvent) GetUpdatedTagFilter() *Filter_Tags_Update {
	if m != nil {
		return m.UpdatedTagFilter
	}
	return nil
}

func (m *Event_PublisherEvent_UpdatedEvent) GetUpdatedActiveState() *UpdateBoolean {
	if m != nil {
		return m.UpdatedActiveState
	}
	return nil
}

func (m *Event_PublisherEvent_UpdatedEvent) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Event_PublisherEvent_UpdatedEvent) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Event_PublisherEvent_UpdatedEvent) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Event_PublisherEvent_UpdatedEvent) GetTime() *Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Event_PublisherEvent_UpdatedEvent) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Event_PublisherEvent_UpdatedEvent_OneofMarshaler, _Event_PublisherEvent_UpdatedEvent_OneofUnmarshaler, _Event_PublisherEvent_UpdatedEvent_OneofSizer, []interface{}{
		(*Event_PublisherEvent_UpdatedEvent_Webhook)(nil),
		(*Event_PublisherEvent_UpdatedEvent_Mqtt)(nil),
		(*Event_PublisherEvent_UpdatedEvent_AwsIot)(nil),
		(*Event_PublisherEvent_UpdatedEvent_Email)(nil),
	}
}

func _Event_PublisherEvent_UpdatedEvent_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Event_PublisherEvent_UpdatedEvent)
	// updated_data
	switch x := m.UpdatedData.(type) {
	case *Event_PublisherEvent_UpdatedEvent_Webhook:
		b.EncodeVarint(15<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Webhook); err != nil {
			return err
		}
	case *Event_PublisherEvent_UpdatedEvent_Mqtt:
		b.EncodeVarint(16<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Mqtt); err != nil {
			return err
		}
	case *Event_PublisherEvent_UpdatedEvent_AwsIot:
		b.EncodeVarint(17<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AwsIot); err != nil {
			return err
		}
	case *Event_PublisherEvent_UpdatedEvent_Email:
		b.EncodeVarint(18<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Email); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Event_PublisherEvent_UpdatedEvent.UpdatedData has unexpected type %T", x)
	}
	return nil
}

func _Event_PublisherEvent_UpdatedEvent_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Event_PublisherEvent_UpdatedEvent)
	switch tag {
	case 15: // updated_data.webhook
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Event_PublisherEvent_UpdatedEvent_WebhookUpdate)
		err := b.DecodeMessage(msg)
		m.UpdatedData = &Event_PublisherEvent_UpdatedEvent_Webhook{msg}
		return true, err
	case 16: // updated_data.mqtt
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Event_PublisherEvent_UpdatedEvent_MQTTUpdate)
		err := b.DecodeMessage(msg)
		m.UpdatedData = &Event_PublisherEvent_UpdatedEvent_Mqtt{msg}
		return true, err
	case 17: // updated_data.aws_iot
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Event_PublisherEvent_UpdatedEvent_AWSIoTUpdate)
		err := b.DecodeMessage(msg)
		m.UpdatedData = &Event_PublisherEvent_UpdatedEvent_AwsIot{msg}
		return true, err
	case 18: // updated_data.email
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Event_PublisherEvent_UpdatedEvent_EmailUpdate)
		err := b.DecodeMessage(msg)
		m.UpdatedData = &Event_PublisherEvent_UpdatedEvent_Email{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Event_PublisherEvent_UpdatedEvent_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Event_PublisherEvent_UpdatedEvent)
	// updated_data
	switch x := m.UpdatedData.(type) {
	case *Event_PublisherEvent_UpdatedEvent_Webhook:
		s := proto.Size(x.Webhook)
		n += proto.SizeVarint(15<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_PublisherEvent_UpdatedEvent_Mqtt:
		s := proto.Size(x.Mqtt)
		n += proto.SizeVarint(16<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_PublisherEvent_UpdatedEvent_AwsIot:
		s := proto.Size(x.AwsIot)
		n += proto.SizeVarint(17<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_PublisherEvent_UpdatedEvent_Email:
		s := proto.Size(x.Email)
		n += proto.SizeVarint(18<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Event_PublisherEvent_UpdatedEvent_WebhookUpdate struct {
	Url           string                 `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
	Secret        *UpdateClearableString `protobuf:"bytes,2,opt,name=secret" json:"secret,omitempty"`
	ContentType   Webhook_ContentType    `protobuf:"varint,3,opt,name=content_type,json=contentType,enum=hiber.webhook.Webhook_ContentType" json:"content_type,omitempty"`
	CertificateId *UpdateOptionalId      `protobuf:"bytes,9,opt,name=certificate_id,json=certificateId" json:"certificate_id,omitempty"`
}

func (m *Event_PublisherEvent_UpdatedEvent_WebhookUpdate) Reset() {
	*m = Event_PublisherEvent_UpdatedEvent_WebhookUpdate{}
}
func (m *Event_PublisherEvent_UpdatedEvent_WebhookUpdate) String() string {
	return proto.CompactTextString(m)
}
func (*Event_PublisherEvent_UpdatedEvent_WebhookUpdate) ProtoMessage() {}
func (*Event_PublisherEvent_UpdatedEvent_WebhookUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor5, []int{0, 3, 1, 0}
}

func (m *Event_PublisherEvent_UpdatedEvent_WebhookUpdate) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Event_PublisherEvent_UpdatedEvent_WebhookUpdate) GetSecret() *UpdateClearableString {
	if m != nil {
		return m.Secret
	}
	return nil
}

func (m *Event_PublisherEvent_UpdatedEvent_WebhookUpdate) GetContentType() Webhook_ContentType {
	if m != nil {
		return m.ContentType
	}
	return Webhook_DEFAULT
}

func (m *Event_PublisherEvent_UpdatedEvent_WebhookUpdate) GetCertificateId() *UpdateOptionalId {
	if m != nil {
		return m.CertificateId
	}
	return nil
}

type Event_PublisherEvent_UpdatedEvent_MQTTUpdate struct {
	Url           string                    `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
	ContentType   MQTTPublisher_ContentType `protobuf:"varint,2,opt,name=content_type,json=contentType,enum=hiber.integration.mqtt.MQTTPublisher_ContentType" json:"content_type,omitempty"`
	Topic         string                    `protobuf:"bytes,3,opt,name=topic" json:"topic,omitempty"`
	Qos           MQTTPublisher_Data_QoS    `protobuf:"varint,4,opt,name=qos,enum=hiber.integration.mqtt.MQTTPublisher_Data_QoS" json:"qos,omitempty"`
	Identifier    *UpdateClearableString    `protobuf:"bytes,5,opt,name=identifier" json:"identifier,omitempty"`
	Username      *UpdateClearableString    `protobuf:"bytes,6,opt,name=username" json:"username,omitempty"`
	Password      *UpdateClearableString    `protobuf:"bytes,7,opt,name=password" json:"password,omitempty"`
	CertificateId *UpdateOptionalId         `protobuf:"bytes,8,opt,name=certificate_id,json=certificateId" json:"certificate_id,omitempty"`
}

func (m *Event_PublisherEvent_UpdatedEvent_MQTTUpdate) Reset() {
	*m = Event_PublisherEvent_UpdatedEvent_MQTTUpdate{}
}
func (m *Event_PublisherEvent_UpdatedEvent_MQTTUpdate) String() string {
	return proto.CompactTextString(m)
}
func (*Event_PublisherEvent_UpdatedEvent_MQTTUpdate) ProtoMessage() {}
func (*Event_PublisherEvent_UpdatedEvent_MQTTUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor5, []int{0, 3, 1, 1}
}

func (m *Event_PublisherEvent_UpdatedEvent_MQTTUpdate) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Event_PublisherEvent_UpdatedEvent_MQTTUpdate) GetContentType() MQTTPublisher_ContentType {
	if m != nil {
		return m.ContentType
	}
	return MQTTPublisher_DEFAULT
}

func (m *Event_PublisherEvent_UpdatedEvent_MQTTUpdate) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *Event_PublisherEvent_UpdatedEvent_MQTTUpdate) GetQos() MQTTPublisher_Data_QoS {
	if m != nil {
		return m.Qos
	}
	return MQTTPublisher_Data_DEFAULT
}

func (m *Event_PublisherEvent_UpdatedEvent_MQTTUpdate) GetIdentifier() *UpdateClearableString {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Event_PublisherEvent_UpdatedEvent_MQTTUpdate) GetUsername() *UpdateClearableString {
	if m != nil {
		return m.Username
	}
	return nil
}

func (m *Event_PublisherEvent_UpdatedEvent_MQTTUpdate) GetPassword() *UpdateClearableString {
	if m != nil {
		return m.Password
	}
	return nil
}

func (m *Event_PublisherEvent_UpdatedEvent_MQTTUpdate) GetCertificateId() *UpdateOptionalId {
	if m != nil {
		return m.CertificateId
	}
	return nil
}

type Event_PublisherEvent_UpdatedEvent_AWSIoTUpdate struct {
	AwsIotUrl            string            `protobuf:"bytes,2,opt,name=aws_iot_url,json=awsIotUrl" json:"aws_iot_url,omitempty"`
	CertificateId        *UpdateOptionalId `protobuf:"bytes,3,opt,name=certificate_id,json=certificateId" json:"certificate_id,omitempty"`
	MqttClientIdentifier string            `protobuf:"bytes,5,opt,name=mqtt_client_identifier,json=mqttClientIdentifier" json:"mqtt_client_identifier,omitempty"`
}

func (m *Event_PublisherEvent_UpdatedEvent_AWSIoTUpdate) Reset() {
	*m = Event_PublisherEvent_UpdatedEvent_AWSIoTUpdate{}
}
func (m *Event_PublisherEvent_UpdatedEvent_AWSIoTUpdate) String() string {
	return proto.CompactTextString(m)
}
func (*Event_PublisherEvent_UpdatedEvent_AWSIoTUpdate) ProtoMessage() {}
func (*Event_PublisherEvent_UpdatedEvent_AWSIoTUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor5, []int{0, 3, 1, 2}
}

func (m *Event_PublisherEvent_UpdatedEvent_AWSIoTUpdate) GetAwsIotUrl() string {
	if m != nil {
		return m.AwsIotUrl
	}
	return ""
}

func (m *Event_PublisherEvent_UpdatedEvent_AWSIoTUpdate) GetCertificateId() *UpdateOptionalId {
	if m != nil {
		return m.CertificateId
	}
	return nil
}

func (m *Event_PublisherEvent_UpdatedEvent_AWSIoTUpdate) GetMqttClientIdentifier() string {
	if m != nil {
		return m.MqttClientIdentifier
	}
	return ""
}

type Event_PublisherEvent_UpdatedEvent_EmailUpdate struct {
}

func (m *Event_PublisherEvent_UpdatedEvent_EmailUpdate) Reset() {
	*m = Event_PublisherEvent_UpdatedEvent_EmailUpdate{}
}
func (m *Event_PublisherEvent_UpdatedEvent_EmailUpdate) String() string {
	return proto.CompactTextString(m)
}
func (*Event_PublisherEvent_UpdatedEvent_EmailUpdate) ProtoMessage() {}
func (*Event_PublisherEvent_UpdatedEvent_EmailUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor5, []int{0, 3, 1, 3}
}

type Event_PublisherEvent_DeletedEvent struct {
	Organization string     `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	Deleted      *Publisher `protobuf:"bytes,2,opt,name=deleted" json:"deleted,omitempty"`
	Tags         []*Tag     `protobuf:"bytes,3,rep,name=tags" json:"tags,omitempty"`
	Title        string     `protobuf:"bytes,4,opt,name=title" json:"title,omitempty"`
	Description  string     `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
	Time         *Timestamp `protobuf:"bytes,6,opt,name=time" json:"time,omitempty"`
}

func (m *Event_PublisherEvent_DeletedEvent) Reset()         { *m = Event_PublisherEvent_DeletedEvent{} }
func (m *Event_PublisherEvent_DeletedEvent) String() string { return proto.CompactTextString(m) }
func (*Event_PublisherEvent_DeletedEvent) ProtoMessage()    {}
func (*Event_PublisherEvent_DeletedEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor5, []int{0, 3, 2}
}

func (m *Event_PublisherEvent_DeletedEvent) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *Event_PublisherEvent_DeletedEvent) GetDeleted() *Publisher {
	if m != nil {
		return m.Deleted
	}
	return nil
}

func (m *Event_PublisherEvent_DeletedEvent) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Event_PublisherEvent_DeletedEvent) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Event_PublisherEvent_DeletedEvent) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Event_PublisherEvent_DeletedEvent) GetTime() *Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

type Event_PublisherEvent_AutoDisabledEvent struct {
	Organization string     `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	Id           int64      `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	Tags         []*Tag     `protobuf:"bytes,3,rep,name=tags" json:"tags,omitempty"`
	Title        string     `protobuf:"bytes,4,opt,name=title" json:"title,omitempty"`
	Description  string     `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
	Time         *Timestamp `protobuf:"bytes,6,opt,name=time" json:"time,omitempty"`
}

func (m *Event_PublisherEvent_AutoDisabledEvent) Reset() {
	*m = Event_PublisherEvent_AutoDisabledEvent{}
}
func (m *Event_PublisherEvent_AutoDisabledEvent) String() string { return proto.CompactTextString(m) }
func (*Event_PublisherEvent_AutoDisabledEvent) ProtoMessage()    {}
func (*Event_PublisherEvent_AutoDisabledEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor5, []int{0, 3, 3}
}

func (m *Event_PublisherEvent_AutoDisabledEvent) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *Event_PublisherEvent_AutoDisabledEvent) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Event_PublisherEvent_AutoDisabledEvent) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Event_PublisherEvent_AutoDisabledEvent) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Event_PublisherEvent_AutoDisabledEvent) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Event_PublisherEvent_AutoDisabledEvent) GetTime() *Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

type Event_PublisherEvent_FailedEvent struct {
	Organization string     `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	Reason       string     `protobuf:"bytes,2,opt,name=reason" json:"reason,omitempty"`
	Failed       *Publisher `protobuf:"bytes,3,opt,name=failed" json:"failed,omitempty"`
	Tags         []*Tag     `protobuf:"bytes,4,rep,name=tags" json:"tags,omitempty"`
	Title        string     `protobuf:"bytes,5,opt,name=title" json:"title,omitempty"`
	Description  string     `protobuf:"bytes,6,opt,name=description" json:"description,omitempty"`
	Time         *Timestamp `protobuf:"bytes,7,opt,name=time" json:"time,omitempty"`
}

func (m *Event_PublisherEvent_FailedEvent) Reset()         { *m = Event_PublisherEvent_FailedEvent{} }
func (m *Event_PublisherEvent_FailedEvent) String() string { return proto.CompactTextString(m) }
func (*Event_PublisherEvent_FailedEvent) ProtoMessage()    {}
func (*Event_PublisherEvent_FailedEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor5, []int{0, 3, 4}
}

func (m *Event_PublisherEvent_FailedEvent) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *Event_PublisherEvent_FailedEvent) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *Event_PublisherEvent_FailedEvent) GetFailed() *Publisher {
	if m != nil {
		return m.Failed
	}
	return nil
}

func (m *Event_PublisherEvent_FailedEvent) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Event_PublisherEvent_FailedEvent) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Event_PublisherEvent_FailedEvent) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Event_PublisherEvent_FailedEvent) GetTime() *Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

type Event_TokenEvent struct {
}

func (m *Event_TokenEvent) Reset()                    { *m = Event_TokenEvent{} }
func (m *Event_TokenEvent) String() string            { return proto.CompactTextString(m) }
func (*Event_TokenEvent) ProtoMessage()               {}
func (*Event_TokenEvent) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{0, 4} }

type Event_TokenEvent_TokenCreatedEvent struct {
	Organization string     `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	Token        *Token     `protobuf:"bytes,2,opt,name=token" json:"token,omitempty"`
	Title        string     `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	Description  string     `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	Time         *Timestamp `protobuf:"bytes,5,opt,name=time" json:"time,omitempty"`
}

func (m *Event_TokenEvent_TokenCreatedEvent) Reset()         { *m = Event_TokenEvent_TokenCreatedEvent{} }
func (m *Event_TokenEvent_TokenCreatedEvent) String() string { return proto.CompactTextString(m) }
func (*Event_TokenEvent_TokenCreatedEvent) ProtoMessage()    {}
func (*Event_TokenEvent_TokenCreatedEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor5, []int{0, 4, 0}
}

func (m *Event_TokenEvent_TokenCreatedEvent) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *Event_TokenEvent_TokenCreatedEvent) GetToken() *Token {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *Event_TokenEvent_TokenCreatedEvent) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Event_TokenEvent_TokenCreatedEvent) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Event_TokenEvent_TokenCreatedEvent) GetTime() *Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

type Event_TokenEvent_TokenExpiryWarningEvent struct {
	Organization string     `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	Token        *Token     `protobuf:"bytes,2,opt,name=token" json:"token,omitempty"`
	Title        string     `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	Description  string     `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	Time         *Timestamp `protobuf:"bytes,5,opt,name=time" json:"time,omitempty"`
}

func (m *Event_TokenEvent_TokenExpiryWarningEvent) Reset() {
	*m = Event_TokenEvent_TokenExpiryWarningEvent{}
}
func (m *Event_TokenEvent_TokenExpiryWarningEvent) String() string { return proto.CompactTextString(m) }
func (*Event_TokenEvent_TokenExpiryWarningEvent) ProtoMessage()    {}
func (*Event_TokenEvent_TokenExpiryWarningEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor5, []int{0, 4, 1}
}

func (m *Event_TokenEvent_TokenExpiryWarningEvent) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *Event_TokenEvent_TokenExpiryWarningEvent) GetToken() *Token {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *Event_TokenEvent_TokenExpiryWarningEvent) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Event_TokenEvent_TokenExpiryWarningEvent) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Event_TokenEvent_TokenExpiryWarningEvent) GetTime() *Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

type Event_TokenEvent_TokenExpiredEvent struct {
	Organization string     `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	Token        *Token     `protobuf:"bytes,2,opt,name=token" json:"token,omitempty"`
	Title        string     `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	Description  string     `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	Time         *Timestamp `protobuf:"bytes,5,opt,name=time" json:"time,omitempty"`
}

func (m *Event_TokenEvent_TokenExpiredEvent) Reset()         { *m = Event_TokenEvent_TokenExpiredEvent{} }
func (m *Event_TokenEvent_TokenExpiredEvent) String() string { return proto.CompactTextString(m) }
func (*Event_TokenEvent_TokenExpiredEvent) ProtoMessage()    {}
func (*Event_TokenEvent_TokenExpiredEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor5, []int{0, 4, 2}
}

func (m *Event_TokenEvent_TokenExpiredEvent) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *Event_TokenEvent_TokenExpiredEvent) GetToken() *Token {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *Event_TokenEvent_TokenExpiredEvent) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Event_TokenEvent_TokenExpiredEvent) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Event_TokenEvent_TokenExpiredEvent) GetTime() *Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

type Event_TokenEvent_TokenDeletedEvent struct {
	Organization string     `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	Token        *Token     `protobuf:"bytes,2,opt,name=token" json:"token,omitempty"`
	Title        string     `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	Description  string     `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	Time         *Timestamp `protobuf:"bytes,5,opt,name=time" json:"time,omitempty"`
}

func (m *Event_TokenEvent_TokenDeletedEvent) Reset()         { *m = Event_TokenEvent_TokenDeletedEvent{} }
func (m *Event_TokenEvent_TokenDeletedEvent) String() string { return proto.CompactTextString(m) }
func (*Event_TokenEvent_TokenDeletedEvent) ProtoMessage()    {}
func (*Event_TokenEvent_TokenDeletedEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor5, []int{0, 4, 3}
}

func (m *Event_TokenEvent_TokenDeletedEvent) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *Event_TokenEvent_TokenDeletedEvent) GetToken() *Token {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *Event_TokenEvent_TokenDeletedEvent) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Event_TokenEvent_TokenDeletedEvent) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Event_TokenEvent_TokenDeletedEvent) GetTime() *Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

type Event_OrganizationEvent struct {
}

func (m *Event_OrganizationEvent) Reset()                    { *m = Event_OrganizationEvent{} }
func (m *Event_OrganizationEvent) String() string            { return proto.CompactTextString(m) }
func (*Event_OrganizationEvent) ProtoMessage()               {}
func (*Event_OrganizationEvent) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{0, 5} }

type Event_OrganizationEvent_OrganizationCreatedEvent struct {
	ParentOrganization string        `protobuf:"bytes,1,opt,name=parent_organization,json=parentOrganization" json:"parent_organization,omitempty"`
	Created            *Organization `protobuf:"bytes,2,opt,name=created" json:"created,omitempty"`
	Title              string        `protobuf:"bytes,9,opt,name=title" json:"title,omitempty"`
	Description        string        `protobuf:"bytes,10,opt,name=description" json:"description,omitempty"`
	Time               *Timestamp    `protobuf:"bytes,11,opt,name=time" json:"time,omitempty"`
}

func (m *Event_OrganizationEvent_OrganizationCreatedEvent) Reset() {
	*m = Event_OrganizationEvent_OrganizationCreatedEvent{}
}
func (m *Event_OrganizationEvent_OrganizationCreatedEvent) String() string {
	return proto.CompactTextString(m)
}
func (*Event_OrganizationEvent_OrganizationCreatedEvent) ProtoMessage() {}
func (*Event_OrganizationEvent_OrganizationCreatedEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor5, []int{0, 5, 0}
}

func (m *Event_OrganizationEvent_OrganizationCreatedEvent) GetParentOrganization() string {
	if m != nil {
		return m.ParentOrganization
	}
	return ""
}

func (m *Event_OrganizationEvent_OrganizationCreatedEvent) GetCreated() *Organization {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *Event_OrganizationEvent_OrganizationCreatedEvent) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Event_OrganizationEvent_OrganizationCreatedEvent) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Event_OrganizationEvent_OrganizationCreatedEvent) GetTime() *Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

type Event_OrganizationEvent_OrganizationUpdatedEvent struct {
	Organization          string                `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	DisplayNameUpdated    string                `protobuf:"bytes,2,opt,name=display_name_updated,json=displayNameUpdated" json:"display_name_updated,omitempty"`
	VatNumberUpdated      string                `protobuf:"bytes,3,opt,name=vat_number_updated,json=vatNumberUpdated" json:"vat_number_updated,omitempty"`
	AddressUpdated        *Organization_Address `protobuf:"bytes,4,opt,name=address_updated,json=addressUpdated" json:"address_updated,omitempty"`
	IsBusinessUpdated     *UpdateBoolean        `protobuf:"bytes,5,opt,name=is_business_updated,json=isBusinessUpdated" json:"is_business_updated,omitempty"`
	BillingNameUpdated    string                `protobuf:"bytes,6,opt,name=billing_name_updated,json=billingNameUpdated" json:"billing_name_updated,omitempty"`
	BillingAddressUpdated *Organization_Address `protobuf:"bytes,7,opt,name=billing_address_updated,json=billingAddressUpdated" json:"billing_address_updated,omitempty"`
	ContactUpdated        *Organization_Contact `protobuf:"bytes,8,opt,name=contact_updated,json=contactUpdated" json:"contact_updated,omitempty"`
	Title                 string                `protobuf:"bytes,9,opt,name=title" json:"title,omitempty"`
	Description           string                `protobuf:"bytes,10,opt,name=description" json:"description,omitempty"`
	Time                  *Timestamp            `protobuf:"bytes,11,opt,name=time" json:"time,omitempty"`
}

func (m *Event_OrganizationEvent_OrganizationUpdatedEvent) Reset() {
	*m = Event_OrganizationEvent_OrganizationUpdatedEvent{}
}
func (m *Event_OrganizationEvent_OrganizationUpdatedEvent) String() string {
	return proto.CompactTextString(m)
}
func (*Event_OrganizationEvent_OrganizationUpdatedEvent) ProtoMessage() {}
func (*Event_OrganizationEvent_OrganizationUpdatedEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor5, []int{0, 5, 1}
}

func (m *Event_OrganizationEvent_OrganizationUpdatedEvent) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *Event_OrganizationEvent_OrganizationUpdatedEvent) GetDisplayNameUpdated() string {
	if m != nil {
		return m.DisplayNameUpdated
	}
	return ""
}

func (m *Event_OrganizationEvent_OrganizationUpdatedEvent) GetVatNumberUpdated() string {
	if m != nil {
		return m.VatNumberUpdated
	}
	return ""
}

func (m *Event_OrganizationEvent_OrganizationUpdatedEvent) GetAddressUpdated() *Organization_Address {
	if m != nil {
		return m.AddressUpdated
	}
	return nil
}

func (m *Event_OrganizationEvent_OrganizationUpdatedEvent) GetIsBusinessUpdated() *UpdateBoolean {
	if m != nil {
		return m.IsBusinessUpdated
	}
	return nil
}

func (m *Event_OrganizationEvent_OrganizationUpdatedEvent) GetBillingNameUpdated() string {
	if m != nil {
		return m.BillingNameUpdated
	}
	return ""
}

func (m *Event_OrganizationEvent_OrganizationUpdatedEvent) GetBillingAddressUpdated() *Organization_Address {
	if m != nil {
		return m.BillingAddressUpdated
	}
	return nil
}

func (m *Event_OrganizationEvent_OrganizationUpdatedEvent) GetContactUpdated() *Organization_Contact {
	if m != nil {
		return m.ContactUpdated
	}
	return nil
}

func (m *Event_OrganizationEvent_OrganizationUpdatedEvent) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Event_OrganizationEvent_OrganizationUpdatedEvent) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Event_OrganizationEvent_OrganizationUpdatedEvent) GetTime() *Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

type Event_OrganizationEvent_OrganizationDeletedEvent struct {
	ParentOrganization  string     `protobuf:"bytes,1,opt,name=parent_organization,json=parentOrganization" json:"parent_organization,omitempty"`
	DeletedOrganization string     `protobuf:"bytes,2,opt,name=deleted_organization,json=deletedOrganization" json:"deleted_organization,omitempty"`
	Title               string     `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	Description         string     `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	Time                *Timestamp `protobuf:"bytes,5,opt,name=time" json:"time,omitempty"`
}

func (m *Event_OrganizationEvent_OrganizationDeletedEvent) Reset() {
	*m = Event_OrganizationEvent_OrganizationDeletedEvent{}
}
func (m *Event_OrganizationEvent_OrganizationDeletedEvent) String() string {
	return proto.CompactTextString(m)
}
func (*Event_OrganizationEvent_OrganizationDeletedEvent) ProtoMessage() {}
func (*Event_OrganizationEvent_OrganizationDeletedEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor5, []int{0, 5, 2}
}

func (m *Event_OrganizationEvent_OrganizationDeletedEvent) GetParentOrganization() string {
	if m != nil {
		return m.ParentOrganization
	}
	return ""
}

func (m *Event_OrganizationEvent_OrganizationDeletedEvent) GetDeletedOrganization() string {
	if m != nil {
		return m.DeletedOrganization
	}
	return ""
}

func (m *Event_OrganizationEvent_OrganizationDeletedEvent) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Event_OrganizationEvent_OrganizationDeletedEvent) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Event_OrganizationEvent_OrganizationDeletedEvent) GetTime() *Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

type BundledEvent struct {
	Type        EventType  `protobuf:"varint,1,opt,name=type,enum=hiber.EventType" json:"type,omitempty"`
	Amount      int32      `protobuf:"varint,2,opt,name=amount" json:"amount,omitempty"`
	Title       string     `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	Description string     `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	LastEvent   *Timestamp `protobuf:"bytes,5,opt,name=last_event,json=lastEvent" json:"last_event,omitempty"`
}

func (m *BundledEvent) Reset()                    { *m = BundledEvent{} }
func (m *BundledEvent) String() string            { return proto.CompactTextString(m) }
func (*BundledEvent) ProtoMessage()               {}
func (*BundledEvent) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{1} }

func (m *BundledEvent) GetType() EventType {
	if m != nil {
		return m.Type
	}
	return EventType_DEFAULT
}

func (m *BundledEvent) GetAmount() int32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *BundledEvent) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *BundledEvent) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *BundledEvent) GetLastEvent() *Timestamp {
	if m != nil {
		return m.LastEvent
	}
	return nil
}

// Selection object for Event list and stream. Filter events on modem, webhook, time and error state, and
// paginate the list.
// Events are returned bundled by default. this means that, instead of the details, you get a list of bundles,
// one per event type, with the count.
type EventSelection struct {
	Events     *Filter_Events     `protobuf:"bytes,1,opt,name=events" json:"events,omitempty"`
	Modems     *Filter_Modems     `protobuf:"bytes,2,opt,name=modems" json:"modems,omitempty"`
	Publishers *Filter_Publishers `protobuf:"bytes,3,opt,name=publishers" json:"publishers,omitempty"`
	Tags       *Filter_Tags       `protobuf:"bytes,4,opt,name=tags" json:"tags,omitempty"`
	TimeRange  *TimeRange         `protobuf:"bytes,6,opt,name=time_range,json=timeRange" json:"time_range,omitempty"`
	ErrorsOnly bool               `protobuf:"varint,7,opt,name=errors_only,json=errorsOnly" json:"errors_only,omitempty"`
	// When not set, no unbundled events are returned.
	// When set, returns unbundled events per type, paginated per type.
	UnbundledEvents       bool `protobuf:"varint,8,opt,name=unbundled_events,json=unbundledEvents" json:"unbundled_events,omitempty"`
	IncludeResolvedEvents bool `protobuf:"varint,9,opt,name=include_resolved_events,json=includeResolvedEvents" json:"include_resolved_events,omitempty"`
}

func (m *EventSelection) Reset()                    { *m = EventSelection{} }
func (m *EventSelection) String() string            { return proto.CompactTextString(m) }
func (*EventSelection) ProtoMessage()               {}
func (*EventSelection) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{2} }

func (m *EventSelection) GetEvents() *Filter_Events {
	if m != nil {
		return m.Events
	}
	return nil
}

func (m *EventSelection) GetModems() *Filter_Modems {
	if m != nil {
		return m.Modems
	}
	return nil
}

func (m *EventSelection) GetPublishers() *Filter_Publishers {
	if m != nil {
		return m.Publishers
	}
	return nil
}

func (m *EventSelection) GetTags() *Filter_Tags {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *EventSelection) GetTimeRange() *TimeRange {
	if m != nil {
		return m.TimeRange
	}
	return nil
}

func (m *EventSelection) GetErrorsOnly() bool {
	if m != nil {
		return m.ErrorsOnly
	}
	return false
}

func (m *EventSelection) GetUnbundledEvents() bool {
	if m != nil {
		return m.UnbundledEvents
	}
	return false
}

func (m *EventSelection) GetIncludeResolvedEvents() bool {
	if m != nil {
		return m.IncludeResolvedEvents
	}
	return false
}

// Lists all events matching the given criteria.
// The frequency of event can vary greatly per type, resulting in unclear pagination and some event types overshadowing
// others. For this reason, event are bundled by default, reducing them to a count per event type.
// If unbundled events for certain types are required, this can be toggled in the selection object.
// Pagination is only applied to unbundled events, and is applied per event type. This may result in a non-linear
// timeline from page to page when selecting two types with a large difference in frequency, but makes sure you
// see the most recent events of each type on the first page.
type ListEventsRequest struct {
	// Pick the organization to use (/impersonate). If unset, your default organization is used.
	Organization string          `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	Selection    *EventSelection `protobuf:"bytes,2,opt,name=selection" json:"selection,omitempty"`
	// Pagination is applied per event type on unbundled events. It is not necessary for bundled events.
	Pagination *Pagination            `protobuf:"bytes,3,opt,name=pagination" json:"pagination,omitempty"`
	Sort       ListEventsRequest_Sort `protobuf:"varint,4,opt,name=sort,enum=hiber.event.ListEventsRequest_Sort" json:"sort,omitempty"`
}

func (m *ListEventsRequest) Reset()                    { *m = ListEventsRequest{} }
func (m *ListEventsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListEventsRequest) ProtoMessage()               {}
func (*ListEventsRequest) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{3} }

func (m *ListEventsRequest) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *ListEventsRequest) GetSelection() *EventSelection {
	if m != nil {
		return m.Selection
	}
	return nil
}

func (m *ListEventsRequest) GetPagination() *Pagination {
	if m != nil {
		return m.Pagination
	}
	return nil
}

func (m *ListEventsRequest) GetSort() ListEventsRequest_Sort {
	if m != nil {
		return m.Sort
	}
	return ListEventsRequest_TIME_DESCENDING
}

type ListEventsRequest_Response struct {
	Request         *ListEventsRequest                              `protobuf:"bytes,2,opt,name=request" json:"request,omitempty"`
	Events          []*BundledEvent                                 `protobuf:"bytes,4,rep,name=events" json:"events,omitempty"`
	UnbundledEvents []*ListEventsRequest_Response_EventTypeResponse `protobuf:"bytes,5,rep,name=unbundled_events,json=unbundledEvents" json:"unbundled_events,omitempty"`
}

func (m *ListEventsRequest_Response) Reset()                    { *m = ListEventsRequest_Response{} }
func (m *ListEventsRequest_Response) String() string            { return proto.CompactTextString(m) }
func (*ListEventsRequest_Response) ProtoMessage()               {}
func (*ListEventsRequest_Response) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{3, 0} }

func (m *ListEventsRequest_Response) GetRequest() *ListEventsRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *ListEventsRequest_Response) GetEvents() []*BundledEvent {
	if m != nil {
		return m.Events
	}
	return nil
}

func (m *ListEventsRequest_Response) GetUnbundledEvents() []*ListEventsRequest_Response_EventTypeResponse {
	if m != nil {
		return m.UnbundledEvents
	}
	return nil
}

type ListEventsRequest_Response_EventTypeResponse struct {
	Type            EventType          `protobuf:"varint,1,opt,name=type,enum=hiber.EventType" json:"type,omitempty"`
	UnbundledEvents []*Event           `protobuf:"bytes,2,rep,name=unbundled_events,json=unbundledEvents" json:"unbundled_events,omitempty"`
	Pagination      *Pagination_Result `protobuf:"bytes,3,opt,name=pagination" json:"pagination,omitempty"`
}

func (m *ListEventsRequest_Response_EventTypeResponse) Reset() {
	*m = ListEventsRequest_Response_EventTypeResponse{}
}
func (m *ListEventsRequest_Response_EventTypeResponse) String() string {
	return proto.CompactTextString(m)
}
func (*ListEventsRequest_Response_EventTypeResponse) ProtoMessage() {}
func (*ListEventsRequest_Response_EventTypeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor5, []int{3, 0, 0}
}

func (m *ListEventsRequest_Response_EventTypeResponse) GetType() EventType {
	if m != nil {
		return m.Type
	}
	return EventType_DEFAULT
}

func (m *ListEventsRequest_Response_EventTypeResponse) GetUnbundledEvents() []*Event {
	if m != nil {
		return m.UnbundledEvents
	}
	return nil
}

func (m *ListEventsRequest_Response_EventTypeResponse) GetPagination() *Pagination_Result {
	if m != nil {
		return m.Pagination
	}
	return nil
}

// Creates a stream for new events, matching the provided selection.
type EventStreamRequest struct {
	// Pick the organization to use (/impersonate). If unset, your default organization is used.
	Organization string          `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	Selection    *EventSelection `protobuf:"bytes,2,opt,name=selection" json:"selection,omitempty"`
}

func (m *EventStreamRequest) Reset()                    { *m = EventStreamRequest{} }
func (m *EventStreamRequest) String() string            { return proto.CompactTextString(m) }
func (*EventStreamRequest) ProtoMessage()               {}
func (*EventStreamRequest) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{4} }

func (m *EventStreamRequest) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *EventStreamRequest) GetSelection() *EventSelection {
	if m != nil {
		return m.Selection
	}
	return nil
}

func init() {
	proto.RegisterType((*Event)(nil), "hiber.event.Event")
	proto.RegisterType((*Event_ModemEvent)(nil), "hiber.event.Event.ModemEvent")
	proto.RegisterType((*Event_ModemEvent_ModemUpdatedEvent)(nil), "hiber.event.Event.ModemEvent.ModemUpdatedEvent")
	proto.RegisterType((*Event_ModemEvent_ModemLocationUpdatedEvent)(nil), "hiber.event.Event.ModemEvent.ModemLocationUpdatedEvent")
	proto.RegisterType((*Event_ModemEvent_ModemStaleEvent)(nil), "hiber.event.Event.ModemEvent.ModemStaleEvent")
	proto.RegisterType((*Event_ModemEvent_ModemActivatedEvent)(nil), "hiber.event.Event.ModemEvent.ModemActivatedEvent")
	proto.RegisterType((*Event_ModemEvent_MessageEvent)(nil), "hiber.event.Event.ModemEvent.MessageEvent")
	proto.RegisterType((*Event_ModemEvent_MessageEvent_ModemMessageReceivedEvent)(nil), "hiber.event.Event.ModemEvent.MessageEvent.ModemMessageReceivedEvent")
	proto.RegisterType((*Event_ModemEvent_MessageEvent_ModemMessageDroppedEvent)(nil), "hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDroppedEvent")
	proto.RegisterType((*Event_ModemEvent_MessageEvent_ModemMessageDelayedEvent)(nil), "hiber.event.Event.ModemEvent.MessageEvent.ModemMessageDelayedEvent")
	proto.RegisterType((*Event_ModemEvent_MessageEvent_ModemMessageCannotBeParsedEvent)(nil), "hiber.event.Event.ModemEvent.MessageEvent.ModemMessageCannotBeParsedEvent")
	proto.RegisterType((*Event_ModemEvent_ClaimEvent)(nil), "hiber.event.Event.ModemEvent.ClaimEvent")
	proto.RegisterType((*Event_ModemEvent_ClaimEvent_ModemClaimedEvent)(nil), "hiber.event.Event.ModemEvent.ClaimEvent.ModemClaimedEvent")
	proto.RegisterType((*Event_ModemTransferEvent)(nil), "hiber.event.Event.ModemTransferEvent")
	proto.RegisterType((*Event_ModemTransferEvent_ModemTransferStartedEvent)(nil), "hiber.event.Event.ModemTransferEvent.ModemTransferStartedEvent")
	proto.RegisterType((*Event_ModemTransferEvent_ModemTransferCancelledEvent)(nil), "hiber.event.Event.ModemTransferEvent.ModemTransferCancelledEvent")
	proto.RegisterType((*Event_ModemTransferEvent_ModemTransferReceivedEvent)(nil), "hiber.event.Event.ModemTransferEvent.ModemTransferReceivedEvent")
	proto.RegisterType((*Event_ModemTransferEvent_ModemTransferNotReceivedEvent)(nil), "hiber.event.Event.ModemTransferEvent.ModemTransferNotReceivedEvent")
	proto.RegisterType((*Event_ModemTransferEvent_ModemTransferReturnTransferStartedEvent)(nil), "hiber.event.Event.ModemTransferEvent.ModemTransferReturnTransferStartedEvent")
	proto.RegisterType((*Event_UserEvent)(nil), "hiber.event.Event.UserEvent")
	proto.RegisterType((*Event_UserEvent_UserAddedEvent)(nil), "hiber.event.Event.UserEvent.UserAddedEvent")
	proto.RegisterType((*Event_UserEvent_UserRemovedEvent)(nil), "hiber.event.Event.UserEvent.UserRemovedEvent")
	proto.RegisterType((*Event_UserEvent_UserInvitedEvent)(nil), "hiber.event.Event.UserEvent.UserInvitedEvent")
	proto.RegisterType((*Event_UserEvent_UserAccessRequestEvent)(nil), "hiber.event.Event.UserEvent.UserAccessRequestEvent")
	proto.RegisterType((*Event_PublisherEvent)(nil), "hiber.event.Event.PublisherEvent")
	proto.RegisterType((*Event_PublisherEvent_CreatedEvent)(nil), "hiber.event.Event.PublisherEvent.CreatedEvent")
	proto.RegisterType((*Event_PublisherEvent_UpdatedEvent)(nil), "hiber.event.Event.PublisherEvent.UpdatedEvent")
	proto.RegisterType((*Event_PublisherEvent_UpdatedEvent_WebhookUpdate)(nil), "hiber.event.Event.PublisherEvent.UpdatedEvent.WebhookUpdate")
	proto.RegisterType((*Event_PublisherEvent_UpdatedEvent_MQTTUpdate)(nil), "hiber.event.Event.PublisherEvent.UpdatedEvent.MQTTUpdate")
	proto.RegisterType((*Event_PublisherEvent_UpdatedEvent_AWSIoTUpdate)(nil), "hiber.event.Event.PublisherEvent.UpdatedEvent.AWSIoTUpdate")
	proto.RegisterType((*Event_PublisherEvent_UpdatedEvent_EmailUpdate)(nil), "hiber.event.Event.PublisherEvent.UpdatedEvent.EmailUpdate")
	proto.RegisterType((*Event_PublisherEvent_DeletedEvent)(nil), "hiber.event.Event.PublisherEvent.DeletedEvent")
	proto.RegisterType((*Event_PublisherEvent_AutoDisabledEvent)(nil), "hiber.event.Event.PublisherEvent.AutoDisabledEvent")
	proto.RegisterType((*Event_PublisherEvent_FailedEvent)(nil), "hiber.event.Event.PublisherEvent.FailedEvent")
	proto.RegisterType((*Event_TokenEvent)(nil), "hiber.event.Event.TokenEvent")
	proto.RegisterType((*Event_TokenEvent_TokenCreatedEvent)(nil), "hiber.event.Event.TokenEvent.TokenCreatedEvent")
	proto.RegisterType((*Event_TokenEvent_TokenExpiryWarningEvent)(nil), "hiber.event.Event.TokenEvent.TokenExpiryWarningEvent")
	proto.RegisterType((*Event_TokenEvent_TokenExpiredEvent)(nil), "hiber.event.Event.TokenEvent.TokenExpiredEvent")
	proto.RegisterType((*Event_TokenEvent_TokenDeletedEvent)(nil), "hiber.event.Event.TokenEvent.TokenDeletedEvent")
	proto.RegisterType((*Event_OrganizationEvent)(nil), "hiber.event.Event.OrganizationEvent")
	proto.RegisterType((*Event_OrganizationEvent_OrganizationCreatedEvent)(nil), "hiber.event.Event.OrganizationEvent.OrganizationCreatedEvent")
	proto.RegisterType((*Event_OrganizationEvent_OrganizationUpdatedEvent)(nil), "hiber.event.Event.OrganizationEvent.OrganizationUpdatedEvent")
	proto.RegisterType((*Event_OrganizationEvent_OrganizationDeletedEvent)(nil), "hiber.event.Event.OrganizationEvent.OrganizationDeletedEvent")
	proto.RegisterType((*BundledEvent)(nil), "hiber.event.BundledEvent")
	proto.RegisterType((*EventSelection)(nil), "hiber.event.EventSelection")
	proto.RegisterType((*ListEventsRequest)(nil), "hiber.event.ListEventsRequest")
	proto.RegisterType((*ListEventsRequest_Response)(nil), "hiber.event.ListEventsRequest.Response")
	proto.RegisterType((*ListEventsRequest_Response_EventTypeResponse)(nil), "hiber.event.ListEventsRequest.Response.EventTypeResponse")
	proto.RegisterType((*EventStreamRequest)(nil), "hiber.event.EventStreamRequest")
	proto.RegisterEnum("hiber.event.ListEventsRequest_Sort", ListEventsRequest_Sort_name, ListEventsRequest_Sort_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for EventService service

type EventServiceClient interface {
	List(ctx context.Context, in *ListEventsRequest, opts ...grpc.CallOption) (*ListEventsRequest_Response, error)
	Stream(ctx context.Context, in *EventStreamRequest, opts ...grpc.CallOption) (EventService_StreamClient, error)
}

type eventServiceClient struct {
	cc *grpc.ClientConn
}

func NewEventServiceClient(cc *grpc.ClientConn) EventServiceClient {
	return &eventServiceClient{cc}
}

func (c *eventServiceClient) List(ctx context.Context, in *ListEventsRequest, opts ...grpc.CallOption) (*ListEventsRequest_Response, error) {
	out := new(ListEventsRequest_Response)
	err := grpc.Invoke(ctx, "/hiber.event.EventService/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventServiceClient) Stream(ctx context.Context, in *EventStreamRequest, opts ...grpc.CallOption) (EventService_StreamClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_EventService_serviceDesc.Streams[0], c.cc, "/hiber.event.EventService/Stream", opts...)
	if err != nil {
		return nil, err
	}
	x := &eventServiceStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type EventService_StreamClient interface {
	Recv() (*Event, error)
	grpc.ClientStream
}

type eventServiceStreamClient struct {
	grpc.ClientStream
}

func (x *eventServiceStreamClient) Recv() (*Event, error) {
	m := new(Event)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for EventService service

type EventServiceServer interface {
	List(context.Context, *ListEventsRequest) (*ListEventsRequest_Response, error)
	Stream(*EventStreamRequest, EventService_StreamServer) error
}

func RegisterEventServiceServer(s *grpc.Server, srv EventServiceServer) {
	s.RegisterService(&_EventService_serviceDesc, srv)
}

func _EventService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListEventsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hiber.event.EventService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).List(ctx, req.(*ListEventsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventService_Stream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(EventStreamRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(EventServiceServer).Stream(m, &eventServiceStreamServer{stream})
}

type EventService_StreamServer interface {
	Send(*Event) error
	grpc.ServerStream
}

type eventServiceStreamServer struct {
	grpc.ServerStream
}

func (x *eventServiceStreamServer) Send(m *Event) error {
	return x.ServerStream.SendMsg(m)
}

var _EventService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hiber.event.EventService",
	HandlerType: (*EventServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _EventService_List_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Stream",
			Handler:       _EventService_Stream_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "event.proto",
}

func init() { proto.RegisterFile("event.proto", fileDescriptor5) }

var fileDescriptor5 = []byte{
	// 3439 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x5b, 0x4b, 0x8c, 0x1c, 0x57,
	0xd5, 0x76, 0xf5, 0x6b, 0xba, 0x4f, 0xf7, 0xf4, 0x74, 0xdf, 0x69, 0xcf, 0xb4, 0xdb, 0x7f, 0x6c,
	0x67, 0x92, 0xdf, 0xb1, 0x95, 0xa4, 0xfd, 0xca, 0x9f, 0x38, 0xfe, 0xf3, 0x9a, 0x97, 0xe3, 0x89,
	0x3c, 0xf6, 0xb8, 0x66, 0x9c, 0xa0, 0x08, 0x54, 0xdc, 0xe9, 0xba, 0x6e, 0x17, 0xae, 0x47, 0xbb,
	0xaa, 0x7a, 0xec, 0x89, 0x60, 0x81, 0x00, 0x09, 0x89, 0x0d, 0x6c, 0xb3, 0x40, 0x48, 0xa0, 0x28,
	0x42, 0x88, 0x05, 0x82, 0x25, 0x8f, 0x0d, 0x48, 0x88, 0x1d, 0x3b, 0x24, 0xc4, 0x8e, 0x0d, 0x1b,
	0x56, 0x2c, 0x02, 0x41, 0xa0, 0xfb, 0xaa, 0xae, 0x57, 0xf7, 0xd4, 0x0c, 0x1e, 0xe2, 0x64, 0xd7,
	0x75, 0xee, 0x39, 0xdf, 0x79, 0xdc, 0x47, 0x9d, 0x73, 0xea, 0x36, 0x54, 0xc9, 0x0e, 0xb1, 0xfd,
	0xee, 0xc0, 0x75, 0x7c, 0x07, 0x55, 0xef, 0x1a, 0xdb, 0xc4, 0xed, 0x32, 0x52, 0x07, 0xb6, 0xb1,
	0x47, 0xf8, 0x40, 0xe7, 0x98, 0x61, 0xfb, 0xa4, 0xef, 0x62, 0xdf, 0x70, 0x6c, 0x0d, 0x3f, 0xf0,
	0x34, 0xc3, 0x11, 0x32, 0x9d, 0xb9, 0xf0, 0x90, 0x75, 0xdf, 0x97, 0xf4, 0xaa, 0xe5, 0xe8, 0xc4,
	0x12, 0x0f, 0x2d, 0xf6, 0xa0, 0xf9, 0x2e, 0xb6, 0xbd, 0x3b, 0xc4, 0x15, 0xd4, 0x26, 0xa7, 0xf6,
	0x4c, 0x6c, 0x48, 0x46, 0xe4, 0xb8, 0x7d, 0x6c, 0x1b, 0xef, 0x31, 0x38, 0x41, 0x9b, 0x19, 0x0c,
	0xb7, 0x4d, 0xc3, 0xbb, 0x1b, 0xc8, 0x55, 0x7c, 0xdc, 0x97, 0x5a, 0x7c, 0xe7, 0x1e, 0x91, 0x8c,
	0x30, 0xf4, 0x02, 0x9e, 0xe9, 0x07, 0x64, 0xfb, 0xae, 0xe3, 0xdc, 0xe3, 0x8f, 0x0b, 0xdf, 0xf8,
	0x12, 0x14, 0x57, 0xa9, 0x5b, 0xe8, 0x18, 0x94, 0x0d, 0x4f, 0x23, 0xae, 0xeb, 0xb8, 0x6d, 0xe5,
	0x94, 0x72, 0xa6, 0xac, 0x4e, 0x19, 0xde, 0x2a, 0x7d, 0x44, 0x6f, 0xc3, 0x34, 0xb7, 0x68, 0x38,
	0xd0, 0xb1, 0x4f, 0xf4, 0xf6, 0x33, 0xa7, 0x94, 0x33, 0xd5, 0x8b, 0xe7, 0xba, 0xa1, 0xb0, 0x74,
	0x19, 0x4a, 0x77, 0x9d, 0xf2, 0x85, 0x7e, 0xde, 0xe6, 0x12, 0x8c, 0x72, 0xed, 0x88, 0x5a, 0xb3,
	0x42, 0x44, 0xe4, 0xc0, 0x1c, 0xc7, 0x35, 0x9d, 0x1e, 0x8f, 0x93, 0x54, 0x90, 0x63, 0x0a, 0x5e,
	0xca, 0xa0, 0xe0, 0xba, 0x10, 0x8d, 0x29, 0xe2, 0x81, 0x8d, 0x0d, 0xa2, 0xcf, 0xc3, 0x0c, 0x57,
	0x88, 0x7b, 0xbe, 0xb1, 0xc3, 0x34, 0x3d, 0xcd, 0x34, 0x5d, 0xc8, 0xa0, 0x69, 0x51, 0xca, 0x48,
	0x1d, 0x75, 0x2b, 0x42, 0x46, 0x1b, 0xc0, 0xe7, 0x56, 0xf3, 0x7c, 0x6c, 0x92, 0x76, 0x9e, 0x21,
	0x3f, 0x9f, 0x01, 0x79, 0x93, 0xf2, 0x4b, 0x54, 0xb0, 0x02, 0x12, 0xfa, 0xb2, 0x0c, 0x90, 0x45,
	0x3c, 0x0f, 0xf7, 0x89, 0xe6, 0x92, 0x1e, 0x31, 0x76, 0x88, 0xde, 0x2e, 0x30, 0xf0, 0x95, 0x3d,
	0xc0, 0xb9, 0x54, 0x88, 0x2e, 0x28, 0xaa, 0x80, 0x89, 0x46, 0x2b, 0x36, 0x88, 0x76, 0xe1, 0x68,
	0x54, 0xbb, 0xee, 0x3a, 0x83, 0x01, 0xd1, 0xdb, 0x45, 0xa6, 0x7c, 0xf9, 0x80, 0xca, 0x57, 0x38,
	0x8a, 0xd4, 0x3d, 0x6b, 0x25, 0xc7, 0x52, 0x54, 0x13, 0x13, 0xef, 0x12, 0xbd, 0x5d, 0xfa, 0xcf,
	0x54, 0x73, 0x94, 0x74, 0xd5, 0x7c, 0x0c, 0x7d, 0x5b, 0x81, 0x13, 0x51, 0xdd, 0x3d, 0x6c, 0xdb,
	0x8e, 0xaf, 0x6d, 0x13, 0x6d, 0x80, 0x5d, 0x8f, 0xe8, 0xed, 0x29, 0x66, 0xc4, 0x5b, 0x07, 0x34,
	0x62, 0x99, 0xc1, 0x2d, 0x91, 0x0d, 0x06, 0x26, 0x6d, 0xe9, 0x58, 0x63, 0x59, 0xd0, 0x75, 0x60,
	0x3b, 0x58, 0xc3, 0xba, 0x4e, 0xf4, 0x76, 0x99, 0x69, 0x7f, 0x36, 0x45, 0xfb, 0x6d, 0x8f, 0xb8,
	0xa3, 0x5f, 0x8b, 0x94, 0x5b, 0xc2, 0x57, 0x86, 0x92, 0x82, 0x54, 0xa8, 0x31, 0x34, 0x97, 0x58,
	0x0e, 0x5d, 0x4a, 0x95, 0xb1, 0xeb, 0x34, 0x8a, 0xa7, 0x72, 0x7e, 0x89, 0x58, 0x1d, 0x8e, 0x68,
	0x01, 0xa6, 0x61, 0xef, 0x18, 0x74, 0x57, 0x9d, 0xcd, 0x88, 0xb9, 0xc6, 0xf9, 0x23, 0x98, 0x82,
	0x86, 0x08, 0xcc, 0x72, 0xaf, 0x7b, 0x3d, 0xe2, 0x79, 0x9a, 0x4b, 0xee, 0x0f, 0x89, 0xe7, 0xb7,
	0x81, 0x41, 0x5f, 0xda, 0xdb, 0x7d, 0x26, 0xa6, 0x72, 0x29, 0xa9, 0xa0, 0x39, 0x8c, 0x8f, 0xa0,
	0x07, 0x72, 0x8f, 0xc9, 0x43, 0x98, 0x6e, 0x5f, 0x97, 0x3a, 0x31, 0xc3, 0x34, 0xbd, 0x3e, 0x6e,
	0x9a, 0xb7, 0x04, 0x7f, 0x0a, 0x69, 0x93, 0x23, 0x44, 0xb7, 0x57, 0x6c, 0x10, 0x7d, 0x05, 0xda,
	0x31, 0xc5, 0x3d, 0x6c, 0xf7, 0x88, 0x69, 0x12, 0xbd, 0xdd, 0x60, 0xaa, 0x17, 0x0f, 0xa0, 0x7a,
	0x59, 0x62, 0x48, 0xe5, 0x73, 0x56, 0xea, 0x30, 0x7a, 0x0f, 0xe6, 0x63, 0xea, 0x83, 0xc3, 0xa5,
	0xc9, 0xb4, 0xbf, 0x71, 0x00, 0xed, 0xf1, 0x83, 0xe5, 0xa8, 0x95, 0x36, 0x8a, 0xbe, 0xae, 0xc0,
	0xf1, 0x98, 0x72, 0xba, 0xc3, 0x02, 0x03, 0xd0, 0xe4, 0x5d, 0x3e, 0xc1, 0x80, 0x1b, 0x8e, 0x1f,
	0xb7, 0xa1, 0x6d, 0x8d, 0x61, 0x40, 0xdf, 0x57, 0xe0, 0x74, 0x22, 0x06, 0xfe, 0xd0, 0xb5, 0x93,
	0x6b, 0x61, 0x96, 0x59, 0xb4, 0x7e, 0xa0, 0x90, 0x50, 0xc4, 0x31, 0x2b, 0x63, 0xc1, 0xda, 0x93,
	0x15, 0x99, 0x30, 0x1b, 0xca, 0x07, 0x88, 0xae, 0x31, 0xed, 0xed, 0x16, 0xb3, 0xe8, 0xca, 0xe4,
	0x43, 0x68, 0x99, 0x8a, 0x84, 0xa8, 0xcb, 0x1c, 0x22, 0xd8, 0x0e, 0x56, 0x9c, 0x88, 0x0c, 0x68,
	0xb1, 0xd4, 0x41, 0x23, 0x0f, 0x07, 0x86, 0xbb, 0xab, 0x3d, 0xc0, 0xae, 0x6d, 0xd8, 0xfd, 0xf6,
	0x3c, 0x53, 0xf7, 0x7f, 0x29, 0xea, 0xb6, 0x28, 0x7b, 0xf8, 0x27, 0x13, 0x7c, 0x87, 0xcb, 0x49,
	0x4d, 0xc8, 0x4f, 0x0c, 0xd1, 0xb4, 0x22, 0xa4, 0x8a, 0xe8, 0xed, 0xf6, 0xd8, 0xb4, 0x22, 0x55,
	0x47, 0x28, 0xad, 0xf0, 0x43, 0xc4, 0x11, 0x6e, 0xcf, 0x25, 0xec, 0x1d, 0x7f, 0x22, 0x33, 0xee,
	0x32, 0x97, 0x88, 0xe2, 0x0a, 0xe2, 0x08, 0x57, 0x27, 0x26, 0xa1, 0xb8, 0x4f, 0x65, 0xc6, 0x5d,
	0xe1, 0x12, 0x51, 0x5c, 0x41, 0x44, 0x2e, 0xb4, 0xc2, 0xd9, 0x5d, 0x60, 0xf6, 0xff, 0x32, 0xf8,
	0x57, 0x53, 0xe0, 0x6f, 0x86, 0xd8, 0x93, 0x94, 0x98, 0x13, 0xb3, 0x4e, 0x72, 0x2c, 0xa1, 0x53,
	0x26, 0x5e, 0xc7, 0x0e, 0xa8, 0x33, 0x96, 0x7e, 0x45, 0x74, 0xca, 0xec, 0x2b, 0xae, 0x53, 0x86,
	0xf1, 0xf4, 0x01, 0x75, 0xc6, 0x82, 0x1a, 0xd1, 0x29, 0x63, 0xfb, 0x05, 0x68, 0x06, 0x59, 0x72,
	0x10, 0xd8, 0x93, 0x4c, 0x61, 0x37, 0x45, 0xe1, 0x86, 0xe4, 0x15, 0xdb, 0x27, 0x1a, 0xc9, 0x46,
	0x00, 0x25, 0xc3, 0x18, 0x81, 0x97, 0x31, 0x3c, 0x95, 0x15, 0x3e, 0x16, 0xb4, 0x11, 0xbc, 0x8c,
	0x58, 0x04, 0x5e, 0x86, 0xeb, 0xc9, 0xac, 0xf0, 0xb1, 0xf8, 0x8c, 0xe0, 0x65, 0x70, 0x2c, 0x98,
	0x1f, 0xc1, 0xe3, 0xa1, 0xef, 0x68, 0xba, 0xe1, 0xe1, 0x6d, 0xfa, 0x02, 0x3a, 0x33, 0xf6, 0x2d,
	0x1b, 0x53, 0xb2, 0x38, 0xf4, 0x9d, 0x15, 0x21, 0x15, 0x9c, 0xfa, 0x01, 0x6a, 0x78, 0x14, 0xbd,
	0x0b, 0x23, 0x13, 0xb4, 0x3b, 0xd8, 0xa0, 0x7a, 0x16, 0xc6, 0x26, 0x0a, 0x31, 0x3d, 0x57, 0x19,
	0xbf, 0xd4, 0x30, 0x2a, 0x7d, 0x38, 0xbd, 0xf3, 0xab, 0x0e, 0xc0, 0xe8, 0xdc, 0xeb, 0x7c, 0xb3,
	0x04, 0xcd, 0x44, 0xfd, 0x81, 0x16, 0xa0, 0x16, 0x5e, 0x23, 0xac, 0xcc, 0xa9, 0xa8, 0x11, 0x1a,
	0x7a, 0x12, 0x78, 0x8d, 0xa2, 0xd9, 0x43, 0x6b, 0x9b, 0xb8, 0xac, 0x12, 0xa9, 0xa8, 0x3c, 0xb1,
	0xbf, 0xc1, 0x48, 0xe8, 0x75, 0xa8, 0xe9, 0x86, 0x37, 0x30, 0xf1, 0xae, 0x66, 0x63, 0x8b, 0x88,
	0x8c, 0xe4, 0x7f, 0x84, 0x0f, 0x5c, 0xe3, 0xb2, 0x49, 0xb0, 0x4b, 0xdd, 0xde, 0xf4, 0x5d, 0xc3,
	0xee, 0xab, 0x55, 0x21, 0x71, 0x03, 0x5b, 0x04, 0xad, 0xc2, 0x14, 0xb6, 0x7d, 0x62, 0xdb, 0xb8,
	0x5d, 0x3d, 0xa5, 0x9c, 0xa9, 0x07, 0xc9, 0x1c, 0x2f, 0x0d, 0x99, 0xe1, 0xdd, 0x0d, 0xe2, 0x1a,
	0x83, 0xbb, 0xc4, 0xc5, 0xa6, 0xd7, 0xbd, 0x46, 0x47, 0x17, 0xb9, 0x88, 0x2a, 0x65, 0xd1, 0x32,
	0xd4, 0x7b, 0x43, 0xcf, 0x77, 0x2c, 0x4d, 0xa2, 0xd5, 0x32, 0x58, 0x32, 0xcd, 0x65, 0x04, 0x1a,
	0x3a, 0x0d, 0xf9, 0xfe, 0xc0, 0x6b, 0x4f, 0x33, 0xc9, 0x56, 0x44, 0x72, 0xc9, 0x71, 0x4c, 0x82,
	0x6d, 0x95, 0x32, 0xa0, 0x67, 0xa1, 0x2c, 0xab, 0xb4, 0x76, 0x9d, 0x31, 0xcf, 0x08, 0x66, 0x59,
	0x64, 0xa9, 0x01, 0x03, 0xda, 0x86, 0xea, 0x60, 0x64, 0x7e, 0x7b, 0xe6, 0x54, 0x7e, 0x52, 0x3e,
	0x31, 0xa6, 0x5c, 0x0c, 0x47, 0x60, 0xd5, 0xf6, 0xdd, 0x5d, 0x35, 0x0c, 0x8a, 0x2e, 0x42, 0xd1,
	0x76, 0x7c, 0xe2, 0x89, 0x5c, 0x69, 0xb2, 0xd3, 0x9c, 0x15, 0x9d, 0x87, 0x96, 0x47, 0x7a, 0x43,
	0x97, 0x68, 0xec, 0x39, 0xd8, 0xb1, 0x4d, 0x56, 0xef, 0x22, 0x3e, 0x76, 0x83, 0x0e, 0xc9, 0x1d,
	0xf8, 0x34, 0x14, 0x7c, 0xc3, 0x22, 0xa2, 0xde, 0x6a, 0x08, 0x25, 0x5b, 0x86, 0x45, 0x3c, 0x1f,
	0x5b, 0x03, 0x95, 0x8d, 0xa2, 0x05, 0x28, 0xf8, 0xb8, 0xef, 0xb5, 0x8b, 0xcc, 0xd1, 0xba, 0xe0,
	0xa2, 0xd5, 0xf8, 0x16, 0xee, 0xab, 0x6c, 0x0c, 0xb5, 0xa0, 0xe8, 0x1b, 0xbe, 0x49, 0x58, 0x09,
	0x53, 0x51, 0xf9, 0x03, 0x3a, 0x05, 0x55, 0x9d, 0x78, 0x3d, 0xd7, 0x18, 0xb0, 0xc8, 0x4e, 0xf1,
	0xd5, 0x16, 0x22, 0x75, 0x5e, 0x83, 0x46, 0x3c, 0x10, 0xa8, 0x01, 0xf9, 0x7b, 0x64, 0x57, 0xac,
	0x5f, 0xfa, 0x93, 0xa2, 0xef, 0x60, 0x73, 0x48, 0xc4, 0x7a, 0xe5, 0x0f, 0x57, 0x72, 0x97, 0x95,
	0xce, 0x77, 0x72, 0x70, 0x6c, 0x6c, 0xa5, 0xfc, 0xa8, 0xb6, 0x44, 0x78, 0x75, 0xe4, 0xf7, 0x5a,
	0x1d, 0x9f, 0x7c, 0x4c, 0x7f, 0x97, 0x83, 0x99, 0x58, 0xe5, 0xfd, 0xa8, 0x22, 0x71, 0x05, 0x8e,
	0x59, 0xf8, 0xa1, 0x61, 0x0d, 0x2d, 0xcd, 0xb0, 0x59, 0x9b, 0xc1, 0xf0, 0x77, 0x35, 0xba, 0x70,
	0x1d, 0x9d, 0x85, 0xa6, 0xa8, 0xce, 0x0b, 0x86, 0xb5, 0x60, 0x7c, 0x83, 0x0d, 0x67, 0x0c, 0xcc,
	0x25, 0xa8, 0x99, 0xd8, 0xf3, 0x65, 0x79, 0x2a, 0xaa, 0xf1, 0x24, 0x77, 0x95, 0x72, 0x89, 0x82,
	0x32, 0x88, 0x66, 0x29, 0x4b, 0x34, 0xa7, 0x26, 0x44, 0xb3, 0x9c, 0x8c, 0xe6, 0x87, 0x39, 0x98,
	0x4d, 0xe9, 0x90, 0x3c, 0xaa, 0x88, 0x3e, 0x01, 0x20, 0x2b, 0x71, 0x83, 0x87, 0xb0, 0xa0, 0x56,
	0x04, 0x65, 0x2d, 0x6b, 0xd0, 0xce, 0xc2, 0x94, 0x47, 0x6c, 0x5f, 0xc3, 0xb2, 0x80, 0x4c, 0x32,
	0x96, 0x28, 0xc3, 0xa2, 0x1f, 0x84, 0x6a, 0x2a, 0x4b, 0xa8, 0xca, 0x13, 0x42, 0x55, 0x49, 0x86,
	0xea, 0x63, 0x80, 0x5a, 0xb8, 0x31, 0xd0, 0xf9, 0xbd, 0xdc, 0x9d, 0x69, 0x9d, 0x99, 0x47, 0x15,
	0xc1, 0x4b, 0x30, 0x25, 0x17, 0x0b, 0xdf, 0x9c, 0xc7, 0x92, 0xef, 0x1b, 0xa9, 0x5f, 0x72, 0x06,
	0x61, 0x28, 0x4c, 0x08, 0xc3, 0x4b, 0xb2, 0x84, 0x25, 0x0f, 0x7d, 0xe2, 0xda, 0xd8, 0xd4, 0x74,
	0xb2, 0x63, 0xf4, 0xd8, 0x44, 0xf1, 0xc8, 0xf0, 0x02, 0x70, 0x55, 0x0c, 0xaf, 0xb0, 0xd1, 0x35,
	0x7d, 0x14, 0xbf, 0xe2, 0x84, 0xf8, 0x95, 0x12, 0xf1, 0x0b, 0x26, 0x7b, 0x6a, 0xd2, 0x64, 0x77,
	0xfe, 0x96, 0x83, 0xf6, 0xb8, 0x8e, 0xd3, 0xa3, 0x8a, 0xe9, 0x59, 0x68, 0x88, 0x76, 0x98, 0xdc,
	0x88, 0x9e, 0xd8, 0xde, 0x33, 0x82, 0x2e, 0x94, 0x7b, 0xe1, 0xf0, 0x17, 0xf6, 0x1d, 0xfe, 0x49,
	0xc7, 0xdf, 0x79, 0x69, 0xe6, 0x5d, 0x82, 0x4d, 0xff, 0x2e, 0x0b, 0x58, 0xfd, 0xe2, 0xb4, 0xe0,
	0xbd, 0xc6, 0x88, 0xc2, 0x6a, 0xfe, 0x70, 0xd0, 0x2d, 0x1e, 0xc4, 0xbd, 0x32, 0x31, 0xee, 0x7f,
	0x8d, 0xc7, 0x3d, 0xd4, 0x6e, 0xfb, 0x44, 0xd7, 0xf2, 0x53, 0x30, 0xcd, 0x1a, 0x88, 0x9a, 0x47,
	0x7a, 0x8e, 0xad, 0x7b, 0x6c, 0x1e, 0xf2, 0x6a, 0x8d, 0x11, 0x37, 0x39, 0xed, 0x53, 0x19, 0xf1,
	0x1f, 0xe5, 0xe0, 0xe4, 0x1e, 0xbd, 0xc5, 0x47, 0x15, 0xf8, 0x33, 0xd0, 0x88, 0xb6, 0x45, 0x83,
	0xc3, 0xb8, 0x1e, 0x6e, 0x5d, 0x66, 0x3e, 0x91, 0xe7, 0xa0, 0xe4, 0x12, 0xec, 0x39, 0xb6, 0x38,
	0x03, 0xc4, 0xd3, 0xa1, 0xbe, 0xa9, 0xde, 0xcf, 0x01, 0x8c, 0x5a, 0x22, 0x9d, 0x6f, 0xe5, 0x44,
	0x95, 0x10, 0xe9, 0x80, 0x3c, 0xa2, 0x78, 0x3d, 0x0f, 0x45, 0xd6, 0xb0, 0x11, 0xcb, 0x74, 0x3e,
	0xb9, 0x4c, 0x99, 0x56, 0x95, 0x73, 0x65, 0x0c, 0xda, 0x41, 0xcf, 0xcd, 0x0c, 0xef, 0xb4, 0xce,
	0x4f, 0xab, 0x80, 0x92, 0xcd, 0xac, 0xce, 0x47, 0x8a, 0x78, 0x43, 0xa5, 0xb5, 0xb0, 0xd0, 0x8b,
	0x50, 0x96, 0xbd, 0x32, 0x16, 0xa8, 0xea, 0xc5, 0x4e, 0xd2, 0xd1, 0xa0, 0xbf, 0x15, 0xf0, 0x26,
	0x82, 0x9c, 0x4b, 0x09, 0xb2, 0x0c, 0x49, 0x3e, 0x53, 0x9e, 0x58, 0xc8, 0xb2, 0x5e, 0xf6, 0x17,
	0xb6, 0xce, 0x3f, 0x14, 0x38, 0x3e, 0xa1, 0xbb, 0xfa, 0x19, 0xf7, 0xfe, 0xef, 0x0a, 0x74, 0xc6,
	0x77, 0x77, 0x3f, 0xe3, 0xce, 0xff, 0x53, 0x81, 0x27, 0x26, 0x76, 0x96, 0x3f, 0xe3, 0xfe, 0x7f,
	0x90, 0x87, 0x67, 0x32, 0xf6, 0xb1, 0xd1, 0x32, 0xcc, 0xc4, 0xfa, 0xe6, 0x19, 0x02, 0x52, 0x77,
	0x23, 0x80, 0xe8, 0x4d, 0x68, 0x3a, 0xae, 0xd1, 0x37, 0x68, 0x16, 0x19, 0xc0, 0xe4, 0xf6, 0x84,
	0x69, 0x48, 0xa1, 0x10, 0x50, 0x4d, 0x58, 0x63, 0x1a, 0x36, 0xcb, 0xca, 0x68, 0x74, 0x9e, 0x9e,
	0x80, 0xc1, 0xb8, 0xaf, 0x1b, 0x36, 0x51, 0xab, 0x6e, 0xf0, 0xdb, 0x4b, 0x4c, 0x54, 0x61, 0xc2,
	0x44, 0x15, 0x33, 0x4d, 0xd4, 0x61, 0xbc, 0xd3, 0x7e, 0x5e, 0x84, 0x4a, 0xf0, 0xe5, 0xab, 0xf3,
	0x81, 0x02, 0xf5, 0xe8, 0xc7, 0xbf, 0x4c, 0xef, 0x33, 0x04, 0x85, 0xa1, 0x17, 0xbc, 0xc7, 0xd8,
	0xef, 0x91, 0x41, 0xf9, 0x09, 0x06, 0x15, 0xc6, 0x67, 0x2e, 0x13, 0x43, 0xd2, 0xf9, 0x50, 0x81,
	0x46, 0xfc, 0xab, 0xe2, 0x63, 0x6a, 0xea, 0x0f, 0x85, 0xa9, 0xe1, 0x8f, 0x95, 0x99, 0x4c, 0x6d,
	0x41, 0x91, 0x58, 0xd8, 0x30, 0x65, 0x53, 0x86, 0x3d, 0x1c, 0xb2, 0xb1, 0x3f, 0x56, 0x60, 0x2e,
	0xfd, 0xf3, 0xe7, 0x81, 0xa3, 0x9b, 0xed, 0x30, 0x0a, 0xdc, 0x2a, 0x4c, 0x70, 0xab, 0x98, 0x5c,
	0xbf, 0x5f, 0x9d, 0x83, 0x7a, 0xb4, 0xd7, 0xdb, 0xf9, 0x8b, 0x02, 0xb5, 0x70, 0xeb, 0x3d, 0x93,
	0xe5, 0x2f, 0xc0, 0x94, 0xec, 0xef, 0x47, 0x4f, 0x8d, 0xd1, 0x2d, 0x99, 0x40, 0x8d, 0x2a, 0x59,
	0x83, 0x9d, 0x99, 0xcf, 0xb2, 0x33, 0xf7, 0xe7, 0x59, 0x10, 0xb7, 0xd2, 0xc4, 0x09, 0xfb, 0x4d,
	0x1d, 0x6a, 0xfb, 0x6e, 0xc9, 0xad, 0xc3, 0xac, 0xe8, 0x5d, 0x6a, 0x61, 0x23, 0x72, 0x19, 0x5a,
	0xa1, 0x48, 0x08, 0xae, 0x84, 0x2c, 0xdd, 0x84, 0xd9, 0x01, 0x76, 0x7d, 0x03, 0x9b, 0xa2, 0x25,
	0xaa, 0xe9, 0xd8, 0xc7, 0x62, 0xc2, 0x4f, 0x8e, 0x8f, 0x63, 0x77, 0x05, 0xfb, 0x78, 0x29, 0xd7,
	0x56, 0xd4, 0xa6, 0x90, 0xe7, 0x3a, 0x29, 0x19, 0x7d, 0x0e, 0xa6, 0xc4, 0x5d, 0x23, 0xf1, 0x25,
	0xfd, 0x95, 0xfd, 0x7d, 0x11, 0xe9, 0xbe, 0xc3, 0xa5, 0x39, 0xed, 0xda, 0x11, 0x55, 0xc2, 0xa1,
	0x9b, 0x50, 0xb0, 0xee, 0xfb, 0xbe, 0xe8, 0xfc, 0xbe, 0xbc, 0x4f, 0xd8, 0xf5, 0x5b, 0x5b, 0x5b,
	0x01, 0x26, 0x03, 0x42, 0x6f, 0xc3, 0x94, 0xb8, 0xbc, 0x25, 0xbe, 0x7d, 0xff, 0xff, 0x3e, 0x31,
	0x17, 0xdf, 0xd9, 0x5c, 0x73, 0x46, 0xa8, 0x25, 0xfc, 0xc0, 0x5b, 0x73, 0x7c, 0xa4, 0xca, 0x03,
	0x00, 0x8d, 0xfd, 0x58, 0x3b, 0x09, 0x75, 0x95, 0xca, 0x06, 0xa0, 0xe2, 0xf8, 0x58, 0x87, 0x96,
	0x9c, 0x7a, 0x86, 0xa3, 0xdd, 0x31, 0x4c, 0x9f, 0xb8, 0xa2, 0x70, 0x38, 0x2e, 0x54, 0x5c, 0x65,
	0x44, 0xae, 0xc3, 0x13, 0xa8, 0xc1, 0xd4, 0x33, 0x2a, 0xe7, 0x08, 0xc3, 0xf1, 0x8a, 0x46, 0xc0,
	0x15, 0xd3, 0xe0, 0xd8, 0x6b, 0x33, 0x01, 0xc7, 0xa8, 0x02, 0xee, 0x4d, 0x90, 0x54, 0xcd, 0xc7,
	0x7d, 0x09, 0x56, 0x8a, 0x54, 0xea, 0x02, 0x6c, 0x0b, 0xf7, 0x03, 0xa8, 0x86, 0x10, 0xda, 0xc2,
	0x7d, 0x01, 0x74, 0x75, 0x64, 0x17, 0xeb, 0x92, 0x12, 0xcd, 0xf3, 0xb1, 0x2f, 0x3b, 0x3f, 0xe9,
	0x1f, 0x2a, 0xa4, 0x6a, 0xd6, 0x87, 0x24, 0x9b, 0x94, 0x3f, 0xd8, 0xe0, 0xe5, 0x2c, 0x1b, 0xbc,
	0x32, 0x61, 0x83, 0xc3, 0xf8, 0x0d, 0x5e, 0x9d, 0xb8, 0xc1, 0xff, 0xa4, 0xc0, 0x74, 0x64, 0x29,
	0xa3, 0x06, 0xe4, 0x87, 0xae, 0x29, 0xdb, 0xf7, 0x43, 0xd7, 0x44, 0x2f, 0x40, 0xc9, 0x23, 0x3d,
	0x97, 0xf8, 0x99, 0xb6, 0xb0, 0xe0, 0x45, 0xab, 0x50, 0xeb, 0x39, 0xb6, 0x4f, 0x17, 0x81, 0xbf,
	0x3b, 0xe0, 0x07, 0x74, 0xfd, 0xe2, 0x82, 0x90, 0x95, 0x17, 0xfd, 0x84, 0xee, 0xee, 0x32, 0x67,
	0xdd, 0xda, 0x1d, 0x10, 0xb5, 0xda, 0x1b, 0x3d, 0xa0, 0xd7, 0xa0, 0xde, 0x23, 0xae, 0x6f, 0xdc,
	0x31, 0x7a, 0x74, 0xeb, 0x1b, 0xf2, 0x4a, 0xd0, 0x7c, 0xc4, 0x88, 0x9b, 0xcc, 0x67, 0x6c, 0xae,
	0xe9, 0xea, 0x74, 0x88, 0x7d, 0x4d, 0xef, 0xfc, 0x22, 0x0f, 0x30, 0xda, 0x54, 0x29, 0xde, 0x6d,
	0xc5, 0xec, 0xcc, 0x31, 0x3b, 0xe5, 0x9d, 0xbb, 0xd0, 0x3d, 0xc9, 0x2e, 0xbb, 0x27, 0x49, 0xb1,
	0x46, 0x47, 0xcc, 0x58, 0xb3, 0xe9, 0xac, 0x39, 0x03, 0xa3, 0x17, 0xbc, 0x47, 0xe9, 0x03, 0x7a,
	0x03, 0xf2, 0xf7, 0x1d, 0xde, 0xe0, 0xa9, 0x07, 0x1f, 0x49, 0xf7, 0x50, 0x41, 0x8f, 0xab, 0xee,
	0x2d, 0x67, 0x53, 0xa5, 0xa2, 0xe8, 0x15, 0x00, 0x43, 0x27, 0x36, 0x75, 0x30, 0xd8, 0x07, 0x93,
	0xe7, 0x23, 0xc4, 0x8f, 0x2e, 0x43, 0x99, 0xbe, 0x34, 0xd9, 0x87, 0xc1, 0x52, 0x06, 0xd9, 0x80,
	0x9b, 0x4a, 0x0e, 0xb0, 0xe7, 0x3d, 0x70, 0x5c, 0x79, 0xc3, 0x6c, 0x0f, 0x49, 0xc9, 0x9d, 0x32,
	0x81, 0xe5, 0x7d, 0x4d, 0xe0, 0x0f, 0x14, 0xa8, 0x85, 0x4f, 0x30, 0x74, 0x02, 0xaa, 0xe2, 0x3c,
	0xd4, 0xe8, 0x54, 0xf2, 0x64, 0xa0, 0xc2, 0x0f, 0xb5, 0xdb, 0xae, 0x99, 0xa2, 0x30, 0xbf, 0x1f,
	0x85, 0xe8, 0x05, 0x98, 0xa3, 0xd3, 0xa0, 0xf5, 0x4c, 0x83, 0x2e, 0x8a, 0x58, 0xb8, 0x2b, 0x6a,
	0x8b, 0x8e, 0x2e, 0xb3, 0xc1, 0xb5, 0x60, 0xac, 0x33, 0x0d, 0xd5, 0xd0, 0x89, 0xb8, 0x54, 0x87,
	0x5a, 0xf0, 0x0e, 0xc4, 0x3e, 0x66, 0x59, 0x43, 0xf8, 0x93, 0x77, 0xd6, 0xac, 0x41, 0x7e, 0x57,
	0xcf, 0x90, 0x35, 0x08, 0xd6, 0xc7, 0x20, 0x6b, 0xf8, 0xad, 0x02, 0xcd, 0xc4, 0xa7, 0xf7, 0x4c,
	0x1e, 0xd7, 0x21, 0x67, 0x70, 0x67, 0xf3, 0x6a, 0xce, 0x78, 0x1c, 0x7c, 0xf9, 0x97, 0x02, 0xd5,
	0xd0, 0xe7, 0xfd, 0x4c, 0x5e, 0x8c, 0xba, 0x87, 0xb9, 0x48, 0xf7, 0xf0, 0x22, 0x94, 0xc4, 0xcd,
	0x82, 0xfc, 0x9e, 0xd3, 0x29, 0x38, 0x0f, 0xb3, 0x8c, 0xce, 0xf8, 0xc1, 0xe2, 0xfd, 0x12, 0xc0,
	0xe8, 0xca, 0x50, 0xe7, 0x97, 0x0a, 0x34, 0x13, 0xd7, 0x91, 0x32, 0x85, 0xe5, 0x0c, 0x3d, 0x13,
	0xef, 0x11, 0x99, 0x09, 0x22, 0xe9, 0x0b, 0xbb, 0x0c, 0xce, 0x20, 0x55, 0xce, 0x70, 0xc8, 0x55,
	0xc8, 0xaf, 0x15, 0x98, 0x1f, 0x73, 0x19, 0xec, 0x53, 0xe5, 0x47, 0x30, 0x13, 0xe1, 0x0b, 0x67,
	0x9f, 0x4e, 0x0f, 0xf6, 0x7d, 0x34, 0x3e, 0x2e, 0x1e, 0xfc, 0xa1, 0x0c, 0xcd, 0xc4, 0x45, 0xb0,
	0xce, 0x9f, 0x15, 0x68, 0x8f, 0xbb, 0xf4, 0x86, 0xce, 0xb1, 0x7a, 0x86, 0xbe, 0x5a, 0x52, 0xbc,
	0x44, 0x7c, 0x28, 0x2c, 0x8c, 0xae, 0xc4, 0x8b, 0xc7, 0x53, 0xc2, 0x98, 0xc8, 0xdf, 0x2e, 0xc2,
	0x22, 0xa3, 0x12, 0xf2, 0x70, 0xb3, 0xc7, 0x8f, 0x0b, 0x51, 0x3f, 0xf7, 0x5d, 0x2a, 0x9e, 0x87,
	0x56, 0xf8, 0xb6, 0x52, 0xe4, 0x2f, 0x16, 0x15, 0x15, 0x85, 0xee, 0x25, 0xc9, 0x3b, 0x2f, 0xcf,
	0x01, 0xda, 0xc1, 0xbe, 0xf8, 0xb4, 0x11, 0xf0, 0xf3, 0xb9, 0x6d, 0xec, 0x60, 0x9f, 0x7f, 0xe0,
	0x90, 0xdc, 0xb7, 0x60, 0x06, 0xeb, 0xba, 0x4b, 0xbc, 0xd1, 0x75, 0x1a, 0x5e, 0x8a, 0x9c, 0xd9,
	0x2b, 0x84, 0xdd, 0x45, 0x2e, 0xa7, 0xd6, 0x05, 0x80, 0x84, 0x5c, 0x81, 0x59, 0xc3, 0xd3, 0xb6,
	0x87, 0x9e, 0x61, 0x87, 0x61, 0x8b, 0x13, 0x52, 0xff, 0xa6, 0xe1, 0x2d, 0x09, 0x7e, 0x89, 0x72,
	0x1e, 0x5a, 0xdb, 0x86, 0x69, 0x1a, 0x76, 0x3f, 0xea, 0x38, 0x3f, 0xa5, 0x91, 0x18, 0x0b, 0x3b,
	0xfe, 0x45, 0x98, 0x97, 0x12, 0x71, 0x97, 0xa6, 0xf6, 0xe9, 0xd2, 0x51, 0x01, 0xb4, 0x18, 0xf5,
	0xec, 0x16, 0xcc, 0xd0, 0x14, 0x16, 0xf7, 0xfc, 0x00, 0xb9, 0x9c, 0x11, 0x79, 0x99, 0xcb, 0xa9,
	0x75, 0x01, 0x20, 0x21, 0x0f, 0x77, 0xf9, 0xfd, 0x31, 0xb6, 0xcd, 0x22, 0xa7, 0xc8, 0xbe, 0xb7,
	0xd9, 0x05, 0x68, 0x89, 0x14, 0x4a, 0x4b, 0x69, 0x81, 0xcf, 0x8a, 0xb1, 0x9b, 0xb1, 0x1e, 0xda,
	0xe1, 0x9d, 0x2d, 0x4b, 0x53, 0x50, 0x64, 0x45, 0xf4, 0xc2, 0xcf, 0x14, 0xa8, 0x2d, 0x0d, 0x6d,
	0x3d, 0x48, 0x42, 0xa8, 0x3c, 0xad, 0x55, 0x14, 0x56, 0x48, 0x48, 0x79, 0x36, 0xc6, 0x4a, 0x11,
	0x36, 0x4a, 0xd3, 0x10, 0x6c, 0x39, 0x43, 0x9b, 0xd7, 0x6d, 0x45, 0x55, 0x3c, 0x1d, 0xd8, 0xea,
	0x73, 0x00, 0xec, 0x6e, 0x0f, 0xbf, 0xe2, 0x3d, 0xce, 0xf6, 0x0a, 0xe5, 0x61, 0xa6, 0x2c, 0x7c,
	0x2d, 0x0f, 0x75, 0xf6, 0x6b, 0x93, 0x98, 0xa4, 0xc7, 0x30, 0x9e, 0x83, 0x12, 0x13, 0xf7, 0x44,
	0x13, 0xbe, 0x95, 0xd6, 0x12, 0x50, 0x05, 0x0f, 0xe5, 0x66, 0x75, 0xbf, 0x27, 0x0e, 0xbe, 0x56,
	0x5a, 0xc5, 0xaf, 0x0a, 0x1e, 0x74, 0x19, 0x20, 0xc8, 0xa4, 0x3c, 0x91, 0x62, 0xb5, 0xa3, 0x12,
	0x41, 0x7e, 0xe5, 0xa9, 0x21, 0x5e, 0x74, 0x3a, 0x48, 0xb2, 0xc2, 0x2f, 0x93, 0x50, 0x2b, 0x40,
	0x24, 0x5a, 0xe7, 0x00, 0xe8, 0xcc, 0x68, 0x2e, 0xb6, 0xfb, 0x69, 0x89, 0xa3, 0x4a, 0xe9, 0x6a,
	0xc5, 0x97, 0x3f, 0xd1, 0x49, 0xa8, 0xb2, 0x3f, 0xad, 0x79, 0x9a, 0x63, 0x9b, 0xbb, 0x6c, 0xa3,
	0x96, 0x55, 0xe0, 0xa4, 0x9b, 0xb6, 0xb9, 0x8b, 0xce, 0x42, 0x63, 0x68, 0x6f, 0xf3, 0xb9, 0xd5,
	0x44, 0x64, 0xca, 0x8c, 0x6b, 0x26, 0xa0, 0xf3, 0xa0, 0xa0, 0x17, 0x61, 0xde, 0xb0, 0x7b, 0xe6,
	0x50, 0x27, 0x9a, 0x4b, 0x3c, 0xc7, 0xdc, 0x19, 0x49, 0x54, 0x98, 0xc4, 0x51, 0x31, 0xac, 0x8a,
	0x51, 0x2e, 0xb7, 0xf0, 0x51, 0x11, 0x9a, 0xd7, 0x0d, 0x31, 0x27, 0xc1, 0x3f, 0x4b, 0xb2, 0x9c,
	0xce, 0x2f, 0x43, 0xc5, 0x93, 0x33, 0x27, 0x66, 0xe0, 0x78, 0xb2, 0x4b, 0x14, 0x4c, 0xae, 0x3a,
	0xe2, 0x46, 0x17, 0x00, 0x06, 0xb8, 0x6f, 0xd8, 0xe1, 0x5b, 0x77, 0x4d, 0x21, 0xbb, 0x11, 0x0c,
	0xa8, 0x21, 0x26, 0xf4, 0x12, 0x14, 0x3c, 0xc7, 0xf5, 0x45, 0x75, 0xfc, 0x54, 0x44, 0x51, 0xc2,
	0xfe, 0xee, 0xa6, 0xe3, 0xfa, 0x2a, 0x13, 0xe8, 0x7c, 0x37, 0x0f, 0x65, 0x95, 0x78, 0x03, 0xc7,
	0xf6, 0x68, 0xa1, 0x3a, 0x25, 0xff, 0x8c, 0xc3, 0x2d, 0x3e, 0x31, 0x19, 0x48, 0x95, 0xec, 0xe8,
	0x42, 0xb0, 0x34, 0x79, 0xae, 0x7d, 0x2c, 0x22, 0x18, 0xde, 0x7f, 0xc1, 0xfa, 0xd4, 0x53, 0x66,
	0x8f, 0xdf, 0xd0, 0x78, 0x79, 0x0f, 0xf3, 0xa5, 0xbd, 0xa1, 0x4d, 0x2b, 0x28, 0x89, 0x89, 0xef,
	0xfc, 0x44, 0x81, 0x66, 0x82, 0x2d, 0xe3, 0x19, 0xf0, 0x6a, 0x8a, 0x85, 0x39, 0x66, 0x21, 0x4a,
	0xce, 0x64, 0x72, 0xcd, 0x5d, 0x4e, 0x99, 0xc6, 0x76, 0x62, 0x1a, 0xa9, 0x37, 0x43, 0xd3, 0x0f,
	0xcf, 0xe6, 0x5b, 0x85, 0xb2, 0xd2, 0xc8, 0xbd, 0x55, 0x28, 0xe7, 0x1b, 0x85, 0x85, 0x87, 0x50,
	0xa0, 0xd3, 0x85, 0x66, 0x61, 0x66, 0x6b, 0x6d, 0x7d, 0x55, 0x5b, 0x59, 0xdd, 0x5c, 0x5e, 0xbd,
	0xb1, 0xb2, 0x76, 0xe3, 0xcd, 0xc6, 0x11, 0x84, 0xa0, 0xce, 0x88, 0x8b, 0x01, 0x4d, 0x41, 0x2d,
	0x68, 0xac, 0xdf, 0x5c, 0x59, 0x5d, 0xd7, 0x6e, 0xdc, 0x5e, 0x5f, 0x5a, 0x55, 0xe9, 0x58, 0x23,
	0x87, 0x8e, 0x42, 0x33, 0x42, 0xa5, 0x30, 0x8d, 0x3c, 0xea, 0xc0, 0x5c, 0x84, 0xbc, 0xb9, 0xb1,
	0xba, 0xbc, 0x76, 0x75, 0x6d, 0x75, 0xa5, 0x51, 0x58, 0xf0, 0x00, 0xf1, 0x35, 0xea, 0xbb, 0x04,
	0x5b, 0xff, 0x9d, 0xb5, 0x7f, 0xf1, 0x7b, 0x0a, 0xd4, 0xc4, 0xa8, 0xbb, 0x63, 0xf4, 0x08, 0xba,
	0x09, 0x05, 0xba, 0x02, 0xd0, 0x1e, 0x4b, 0xb1, 0xf3, 0x4c, 0xc6, 0x45, 0x83, 0x5e, 0x87, 0x12,
	0xf7, 0x08, 0x9d, 0x4c, 0xb1, 0x29, 0xec, 0x6b, 0x27, 0x65, 0x9a, 0xcf, 0x2b, 0x4b, 0xe7, 0xe1,
	0x78, 0xdf, 0x74, 0xb6, 0xb1, 0x29, 0x46, 0xf1, 0xc0, 0xe8, 0xf6, 0xdd, 0x41, 0x8f, 0xb3, 0x2d,
	0x95, 0x19, 0xdf, 0xe2, 0xc0, 0xd8, 0x38, 0xf2, 0x6e, 0x91, 0x71, 0x6c, 0x97, 0xd8, 0x5f, 0x72,
	0x2f, 0xfd, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x6d, 0xf5, 0x62, 0xf3, 0x7b, 0x3c, 0x00, 0x00,
}
